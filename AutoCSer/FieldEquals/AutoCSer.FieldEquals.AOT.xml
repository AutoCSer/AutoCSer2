<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.FieldEquals.AOT</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.CodeGenerator.FieldEqualsAttribute">
            <summary>
            对象对比代码生成配置（用于 AOT 环境）
            </summary>
        </member>
        <member name="T:AutoCSer.FieldEquals.CombinationTemplateConfig">
            <summary>
            自定义简单组合模板参数
            </summary>
        </member>
        <member name="T:AutoCSer.FieldEquals.Comparor">
            <summary>
            对象对比
            </summary>
            <summary>
            对象对比
            </summary>
            <summary>
            对象对比
            </summary>
            <summary>
            对象对比
            </summary>
            <summary>
            对象对比
            </summary>
            <summary>
            对象对比
            </summary>
            <summary>
            对象对比
            </summary>
            <summary>
            对象对比
            </summary>
            <summary>
            对象对比
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EnumULong``1(``0,``0)">
            <summary>
            枚举值比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EnumULongMethod">
            <summary>
            枚举值比较
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.FieldEqualsMethodName">
            <summary>
            对象对比方法名称
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.MemberMapFieldEqualsMethodName">
            <summary>
            对象对比方法名称
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.CallEquals``1(``0,``0)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.ObjectEquals(System.Object,System.Object)">
            <summary>
            对象比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.Equals(System.Single,System.Single)">
            <summary>
            浮点数比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.Equals(System.Double,System.Double)">
            <summary>
            浮点数比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EquatableEquals``1(``0,``0)">
            <summary>
            对象比较
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EquatableEqualsMethod">
            <summary>
            对象比较
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.ReferenceEqualsMethod">
            <summary>
            对象比较
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.ArrayEqualsMethod">
            <summary>
            数组比较
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.NullableEqualsMethod">
            <summary>
            对象比较
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.DictionaryEqualsMethod">
            <summary>
            字典比较
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.CollectionEqualsMethod">
            <summary>
            集合比较
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.KeyValueEqualsMethod">
            <summary>
            键值对比较
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.KeyValuePairEqualsMethod">
            <summary>
            键值对比较
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.ReflectionMethodName``1(System.Object[])">
            <summary>
            代码生成模板
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EqualsMethodName``1(System.Object[])">
            <summary>
            代码生成模板
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.ReferenceEquals``1(``0,``0)">
            <summary>
            对象比较
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.NullableEquals``1(System.Nullable{``0},System.Nullable{``0})">
            <summary>
            对象比较
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.ArrayEquals``1(``0[],``0[])">
            <summary>
            数组比较
            </summary>
            <typeparam name="T"></typeparam>
            <param name="leftArray"></param>
            <param name="rightArray"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.CollectionEquals``2(``0,``0)">
            <summary>
            集合比较
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="VT"></typeparam>
            <param name="leftArray"></param>
            <param name="rightArray"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.DictionaryEquals``3(``0,``0)">
            <summary>
            字典比较
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="KT"></typeparam>
            <typeparam name="VT"></typeparam>
            <param name="leftArray"></param>
            <param name="rightArray"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.KeyValueEquals``2(AutoCSer.KeyValue{``0,``1},AutoCSer.KeyValue{``0,``1})">
            <summary>
            键值对比较
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="VT"></typeparam>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.KeyValuePairEquals``2(System.Collections.Generic.KeyValuePair{``0,``1},System.Collections.Generic.KeyValuePair{``0,``1})">
            <summary>
            键值对比较
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="VT"></typeparam>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.IsBreakpoint">
            <summary>
            测试断点信息添加到输出队列（DEBUG 有效）
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.Breakpoint(System.Type,System.String,System.String,System.Int32)">
            <summary>
            检查返回数据
            </summary>
            <param name="type">比较类型</param>
            <param name="callerMemberName">调用成员名称</param>
            <param name="callerFilePath">调用源代码文件路径</param>
            <param name="callerLineNumber">调用源代码行号</param>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.Breakpoint``1(``0,``0,System.String,System.String,System.Int32)">
            <summary>
            测试断点信息添加到输出队列
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left"></param>
            <param name="right"></param>
            <param name="callerMemberName">调用成员名称</param>
            <param name="callerFilePath">调用源代码文件路径</param>
            <param name="callerLineNumber">调用源代码行号</param>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.Breakpoint``1(System.Type,``0,``0,System.String,System.String,System.Int32)">
            <summary>
            测试断点信息添加到输出队列
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type">比较类型</param>
            <param name="left"></param>
            <param name="right"></param>
            <param name="callerMemberName">调用成员名称</param>
            <param name="callerFilePath">调用源代码文件路径</param>
            <param name="callerLineNumber">调用源代码行号</param>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.Equals``1(``0,``0)">
            <summary>
            对象对比
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.Equals``1(``0,``0,AutoCSer.Metadata.MemberMap{``0})">
            <summary>
            对象对比
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.GetFieldEqualsFields(System.Reflection.FieldInfo[])">
            <summary>
            获取对象对比成员
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EnumLong``1(``0,``0)">
            <summary>
            枚举值比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EnumLongMethod">
            <summary>
            枚举值比较
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EnumUInt``1(``0,``0)">
            <summary>
            枚举值比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EnumUIntMethod">
            <summary>
            枚举值比较
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EnumInt``1(``0,``0)">
            <summary>
            枚举值比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EnumIntMethod">
            <summary>
            枚举值比较
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EnumUShort``1(``0,``0)">
            <summary>
            枚举值比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EnumUShortMethod">
            <summary>
            枚举值比较
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EnumShort``1(``0,``0)">
            <summary>
            枚举值比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EnumShortMethod">
            <summary>
            枚举值比较
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EnumByte``1(``0,``0)">
            <summary>
            枚举值比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EnumByteMethod">
            <summary>
            枚举值比较
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor.EnumSByte``1(``0,``0)">
            <summary>
            枚举值比较
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor.EnumSByteMethod">
            <summary>
            枚举值比较
            </summary>
        </member>
        <member name="T:AutoCSer.FieldEquals.Comparor`1">
            <summary>
            对象对比
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor`1.EqualsComparor">
            <summary>
            对象对比委托
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Comparor`1.MemberMapEqualsComparor">
            <summary>
            对象对比委托
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor`1.MemberMapEquals(`0,`0,AutoCSer.Metadata.MemberMap{`0})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor`1.notSupport(`0,`0)">
            <summary>
            不支持类型
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.FieldEquals.Comparor`1.getDelegate">
            <summary>
            获取对象比较委托
            </summary>
            <returns>对象比较委托</returns>
        </member>
        <member name="T:AutoCSer.FieldEquals.IgnoreAttribute">
            <summary>
            忽略成员配置
            </summary>
        </member>
        <member name="T:AutoCSer.FieldEquals.Member">
            <summary>
            成员信息
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Member.Field">
            <summary>
            字段信息
            </summary>
        </member>
        <member name="F:AutoCSer.FieldEquals.Member.NameMember">
            <summary>
            成员名称信息
            </summary>
        </member>
        <member name="M:AutoCSer.FieldEquals.Member.#ctor(System.Reflection.FieldInfo,System.Reflection.MemberInfo)">
            <summary>
            成员信息
            </summary>
            <param name="field"></param>
            <param name="nameMember"></param>
        </member>
    </members>
</doc>
