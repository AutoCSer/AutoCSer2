<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.Search</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.Search.ArrayPool">
            <summary>
            数组池参数
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool.ArraySizeBit">
            <summary>
            节点池数组二进制位长度
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool.ArraySize">
            <summary>
            节点池数组长度
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool.ArraySizeAnd">
            <summary>
            节点池数组最大索引位置
            </summary>
        </member>
        <member name="T:AutoCSer.Search.ArrayPool`1">
            <summary>
            数组池
            </summary>
            <typeparam name="T">数组类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool`1.Pool">
            <summary>
            数组池
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool`1.currentArray">
            <summary>
            当前分配数组
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool`1.freeIndexs">
            <summary>
            空闲索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool`1.currentArrayIndex">
            <summary>
            当前分配数组位置
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool`1.currentArrayBaseIndex">
            <summary>
            当前分配数组起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool`1.poolIndex">
            <summary>
            池数组位置
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool`1.freeIndex">
            <summary>
            当前空闲索引
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ArrayPool`1.Lock">
            <summary>
            数组池访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Search.ArrayPool`1.#ctor(System.Int32,System.Int32)">
            <summary>
            数组池
            </summary>
            <param name="freeCount">空闲索引集合初始化数量</param>
            <param name="currentArrayIndex">当前分配数组位置</param>
        </member>
        <member name="M:AutoCSer.Search.ArrayPool`1.GetNoLock(`0[]@)">
            <summary>
            获取可用索引
            </summary>
            <param name="array">当前分配数组</param>
            <returns>索引</returns>
        </member>
        <member name="M:AutoCSer.Search.ArrayPool`1.create">
            <summary>
            创建当前分配数组
            </summary>
        </member>
        <member name="M:AutoCSer.Search.ArrayPool`1.FreeNoLock``1(AutoCSer.KeyValue{``0,System.Int32}[])">
            <summary>
            释放索引
            </summary>
            <param name="indexs"></param>
        </member>
        <member name="M:AutoCSer.Search.ArrayPool`1.FreeNoLock(System.Int32)">
            <summary>
            释放索引
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:AutoCSer.Search.ArrayPool`1.FreeNoLock(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            释放索引
            </summary>
            <param name="indexs"></param>
        </member>
        <member name="T:AutoCSer.Search.SearchResult`1">
            <summary>
            搜索结果
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.SearchResult`1.context">
            <summary>
            队列操作上下文
            </summary>
        </member>
        <member name="F:AutoCSer.Search.SearchResult`1.version">
            <summary>
            搜索结果版本
            </summary>
        </member>
        <member name="P:AutoCSer.Search.SearchResult`1.CharResult">
            <summary>
            搜索结果数量与单字符搜索结果
            </summary>
        </member>
        <member name="M:AutoCSer.Search.SearchResult`1.#ctor(AutoCSer.Search.StaticSearcherQueueContext{`0})">
            <summary>
            搜索结果
            </summary>
            <param name="context">队列操作上下文</param>
        </member>
        <member name="M:AutoCSer.Search.SearchResult`1.GetWordResults(AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,System.Collections.Generic.HashSet{`0}}}@)">
            <summary>
            获取分词搜索结果
            </summary>
            <param name="results">按结果数量排序的分词搜索结果</param>
            <returns>返回 false 表示检测到并发操作冲突错误</returns>
        </member>
        <member name="T:AutoCSer.Search.SearchCharResult`2">
            <summary>
            搜索结果数量与单字符搜索结果
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
            <typeparam name="RT">搜索结果类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.SearchCharResult`2.context">
            <summary>
            队列操作上下文
            </summary>
        </member>
        <member name="F:AutoCSer.Search.SearchCharResult`2.version">
            <summary>
            搜索结果版本
            </summary>
        </member>
        <member name="M:AutoCSer.Search.SearchCharResult`2.#ctor(AutoCSer.Search.StaticSearcherQueueContext{`0,`1},System.Int32)">
            <summary>
            搜索结果数量
            </summary>
            <param name="context">队列操作上下文</param>
            <param name="version">搜索结果版本</param>
        </member>
        <member name="P:AutoCSer.Search.SearchCharResult`2.WordResultCount">
            <summary>
            分词搜索结果数量
            </summary>
        </member>
        <member name="P:AutoCSer.Search.SearchCharResult`2.CharResultCount">
            <summary>
            单字符搜索结果数量
            </summary>
        </member>
        <member name="P:AutoCSer.Search.SearchCharResult`2.LessResultCount">
            <summary>
            未匹配分词数量
            </summary>
        </member>
        <member name="P:AutoCSer.Search.SearchCharResult`2.LessWords">
            <summary>
            未匹配分词集合
            </summary>
        </member>
        <member name="M:AutoCSer.Search.SearchCharResult`2.GetCharResults(AutoCSer.LeftArray{AutoCSer.KeyValue{System.Char,System.Collections.Generic.HashSet{`0}}}@)">
            <summary>
            获取单字符搜索结果
            </summary>
            <param name="results">按结果数量排序的单字符搜索结果</param>
            <returns>返回 false 表示检测到并发操作冲突错误</returns>
        </member>
        <member name="T:AutoCSer.Search.WordCountIndexs.SearchResult`1">
            <summary>
            搜索结果
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.WordCountIndexs.SearchResult`1.context">
            <summary>
            队列操作上下文
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordCountIndexs.SearchResult`1.version">
            <summary>
            搜索结果版本
            </summary>
        </member>
        <member name="P:AutoCSer.Search.WordCountIndexs.SearchResult`1.CharResult">
            <summary>
            搜索结果数量与单字符搜索结果
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.SearchResult`1.#ctor(AutoCSer.Search.WordCountIndexs.QueueContext{`0})">
            <summary>
            搜索结果
            </summary>
            <param name="context">队列操作上下文</param>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.SearchResult`1.GetWordResults(AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordCountIndexs.WordCounter{`0}}}@)">
            <summary>
            获取分词搜索结果
            </summary>
            <param name="results">按结果数量排序的分词搜索结果</param>
            <returns>返回 false 表示检测到并发操作冲突错误</returns>
        </member>
        <member name="T:AutoCSer.Search.WordCountIndexs.QueueContext`1">
            <summary>
            绑定结果池的分词搜索器 队列操作上下文（不允许并发操作，仅允许串行操作）
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.QueueContext`1.#ctor(AutoCSer.Search.WordCountIndexs.StaticSearcher{`0})">
            <summary>
            队列操作上下文
            </summary>
            <param name="searcher">绑定结果池的分词搜索器</param>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.QueueContext`1.setWordResults">
            <summary>
            设置分词位置结果
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.QueueContext`1.Search(System.String,System.Int32)">
            <summary>
            关键字搜索
            </summary>
            <param name="text">关键字文本</param>
            <param name="size">关键字文本长度</param>
            <returns>搜索结果</returns>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.QueueContext`1.GetWordResults(System.Int32,AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordCountIndexs.WordCounter{`0}}}@)">
            <summary>
            获取分词搜索结果
            </summary>
            <param name="version">更新版本编号</param>
            <param name="results">按结果数量排序的分词搜索结果</param>
            <returns>返回 false 表示检测到并发操作冲突错误</returns>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.QueueContext`1.wordResultSort(AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordCountIndexs.WordCounter{`0}},AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordCountIndexs.WordCounter{`0}})">
            <summary>
            分词搜索结果按结果数量排序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Search.WordCountIndexs.QueueContext`1.wordResultSortHandle">
            <summary>
            分词搜索结果按结果数量排序
            </summary>
        </member>
        <member name="T:AutoCSer.Search.WordCountIndexs.StaticSearcher`1">
            <summary>
            绑定结果池的分词搜索器（搜索结果包含关键字词频与位置索引）
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.WordCountIndexs.StaticSearcher`1.QueueContext">
            <summary>
            队列操作上下文
            </summary>
        </member>
        <member name="P:AutoCSer.Search.WordCountIndexs.StaticSearcher`1.WordCount">
            <summary>
            总词频
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.StaticSearcher`1.#ctor(AutoCSer.Search.StaticStringTrieGraph,System.Boolean)">
            <summary>
            绑定结果池的分词搜索器
            </summary>
            <param name="trieGraph">绑定静态节点池的字符串 Trie 图</param>
            <param name="isSingleCharacter">默认为 true 表示支持单字符搜索结果，但是会造成占用大量内存；设置为 false 则应该设置中文词库，否则无法搜索中文内容</param>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.StaticSearcher`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.StaticSearcher`1.add(`0,AutoCSer.ReusableDictionary{AutoCSer.HashSubString,AutoCSer.Search.ResultIndexs})">
            <summary>
            添加新的数据
            </summary>
            <param name="key">数据标识</param>
            <param name="values">分词结果</param>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.StaticSearcher`1.remove(`0,AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordTypeEnum}}@)">
            <summary>
            删除数据结果
            </summary>
            <param name="key">数据标识</param>
            <param name="words">文本分词结果</param>
        </member>
        <member name="T:AutoCSer.Search.WordCountIndexs.WordCounter`1">
            <summary>
            关键字索引结果+词频
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.Search.WordCountIndexs.WordCounter`1.Result">
            <summary>
            数据结果集合
            </summary>
        </member>
        <member name="P:AutoCSer.Search.WordCountIndexs.WordCounter`1.ResultCount">
            <summary>
            搜索结果数量
            </summary>
        </member>
        <member name="P:AutoCSer.Search.WordCountIndexs.WordCounter`1.Results">
            <summary>
            数据结果集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordCountIndexs.WordCounter`1.Count">
            <summary>
            词频
            </summary>
        </member>
        <member name="P:AutoCSer.Search.WordCountIndexs.WordCounter`1.WordCount">
            <summary>
            词频
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordCountIndexs.WordCounter`1.WordType">
            <summary>
            分词类型
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.WordCounter`1.#ctor(`0,AutoCSer.Search.ResultIndexs)">
            <summary>
            关键字索引结果+词频
            </summary>
            <param name="key"></param>
            <param name="indexs"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.WordCounter`1.Add(`0,AutoCSer.Search.ResultIndexs)">
            <summary>
            添加结果
            </summary>
            <param name="key"></param>
            <param name="indexs"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.WordCountIndexs.WordCounter`1.Remove(`0)">
            <summary>
            删除结果
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Search.WordIndexs.QueueContext`1">
            <summary>
            绑定结果池的分词搜索器 队列操作上下文（不允许并发操作，仅允许串行操作）
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.QueueContext`1.#ctor(AutoCSer.Search.WordIndexs.StaticSearcher{`0})">
            <summary>
            队列操作上下文
            </summary>
            <param name="searcher">绑定结果池的分词搜索器</param>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.QueueContext`1.setWordResults">
            <summary>
            设置分词位置结果
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.QueueContext`1.Search(System.String,System.Int32)">
            <summary>
            关键字搜索
            </summary>
            <param name="text">关键字文本</param>
            <param name="size">关键字文本长度</param>
            <returns>搜索结果</returns>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.QueueContext`1.GetWordResults(System.Int32,AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,System.Collections.Generic.Dictionary{`0,AutoCSer.HeadLeftArray{System.Int32}}}}@)">
            <summary>
            获取分词搜索结果
            </summary>
            <param name="version">更新版本编号</param>
            <param name="results">按结果数量排序的分词搜索结果</param>
            <returns>返回 false 表示检测到并发操作冲突错误</returns>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.QueueContext`1.wordResultSort(AutoCSer.KeyValue{AutoCSer.SubString,System.Collections.Generic.Dictionary{`0,AutoCSer.HeadLeftArray{System.Int32}}},AutoCSer.KeyValue{AutoCSer.SubString,System.Collections.Generic.Dictionary{`0,AutoCSer.HeadLeftArray{System.Int32}}})">
            <summary>
            分词搜索结果按结果数量排序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Search.WordIndexs.QueueContext`1.wordResultSortHandle">
            <summary>
            分词搜索结果按结果数量排序
            </summary>
        </member>
        <member name="T:AutoCSer.Search.WordIndexs.SearchResult`1">
            <summary>
            搜索结果
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.WordIndexs.SearchResult`1.context">
            <summary>
            队列操作上下文
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordIndexs.SearchResult`1.version">
            <summary>
            搜索结果版本
            </summary>
        </member>
        <member name="P:AutoCSer.Search.WordIndexs.SearchResult`1.CharResult">
            <summary>
            搜索结果数量与单字符搜索结果
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.SearchResult`1.#ctor(AutoCSer.Search.WordIndexs.QueueContext{`0})">
            <summary>
            搜索结果
            </summary>
            <param name="context">队列操作上下文</param>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.SearchResult`1.GetWordResults(AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,System.Collections.Generic.Dictionary{`0,AutoCSer.HeadLeftArray{System.Int32}}}}@)">
            <summary>
            获取分词搜索结果
            </summary>
            <param name="results">按结果数量排序的分词搜索结果</param>
            <returns>返回 false 表示检测到并发操作冲突错误</returns>
        </member>
        <member name="T:AutoCSer.Search.WordIndexs.StaticSearcher`1">
            <summary>
            绑定结果池的分词搜索器（搜索结果包含关键字位置索引）
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.WordIndexs.StaticSearcher`1.QueueContext">
            <summary>
            队列操作上下文
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.StaticSearcher`1.#ctor(AutoCSer.Search.StaticStringTrieGraph,System.Boolean)">
            <summary>
            绑定结果池的分词搜索器
            </summary>
            <param name="trieGraph">绑定静态节点池的字符串 Trie 图</param>
            <param name="isSingleCharacter">默认为 true 表示支持单字符搜索结果，但是会造成占用大量内存；设置为 false 则应该设置中文词库，否则无法搜索中文内容</param>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.StaticSearcher`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.StaticSearcher`1.add(`0,AutoCSer.ReusableDictionary{AutoCSer.HashSubString,AutoCSer.Search.ResultIndexs})">
            <summary>
            添加新的数据
            </summary>
            <param name="key">数据标识</param>
            <param name="values">分词结果</param>
        </member>
        <member name="M:AutoCSer.Search.WordIndexs.StaticSearcher`1.remove(`0,AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordTypeEnum}}@)">
            <summary>
            删除数据结果
            </summary>
            <param name="key">数据标识</param>
            <param name="words">文本分词结果</param>
        </member>
        <member name="T:AutoCSer.Search.Memory.Unmanaged">
            <summary>
            非托管内存
            </summary>
        </member>
        <member name="F:AutoCSer.Search.Memory.Unmanaged.AutoCSerStatic">
            <summary>
            AutoCSer 使用静态内存段，防止碎片化
            </summary>
        </member>
        <member name="M:AutoCSer.Search.Memory.Unmanaged.GetDefaultCharType">
            <summary>
            默认分词字符类型数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.Memory.Unmanaged.GetSimplified">
            <summary>
            简体字符集
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Search.ResultIndexs">
            <summary>
            索引中间结果
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ResultIndexs.index">
            <summary>
            最小文本匹配索引位置
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ResultIndexs.WordType">
            <summary>
            分词类型
            </summary>
        </member>
        <member name="F:AutoCSer.Search.ResultIndexs.indexs">
            <summary>
            其它文本匹配索引位置集合
            </summary>
        </member>
        <member name="P:AutoCSer.Search.ResultIndexs.IndexCount">
            <summary>
            索引数量
            </summary>
        </member>
        <member name="P:AutoCSer.Search.ResultIndexs.Indexs">
            <summary>
            文本匹配索引位置集合
            </summary>
        </member>
        <member name="M:AutoCSer.Search.ResultIndexs.#ctor(AutoCSer.Search.WordTypeEnum,System.Int32)">
            <summary>
            索引中间结果
            </summary>
            <param name="wordType"></param>
            <param name="index"></param>
        </member>
        <member name="M:AutoCSer.Search.ResultIndexs.Set(AutoCSer.Search.WordTypeEnum,System.Int32)">
            <summary>
            设置文本长度与分词类型
            </summary>
            <param name="wordType">分词类型</param>
            <param name="index"></param>
        </member>
        <member name="M:AutoCSer.Search.ResultIndexs.Add(System.Int32)">
            <summary>
            添加文本匹配索引位置
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:AutoCSer.Search.ResultIndexs.SortIndexs">
            <summary>
            文本匹配索引位置排序
            </summary>
        </member>
        <member name="T:AutoCSer.Search.SegmenterWordTextTypeEnum">
            <summary>
            分词文本类型
            </summary>
        </member>
        <member name="F:AutoCSer.Search.SegmenterWordTextTypeEnum.Raw">
            <summary>
            原始文本字符串
            </summary>
        </member>
        <member name="F:AutoCSer.Search.SegmenterWordTextTypeEnum.Temp">
            <summary>
            允许通过非安全指针方式修改的原始文本字符串，避免申请内存
            </summary>
        </member>
        <member name="F:AutoCSer.Search.SegmenterWordTextTypeEnum.Formated">
            <summary>
            已格式化的文本字符串
            </summary>
        </member>
        <member name="T:AutoCSer.Search.Simplified">
            <summary>
            简体字符
            </summary>
        </member>
        <member name="M:AutoCSer.Search.Simplified.FormatNotEmpty(System.Char*,System.Char*,System.Int32)">
            <summary>
            格式化搜索字符串
            </summary>
            <param name="read">读取位置</param>
            <param name="write">写入位置</param>
            <param name="length">格式化长度</param>
        </member>
        <member name="M:AutoCSer.Search.Simplified.IsMatch(System.String,System.String)">
            <summary>
            判断字符串是否匹配
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.Simplified.SetChinese(System.Byte*)">
            <summary>
            设置中文字符类型
            </summary>
            <param name="charTypeData">分词字符类型数据</param>
        </member>
        <member name="M:AutoCSer.Search.Simplified.Format(System.String)">
            <summary>
            返回格式化搜索字符串
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Search.Simplified.Chars">
            <summary>
            简体字符集
            </summary>
        </member>
        <member name="T:AutoCSer.Search.StaticSearcher">
            <summary>
            绑定结果池的分词搜索器
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcher.TrieGraph">
            <summary>
            绑定静态节点池的字符串 Trie 图
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher.#ctor(AutoCSer.Search.StaticStringTrieGraph)">
            <summary>
            绑定结果池的分词搜索器
            </summary>
            <param name="trieGraph">绑定静态节点池的字符串 Trie 图</param>
        </member>
        <member name="T:AutoCSer.Search.StaticSearcher`2">
            <summary>
            绑定结果池的分词搜索器
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
            <typeparam name="RT">搜索结果类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcher`2.Texts">
            <summary>
            原始分词文本信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcher`2.results">
            <summary>
            关键字数据结果集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcher`2.characters">
            <summary>
            单字符数据结果集合
            </summary>
        </member>
        <member name="P:AutoCSer.Search.StaticSearcher`2.IsSingleCharacter">
            <summary>
            是否支持单字符搜索结果
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`2.#ctor(AutoCSer.Search.StaticStringTrieGraph,System.Boolean)">
            <summary>
            绑定结果池的分词搜索器
            </summary>
            <param name="trieGraph">绑定静态节点池的字符串 Trie 图</param>
            <param name="isSingleCharacter">是否支持单字符搜索结果</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`2.Add(`0,System.String,AutoCSer.ReusableDictionary{AutoCSer.HashSubString,AutoCSer.Search.ResultIndexs},AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordTypeEnum}}@,System.String)">
            <summary>
            添加新的数据
            </summary>
            <param name="key">数据标识</param>
            <param name="text">原始分词文本</param>
            <param name="wordIndexs">分词结果</param>
            <param name="words">单字符分词集合</param>
            <param name="formatedText">格式化以后的分词文本</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`2.add(`0,AutoCSer.ReusableDictionary{AutoCSer.HashSubString,AutoCSer.Search.ResultIndexs})">
            <summary>
            添加新的数据
            </summary>
            <param name="key">数据标识</param>
            <param name="values">分词结果</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`2.Remove(`0,AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordTypeEnum}}@,AutoCSer.SubString)">
            <summary>
            删除数据结果
            </summary>
            <param name="key">数据标识</param>
            <param name="words">文本分词结果</param>
            <param name="formatedText">格式化以后的分词文本</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`2.remove(`0,AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordTypeEnum}}@)">
            <summary>
            删除数据结果
            </summary>
            <param name="key">数据标识</param>
            <param name="words">文本分词结果</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`2.GetResult(AutoCSer.HashSubString@)">
            <summary>
            根据关键字获取数据结果
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`2.GetResult(System.Char)">
            <summary>
            根据关键字获取数据结果
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Search.StaticSearcher`1">
            <summary>
            绑定结果池的分词搜索器
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcher`1.QueueContext">
            <summary>
            队列操作上下文
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`1.#ctor(AutoCSer.Search.StaticStringTrieGraph,System.Boolean)">
            <summary>
            绑定结果池的分词搜索器
            </summary>
            <param name="trieGraph">绑定静态节点池的字符串 Trie 图</param>
            <param name="isSingleCharacter">默认为 true 表示支持单字符搜索结果，但是会造成占用大量内存；设置为 false 则应该设置中文词库，否则无法搜索中文内容</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`1.add(`0,AutoCSer.ReusableDictionary{AutoCSer.HashSubString,AutoCSer.Search.ResultIndexs})">
            <summary>
            添加新的数据
            </summary>
            <param name="key">数据标识</param>
            <param name="values">分词结果</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcher`1.remove(`0,AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordTypeEnum}}@)">
            <summary>
            删除数据结果
            </summary>
            <param name="key">数据标识</param>
            <param name="words">文本分词结果</param>
        </member>
        <member name="T:AutoCSer.Search.StaticSearcherQueueContext`2">
            <summary>
            绑定结果池的分词搜索器 队列操作上下文（不允许并发操作，仅允许串行操作）
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
            <typeparam name="RT">搜索结果类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.searcher">
            <summary>
            绑定结果池的分词搜索器
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.charTypeData">
            <summary>
            分词字符类型集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.formatedText">
            <summary>
            分词格式化文本
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.words">
            <summary>
            文本分词结果
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.matchs">
            <summary>
            分词索引位置
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.version">
            <summary>
            更新版本编号
            </summary>
        </member>
        <member name="P:AutoCSer.Search.StaticSearcherQueueContext`2.Version">
            <summary>
            更新版本编号
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.isSingleCharacter">
            <summary>
            是否支持单字符搜索结果
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.chineseCharacter">
            <summary>
            分词文本是否存在中文字符
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.wordIndexs">
            <summary>
            文本分词位置结果
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.wordResults">
            <summary>
            分词搜索结果集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.wordResultArray">
            <summary>
            分词搜索结果集合
            </summary>
        </member>
        <member name="P:AutoCSer.Search.StaticSearcherQueueContext`2.WordResultCount">
            <summary>
            分词搜索结果数量
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.charResults">
            <summary>
            单字符搜索结果集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.charResultArray">
            <summary>
            单字符搜索结果集合
            </summary>
        </member>
        <member name="P:AutoCSer.Search.StaticSearcherQueueContext`2.CharResultCount">
            <summary>
            单字符搜索结果数量
            </summary>
        </member>
        <member name="P:AutoCSer.Search.StaticSearcherQueueContext`2.LessResultCount">
            <summary>
            未匹配分词数量
            </summary>
        </member>
        <member name="P:AutoCSer.Search.StaticSearcherQueueContext`2.LessWords">
            <summary>
            未匹配分词集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.matchMapData">
            <summary>
            匹配位置位图
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.matchMap">
            <summary>
            匹配位置位图
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.#ctor(AutoCSer.Search.StaticSearcher{`0,`1})">
            <summary>
            队列操作上下文
            </summary>
            <param name="searcher">绑定结果池的分词搜索器</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.Add(`0,System.String)">
            <summary>
            添加新的数据
            </summary>
            <param name="key">添加关键字</param>
            <param name="text">添加搜索文本内容</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.Remove(`0)">
            <summary>
            根据关键字删除数据
            </summary>
            <param name="key">删除关键字</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.WordSegment(System.String)">
            <summary>
            获取文本分词结果
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.wordSegmenter(System.String,System.Int32)">
            <summary>
            文本分词
            </summary>
            <param name="text"></param>
            <param name="formatLength"></param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.addWord(System.Int32,System.Int32,AutoCSer.Search.WordTypeEnum)">
            <summary>
            添加文本分词结果
            </summary>
            <param name="start"></param>
            <param name="length"></param>
            <param name="wordType"></param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.setWordResults">
            <summary>
            设置分词位置结果（默认不记录位置信息）
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.setResultIndexs">
            <summary>
            设置分词位置结果
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.search(System.String,System.Int32)">
            <summary>
            关键字搜索
            </summary>
            <param name="text">关键字文本</param>
            <param name="size">关键字文本长度</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.checkMatchMap(System.Int32)">
            <summary>
            检测匹配位置位图
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.GetCharResults(System.Int32,AutoCSer.LeftArray{AutoCSer.KeyValue{System.Char,System.Collections.Generic.HashSet{`0}}}@)">
            <summary>
            获取单字符搜索结果
            </summary>
            <param name="version">更新版本编号</param>
            <param name="results">按结果数量排序的单字符搜索结果</param>
            <returns>返回 false 表示检测到并发操作冲突错误</returns>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.wordSort(AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordTypeEnum},AutoCSer.KeyValue{AutoCSer.SubString,AutoCSer.Search.WordTypeEnum})">
            <summary>
            文本分词结果按照分词长度逆序排序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.wordSortHandle">
            <summary>
            文本分词结果按照分词长度逆序排序
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`2.charResultSort(AutoCSer.KeyValue{System.Char,System.Collections.Generic.HashSet{`0}},AutoCSer.KeyValue{System.Char,System.Collections.Generic.HashSet{`0}})">
            <summary>
            单字符搜索结果按结果数量排序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`2.charResultSortHandle">
            <summary>
            单字符搜索结果按结果数量排序
            </summary>
        </member>
        <member name="T:AutoCSer.Search.StaticSearcherQueueContext`1">
            <summary>
            绑定结果池的分词搜索器 队列操作上下文（不允许并发操作，仅允许串行操作）
            </summary>
            <typeparam name="T">数据标识类型</typeparam>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`1.#ctor(AutoCSer.Search.StaticSearcher{`0})">
            <summary>
            队列操作上下文
            </summary>
            <param name="searcher">绑定结果池的分词搜索器</param>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`1.Search(System.String,System.Int32)">
            <summary>
            关键字搜索
            </summary>
            <param name="text">关键字文本</param>
            <param name="size">搜索关键字文本长度，默认为 0 表示不限长度，否则取关键字文本字串</param>
            <returns>搜索结果</returns>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`1.GetWordResults(System.Int32,AutoCSer.LeftArray{AutoCSer.KeyValue{AutoCSer.SubString,System.Collections.Generic.HashSet{`0}}}@)">
            <summary>
            获取分词搜索结果
            </summary>
            <param name="version">更新版本编号</param>
            <param name="results">按结果数量排序的分词搜索结果</param>
            <returns>返回 false 表示检测到并发操作冲突错误</returns>
        </member>
        <member name="M:AutoCSer.Search.StaticSearcherQueueContext`1.wordResultSort(AutoCSer.KeyValue{AutoCSer.SubString,System.Collections.Generic.HashSet{`0}},AutoCSer.KeyValue{AutoCSer.SubString,System.Collections.Generic.HashSet{`0}})">
            <summary>
            分词搜索结果按结果数量排序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Search.StaticSearcherQueueContext`1.wordResultSortHandle">
            <summary>
            分词搜索结果按结果数量排序
            </summary>
        </member>
        <member name="T:AutoCSer.Search.StaticStringTrieGraph">
            <summary>
            绑定静态节点池的字符串 Trie 图
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticStringTrieGraph.charTypeDataLock">
            <summary>
            分词字符类型数据访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticStringTrieGraph.CharTypeData">
            <summary>
            分词字符类型数据
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticStringTrieGraph.AnyHeadChar">
            <summary>
            任意字符，用于搜索哨岗
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraph.#ctor">
            <summary>
            绑定静态节点池的字符串 Trie 图
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraph.#ctor(AutoCSer.Search.StringTrieGraph,System.Boolean)">
            <summary>
            绑定静态节点池的字符串 Trie 图
            </summary>
            <param name="trieGraph">字符串 Trie 图</param>
            <param name="isCopyCharTypeData">是否复制分词字符类型数据</param>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraph.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraph.SetBoot(System.Int32)">
            <summary>
            设置根节点
            </summary>
            <param name="boot"></param>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraph.Match(System.Char*,System.Char*,AutoCSer.LeftArray{AutoCSer.Range}@)">
            <summary>
            从左到右匹配
            </summary>
            <param name="start">匹配起始位置</param>
            <param name="end">匹配结束位置</param>
            <param name="matchs">匹配结果集合</param>
        </member>
        <member name="F:AutoCSer.Search.StaticStringTrieGraph.Null">
            <summary>
            空 Trie 图
            </summary>
        </member>
        <member name="T:AutoCSer.Search.StaticStringTrieGraphBuilder">
            <summary>
            绑定静态节点池的字符串 Trie 图创建器
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticStringTrieGraphBuilder.cache">
            <summary>
            已创建缓存集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticStringTrieGraphBuilder.nodeIndex">
            <summary>
            当前创建的节点索引
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraphBuilder.Create(AutoCSer.Search.StaticStringTrieGraph,AutoCSer.Search.StringTrieGraph)">
            <summary>
            创建 Trie 图
            </summary>
            <param name="staticGraph"></param>
            <param name="graph"></param>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraphBuilder.create(AutoCSer.Search.TrieGraphNode{System.Char})">
            <summary>
            创建节点
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraphBuilder.create(System.Collections.Generic.Dictionary{System.Char,AutoCSer.Search.TrieGraphNode{System.Char}})">
            <summary>
            创建节点集合
            </summary>
            <param name="nodes">节点集合</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraphBuilder.createLink(AutoCSer.Search.TrieGraphNode{System.Char})">
            <summary>
            创建失败节点
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraphBuilder.createLink(System.Collections.Generic.Dictionary{System.Char,AutoCSer.Search.TrieGraphNode{System.Char}})">
            <summary>
            创建失败节点
            </summary>
            <param name="nodes">节点集合</param>
        </member>
        <member name="M:AutoCSer.Search.StaticStringTrieGraphBuilder.sort(AutoCSer.KeyValue{System.Char,System.Int32},AutoCSer.KeyValue{System.Char,System.Int32})">
            <summary>
            节点字符排序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Search.StaticStringTrieGraphBuilder.sortHandle">
            <summary>
            节点字符排序委托
            </summary>
        </member>
        <member name="T:AutoCSer.Search.StaticTrieGraph`1">
            <summary>
            绑定静态节点池的 Trie 图
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.StaticTrieGraph`1.nodes">
            <summary>
            子节点
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticTrieGraph`1.boot">
            <summary>
            根节点
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticTrieGraph`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticTrieGraph`1.CancelBuilder">
            <summary>
            取消创建
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticTrieGraph`1.NodePool">
            <summary>
            节点池
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticTrieGraph`1.GetNodeIndex(AutoCSer.Search.StaticTrieGraphNode{`0}[]@)">
            <summary>
            获取可用节点
            </summary>
            <param name="nodes"></param>
            <returns>节点索引</returns>
        </member>
        <member name="T:AutoCSer.Search.StaticTrieGraphNode`1">
            <summary>
            绑定静态节点池的 Trie 图节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.Search.StaticTrieGraphNode`1.Nodes">
            <summary>
            子节点
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticTrieGraphNode`1.Link">
            <summary>
            失败节点
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StaticTrieGraphNode`1.Length">
            <summary>
            节点值长度，0 表示没有节点值
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticTrieGraphNode`1.Reset">
            <summary>
            初始化重置数据
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticTrieGraphNode`1.Set(AutoCSer.KeyValue{`0,System.Int32}[],System.Int32)">
            <summary>
            设置节点数据
            </summary>
            <param name="nodes"></param>
            <param name="length"></param>
        </member>
        <member name="M:AutoCSer.Search.StaticTrieGraphNode`1.CancelBuilder">
            <summary>
            创建错误取消节点
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticTrieGraphNode`1.Free">
            <summary>
            释放节点
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StaticTrieGraphNode`1.GetNode(`0,System.Int32@)">
            <summary>
            二分查找子节点
            </summary>
            <param name="letter"></param>
            <param name="node">子节点</param>
            <returns>false 返回失败节点</returns>
        </member>
        <member name="T:AutoCSer.Search.StringTrieGraph">
            <summary>
            字符串 Trie 图
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StringTrieGraph.charTypeDataLock">
            <summary>
            分词字符类型数据访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StringTrieGraph.CharTypeData">
            <summary>
            分词字符类型数据
            </summary>
        </member>
        <member name="F:AutoCSer.Search.StringTrieGraph.AnyHeadChar">
            <summary>
            任意字符，用于搜索哨岗
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StringTrieGraph.#ctor">
            <summary>
            字符串 Trie 图
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StringTrieGraph.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            字符串 Trie 图
            </summary>
            <param name="words">分词集合，词语中间不能存在空格</param>
            <param name="threadCount">建图并行线程数量，默认为 0 表示 CPU 逻辑处理器数量</param>
        </member>
        <member name="M:AutoCSer.Search.StringTrieGraph.Append(System.String,System.Char*)">
            <summary>
            添加分词
            </summary>
            <param name="word"></param>
            <param name="simplified"></param>
        </member>
        <member name="M:AutoCSer.Search.StringTrieGraph.buildGraph(System.Int32,System.Int32)">
            <summary>
            建图
            </summary>
            <param name="wordCount"></param>
            <param name="threadCount"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.StringTrieGraph.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Search.StringTrieGraph.GetCharTypeData">
            <summary>
            获取分词字符类型数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Search.StringTrieGraph.CreateStaticGraph(System.Boolean)">
            <summary>
            创建绑定静态节点池的字符串 Trie 图
            </summary>
            <param name="isCopyCharTypeData">默认为 true 表示复制分词字符类型数据；字符串 Trie 图无需重用的场景可以设置为 false 释放字符串 Trie 图分词字符类型数据</param>
            <returns>绑定静态节点池的字符串 Trie 图</returns>
        </member>
        <member name="M:AutoCSer.Search.StringTrieGraph.IsChineseCharacter(System.Char*,System.Char*,System.Byte*)">
            <summary>
            判断是否存在中文字符
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="charTypeData"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Search.StringTrieGraph.DefaultCharTypeData">
            <summary>
            默认分词字符类型数据
            </summary>
        </member>
        <member name="T:AutoCSer.Search.TrieGraph`1">
            <summary>
            Trie 图
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.TrieGraph`1.Boot">
            <summary>
            根节点
            </summary>
        </member>
        <member name="M:AutoCSer.Search.TrieGraph`1.#ctor">
            <summary>
            Trie 图
            </summary>
        </member>
        <member name="M:AutoCSer.Search.TrieGraph`1.BuildGraph(System.Int32)">
            <summary>
            建图
            </summary>
            <param name="threadCount">建图并行线程数量，默认为 0 表示 CPU 逻辑处理器数量</param>
        </member>
        <member name="M:AutoCSer.Search.TrieGraph`1.buildGraph">
            <summary>
            单线程建图
            </summary>
        </member>
        <member name="M:AutoCSer.Search.TrieGraph`1.buildGraph(System.Int32)">
            <summary>
            多线程并行建图
            </summary>
            <param name="threadCount">并行线程数量</param>
        </member>
        <member name="T:AutoCSer.Search.TrieGraphBuilder`1">
            <summary>
            Trie 图创建器
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphBuilder`1.boot">
            <summary>
            根节点
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphBuilder`1.Writer">
            <summary>
            当前处理结果节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphBuilder`1.reader">
            <summary>
            当前处理节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphBuilder`1.startIndex">
            <summary>
            处理节点起始索引位置
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphBuilder`1.count">
            <summary>
            处理节点数量
            </summary>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphBuilder`1.#ctor(AutoCSer.Search.TrieGraphNode{`0})">
            <summary>
            Trie 图创建器
            </summary>
            <param name="boot">根节点</param>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphBuilder`1.Set(AutoCSer.LeftArray{AutoCSer.Search.TrieGraphNode{`0}}@)">
            <summary>
            设置当前处理节点集合
            </summary>
            <param name="reader">当前处理节点集合</param>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphBuilder`1.Build">
            <summary>
            建图
            </summary>
        </member>
        <member name="T:AutoCSer.Search.TrieGraphBuilderThread`1">
            <summary>
            Trie 图创建器线程
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphBuilderThread`1.threadWait">
            <summary>
            建图线程等待
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphBuilderThread`1.waitCount">
            <summary>
            建图线程任务完成计数
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphBuilderThread`1.Exception">
            <summary>
            建图线程异常
            </summary>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphBuilderThread`1.#ctor(AutoCSer.Search.TrieGraphNode{`0},AutoCSer.Threading.AutoWaitCount)">
            <summary>
            Trie 图创建器
            </summary>
            <param name="boot">根节点</param>
            <param name="waitCount">建图线程任务完成计数</param>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphBuilderThread`1.build">
            <summary>
            建图线程
            </summary>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphBuilderThread`1.FreeThread">
            <summary>
            释放建图线程
            </summary>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphBuilderThread`1.SetThread(AutoCSer.Search.TrieGraphNode{`0}[],System.Int32,System.Int32)">
            <summary>
            设置当前处理节点集合
            </summary>
            <param name="reader">当前处理节点集合</param>
            <param name="startIndex">处理节点起始索引位置</param>
            <param name="count">处理节点节点索引位置</param>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphBuilderThread`1.Set(AutoCSer.Search.TrieGraphNode{`0}[],System.Int32,System.Int32)">
            <summary>
            设置当前处理节点集合
            </summary>
            <param name="reader">当前处理节点集合</param>
            <param name="startIndex">处理节点起始索引位置</param>
            <param name="count">处理节点节点索引位置</param>
        </member>
        <member name="T:AutoCSer.Search.TrieGraphNode`1">
            <summary>
            Trie 图节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphNode`1.Nodes">
            <summary>
            子节点
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphNode`1.Link">
            <summary>
            失败节点
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphNode`1.Length">
            <summary>
            节点值长度，0 表示没有节点值
            </summary>
        </member>
        <member name="F:AutoCSer.Search.TrieGraphNode`1.Identity">
            <summary>
            分布式搜索分词编号
            </summary>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.Create(`0)">
            <summary>
            创建子节点
            </summary>
            <param name="letter">当前字符</param>
            <returns>子节点</returns>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.Set(System.Int32,System.Int32)">
            <summary>
            设置节点值长度与分词编号
            </summary>
            <param name="length"></param>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.GetNodeCount(System.Collections.Generic.Dictionary{`0,AutoCSer.Search.TrieGraphNode{`0}},`0)">
            <summary>
            设置失败节点并获取子节点数量
            </summary>
            <param name="boot">根节点</param>
            <param name="letter">当前字符</param>
            <returns>子节点数量</returns>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.GetLinkWhereNull(`0,AutoCSer.Search.TrieGraphNode{`0}@,AutoCSer.Search.TrieGraphNode{`0}@)">
            <summary>
            子节点不存在时获取失败节点
            </summary>
            <param name="letter">当前字符</param>
            <param name="node">子节点</param>
            <param name="link">失败节点</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.GetNodeCount(AutoCSer.Search.TrieGraphNode{`0})">
            <summary>
            设置失败节点并获取子节点数量
            </summary>
            <param name="link">失败节点</param>
            <returns>子节点数量</returns>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.GetNodeCount">
            <summary>
            获取子节点数量
            </summary>
            <returns>子节点数量</returns>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.GetNode(`0,AutoCSer.Search.TrieGraphNode{`0}@)">
            <summary>
            获取子节点
            </summary>
            <param name="letter"></param>
            <param name="node"></param>
            <returns>false 返回失败节点</returns>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.CheckMatch(AutoCSer.LeftArray{AutoCSer.Search.TrieGraphNode{`0}}@)">
            <summary>
            检查节点匹配
            </summary>
            <param name="matchs"></param>
            <returns>返回 true 表示需要匹配失败节点</returns>
        </member>
        <member name="M:AutoCSer.Search.TrieGraphNode`1.FreeMatch">
            <summary>
            取消节点匹配
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Search.WordTypeEnum">
            <summary>
            分词类型
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.Chinese">
            <summary>
            中文
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.OtherLetter">
            <summary>
            其它字母
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.Letter">
            <summary>
            字母
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.Number">
            <summary>
            数字
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.Keep">
            <summary>
            保留字符
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.TrieGraph">
            <summary>
            Trie 图
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.TrieGraphHead">
            <summary>
            Trie 图首字符
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypeEnum.TrieGraphEnd">
            <summary>
            Trie 图尾字符
            </summary>
        </member>
        <member name="T:AutoCSer.Search.WordTypePoolIndex">
            <summary>
            关键字结果池索引+分词类型
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypePoolIndex.Index">
            <summary>
            结果池索引
            </summary>
        </member>
        <member name="F:AutoCSer.Search.WordTypePoolIndex.wordType">
            <summary>
            分词类型
            </summary>
        </member>
        <member name="M:AutoCSer.Search.WordTypePoolIndex.Set(System.Int32,AutoCSer.Search.WordTypeEnum)">
            <summary>
            设置结果池索引
            </summary>
            <param name="index">结果池索引</param>
            <param name="wordType">分词类型</param>
        </member>
    </members>
</doc>
