<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.CommandService.StreamPersistenceMemoryDatabase</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1">
            <summary>
            返回参数
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.#ctor">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.#ctor(`0)">
            <summary>
            返回参数
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.CreateKeepCallback">
            <summary>
            创建持续回调返回参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.Unknown">
            <summary>
            未知错误或者异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PersistenceCallbackException">
            <summary>
            持久化成功但是执行异常，该节点可能处于错误状态，如果是内存不足异常则需要重启服务重新加载，对于程序逻辑异常还需要修复该错误逻辑
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeIndexOutOfRange">
            <summary>
            节点编号超出索引范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeIdentityNotMatch">
            <summary>
            节点标识不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.Disposed">
            <summary>
            服务已释放资源
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.IgnorePersistenceCallbackException">
            <summary>
            持久化回调异常写入位置信息，服务端将忽略该请求
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundSessionObject">
            <summary>
            反序列化参数操作没有找到套接字会话对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundClientNodeCreator">
            <summary>
            客户端节点生成失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeCreating">
            <summary>
            关键字匹配的节点正在创建中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundNodeCreator">
            <summary>
            服务端节点生成失败，说明该接口类型不符合节点定义
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeTypeNotMatch">
            <summary>
            节点类型不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.OnlyMaster">
            <summary>
            该调用仅支持主服务节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NullKey">
            <summary>
            关键字为 null
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundMethod">
            <summary>
            没有找到调用方法，说明服务端与客户端定义不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.MethodIndexOutOfRange">
            <summary>
            方法编号超出索引范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CallTypeNotMatch">
            <summary>
            调用方法类型不匹配，说明服务端与客户端定义不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotAllowClientCall">
            <summary>
            调用方法不允许客户端调用
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PersistenceSerializeException">
            <summary>
            持久化序列化异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PersistenceWriteException">
            <summary>
            持久化写入异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.LoadParameterSizeError">
            <summary>
            加载数据参数缓冲区大小不一致
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.LoadParameterDeserializeError">
            <summary>
            加载数据参数反序列化失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.LoadException">
            <summary>
            节点加载执行异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.LoadRepairNodeMethodException">
            <summary>
            节点修复方法加载异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PersistenceRebuilding">
            <summary>
            日志流持久化文件重建中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.SnapshotTypeNotMatch">
            <summary>
            快照数据类型不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NoReturnValue">
            <summary>
            调用无返回值，表示 ValueResult{T}.IsValue 为 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.IllegalInputParameter">
            <summary>
            非法输出参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeMethodParameterIsByRef">
            <summary>
            节点方法输入参数不允许使用 ref / out 修饰
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.SendOnlyNotSupportReturnType">
            <summary>
            非应答方法不支持返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.SendOnlyMustInputParameter">
            <summary>
            非应答方法必须存在输入参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.BeforePersistenceMethodReturnTypeError">
            <summary>
            持久化检查方法返回值类型必须为 bool 或者 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.BeforePersistenceMethodCallTypeError">
            <summary>
            持久化检查方法调用类型不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundRepairMethodDeclaringType">
            <summary>
            动态加载程序集中没有找到修复方法的定义类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundRepairMethod">
            <summary>
            动态加载程序集中没有找到修复方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodNotStatic">
            <summary>
            修复方法必须为静态方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodIsGenericMethodDefinition">
            <summary>
            修复方法不能是泛型方法定义
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodReturnTypeNotMatch">
            <summary>
            修复方法返回值类型与原接口定义不一致
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodNotFoundNodeTypeParameter">
            <summary>
            修复方法第一个输入参数必须是节点接口类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodParameterCountNotMatch">
            <summary>
            修复方法输入参数数量与原接口定义不一致（除了第一个输出参数必须是节点接口类型）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodParameterTypeNotMatch">
            <summary>
            修复方法输入参数类型与原接口定义不一致
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.BindMethodIndexUsed">
            <summary>
            绑定方法编号以被使用，要修改该方法请调用修复功能
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.BindMethodNotSupportBeforePersistence">
            <summary>
            绑定方法不支持持久化之前检查参数方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.SlaveTimestampNotMatch">
            <summary>
            从节点客户端创建时间戳不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.FileHeadNotMatch">
            <summary>
            文件头部数据不匹配，说明服务端持久化文件被重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.FilePositionOutOfRange">
            <summary>
            文件持久化位置不再范围内，说明服务端重建处理过
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CanNotCreateSlave">
            <summary>
            当前配置 StreamPersistenceMemoryDatabaseServiceConfig.CanCreateSlave 不允许创建从节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PositionNotMatch">
            <summary>
            持久化位置不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.StateNotMatch">
            <summary>
            当前状态不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CallFail">
            <summary>
            客户端调用失败
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase">
            <summary>
            日志流持久化内存数据库客户端接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.CreateSessionObject">
            <summary>
            创建会话对象，用于反序列化时获取服务信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.GetPersistencePosition">
            <summary>
            获取持久化流已当前写入位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.GetNodeIndex(System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            获取节点标识
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.Rebuild">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.RepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName)">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.BindNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName)">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.CreateSlave(System.Boolean)">
            <summary>
            创建从节点
            </summary>
            <param name="isBackup">是否备份客户端</param>
            <returns>从节点验证时间戳，负数表示 CallStateEnum 错误状态</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.RemoveSlave(System.Int64)">
            <summary>
            移除从节点客户端信息
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.AppendRepairNodeMethodDirectoryFile(System.Int64,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile)">
            <summary>
            从节点添加修复方法目录与文件信息
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="directory">修复方法目录信息</param>
            <param name="file">修复方法文件信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.GetRepairNodeMethodPosition(System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            从节点获取修复节点方法信息
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="callback">修复节点方法信息回调委托</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.CheckPersistenceFileHead(System.UInt32,System.UInt64)">
            <summary>
            检查持久化文件头部是否匹配
            </summary>
            <param name="fileHeadVersion">持久化文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <returns>持久化流已写入位置，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.GetPersistenceFile(System.Int64,System.UInt32,System.UInt64,System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="fileHeadVersion">持久化文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="position">读取文件起始位置</param>
            <param name="callback">获取持久化文件数据回调委托</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.GetPersistenceCallbackExceptionPosition(System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{System.Int64},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取持久化回调异常位置数据
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.CheckPersistenceCallbackExceptionPositionFileHead(System.UInt32,System.UInt64)">
            <summary>
            检查持久化回调异常位置文件头部是否匹配
            </summary>
            <param name="fileHeadVersion">持久化回调异常位置文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <returns>持久化回调异常位置文件已写入位置，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStreamPersistenceMemoryDatabaseClientBase.GetPersistenceCallbackExceptionPositionFile(System.Int64,System.UInt32,System.UInt64,System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="fileHeadVersion">持久化回调异常位置文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="position">读取文件起始位置</param>
            <param name="callback">获取持久化回调异常位置文件数据回调委托</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1">
            <summary>
            保持回调输出
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.node">
            <summary>
            客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.enumeratorCommand">
            <summary>
            回调命令
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.Socket">
            <summary>
            命令客户端套接字
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.IsSuccess">
            <summary>
            命令是否提交成功
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.ReturnType">
            <summary>
            回调命令返回值类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.#ctor">
            <summary>
            空响应（命令提交失败）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,AutoCSer.Net.EnumeratorCommand{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@)">
            <summary>
            保持回调输出
            </summary>
            <param name="node">客户端节点</param>
            <param name="enumeratorCommand">回调命令</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.GetAsyncEnumerable">
            <summary>
            获取 IAsyncEnumerable
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.GetAsyncEnumerable``1(System.Func{`0,``0})">
            <summary>
            数据转换获取 IAsyncEnumerable
            </summary>
            <typeparam name="VT">目标数据类型</typeparam>
            <param name="getValue">数据转换委托</param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse`1.NullResponse">
            <summary>
            空响应（命令提交失败）
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode">
            <summary>
            客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.Key">
            <summary>
            节点全局关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.Creator">
            <summary>
            创建节点操作对象委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.Client">
            <summary>
            日志流持久化内存数据库客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.Index">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.isRenewing">
            <summary>
            是否重建中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.isReindex">
            <summary>
            是否正在重新获取索引
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.isPersistenceCallbackExceptionRenewNode">
            <summary>
            服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Threading.Tasks.Task{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.CheckStateAsync(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            检查返回错误状态
            </summary>
            <param name="nodeIndex"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.Renew(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            节点重建
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.renew">
            <summary>
            节点重建
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.Reindex(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            索引失效重新获取
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.reindex">
            <summary>
            索引失效重新获取
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode.DefaultAttribute">
            <summary>
            默认客户端节点自定义属性
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode`1">
            <summary>
            客户端节点
            </summary>
            <typeparam name="T">客户端节点接口类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode`1.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Threading.Tasks.Task{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode`1.renew">
            <summary>
            节点重建
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode`1.reindex">
            <summary>
            索引失效重新获取
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute">
            <summary>
            客户端节点自定义属性
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute.ServerNodeType">
            <summary>
            匹配服务端节点接口类型
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator">
            <summary>
            生成客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator.NodeConstructorParameterTypes">
            <summary>
            客户端节点方法构造函数参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator.StreamPersistenceMemoryDatabaseClientCall">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator.StreamPersistenceMemoryDatabaseClientCallInputOutputMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator.StreamPersistenceMemoryDatabaseClientInputKeepCallbackMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator`1">
            <summary>
            生成客户端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator`1.Create(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Threading.Tasks.Task{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            创建客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator`1.GetNodeInfo(System.Exception@)">
            <summary>
            获取服务端节点信息
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator`1.nodeInfo">
            <summary>
            服务端信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator`1.creator">
            <summary>
            创建客户端节点委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator`1.creatorException">
            <summary>
            节点构造错误
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeCreator`1.creatorMessages">
            <summary>
            节点构造提示信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod">
            <summary>
            客户端节点方法信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.#ctor(System.Type,System.Reflection.MethodInfo)">
            <summary>
            客户端节点方法信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod)">
            <summary>
            设置服务端节点方法数据
            </summary>
            <param name="method"></param>
            <returns>错误信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.GetMethod(System.Type,AutoCSer.LeftArray{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod}@)">
            <summary>
            获取客户端节点接口方法集合
            </summary>
            <param name="type"></param>
            <param name="methods"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult.ReturnType">
            <summary>
            网络客户端返回值类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult.CallState">
            <summary>
            读取数据状态
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult.#ctor(AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            返回结果
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1">
            <summary>
            返回结果
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.Value">
            <summary>
            返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.ReturnType">
            <summary>
            网络客户端返回值类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.CallState">
            <summary>
            读取数据状态
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.#ctor(AutoCSer.Net.CommandClientReturnTypeEnum,System.String)">
            <summary>
            返回结果
            </summary>
            <param name="returnType"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            返回结果
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.#ctor(`0)">
            <summary>
            返回结果
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.Cast``1(``0)">
            <summary>
            返回结果类型转换
            </summary>
            <typeparam name="VT">目标类型</typeparam>
            <param name="defaultValue">成功状态默认值</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.op_Implicit(AutoCSer.Net.CommandClientReturnTypeEnum)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{`0}">
            <summary>
            返回结果
            </summary>
            <param name="returnType"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{`0}">
            <summary>
            返回结果
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{`0}">
            <summary>
            返回结果
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Extensions.EnumerableExtension">
            <summary>
            集合相关扩展
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Extensions.EnumerableExtension.Cast``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            类型转换
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue`1">
            <summary>
            JSON 序列化对象（由于默认为二进制序列化，需要 JSON 序列化操作时可以使用此类型封装处理）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue`1.Value">
            <summary>
            数据对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue`1.#ctor(`0)">
            <summary>
            JSON 序列化对象（由于默认为二进制序列化，需要 JSON 序列化操作时可以使用此类型封装处理）
            </summary>
            <param name="value">数据对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue{`0})~`0">
            <summary>
            隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue{`0}">
            <summary>
            隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue`1.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#JsonValue{T}}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.JsonValue`1.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#JsonValue{T}}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseDeserializeValue`1">
            <summary>
            反序列化对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseDeserializeValue`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseDeserializeValue`1.GetValue(System.Object)">
            <summary>
            获取反序列化对象
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.State">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.serializer">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.DeserializeValue">
            <summary>
            反序列化操作对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            返回参数序列化
            </summary>
            <param name="state">调用状态</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer)">
            <summary>
            返回参数序列化
            </summary>
            <param name="serializer">返回参数序列化</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#KeepCallbackResponseParameter}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#KeepCallbackResponseParameter}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.Create``1(``0,System.Boolean)">
            <summary>
            创建返回参数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="isSimpleSerialize">是否简单序列化输出数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.CreateValues``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            创建返回参数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <param name="isSimpleSerialize">是否简单序列化输出数据</param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.EmptyKeepCallback">
            <summary>
            空回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterBinarySerializer`1">
            <summary>
            返回参数序列化
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterBinarySerializer`1.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterBinarySerializer`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterBinarySerializer`1.Default">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterSimpleSerializer`1">
            <summary>
            返回参数序列化
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterSimpleSerializer`1.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterSimpleSerializer`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterSimpleSerializer`1.Default">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType">
            <summary>
            泛型类型元数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.StreamPersistenceMemoryDatabaseClientCallInputDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.StreamPersistenceMemoryDatabaseClientSimpleSerializeCallInputDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.StreamPersistenceMemoryDatabaseClientSendOnlyDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.StreamPersistenceMemoryDatabaseClientSimpleSerializeSendOnlyDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.MethodParameterCreatorCreateCallInputMethodParameterDelegate">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.MethodParameterCreatorCreateCallInputOutputMethodParameterDelegate">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.MethodParameterCreatorCreateSendOnlyMethodParameterDelegate">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.MethodParameterCreatorCreateInputKeepCallbackMethodParameterDelegate">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.create``1">
            <summary>
            创建泛型类型元数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.lastGenericType">
            <summary>
            最后一次访问的泛型类型元数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType.Get(System.Type)">
            <summary>
            获取泛型类型元数据
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1">
            <summary>
            泛型代理
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.CurrentType">
            <summary>
            获取当前泛型类型
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.StreamPersistenceMemoryDatabaseClientCallInputDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.StreamPersistenceMemoryDatabaseClientSimpleSerializeCallInputDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.StreamPersistenceMemoryDatabaseClientSendOnlyDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.StreamPersistenceMemoryDatabaseClientSimpleSerializeSendOnlyDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.MethodParameterCreatorCreateCallInputMethodParameterDelegate">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.MethodParameterCreatorCreateCallInputOutputMethodParameterDelegate">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.MethodParameterCreatorCreateSendOnlyMethodParameterDelegate">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.StructGenericType`1.MethodParameterCreatorCreateInputKeepCallbackMethodParameterDelegate">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType">
            <summary>
            泛型类型元数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.StreamPersistenceMemoryDatabaseClientCallOutputDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.StreamPersistenceMemoryDatabaseClientKeepCallbackDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.StreamPersistenceMemoryDatabaseClientSimpleDeserializeCallOutputDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.StreamPersistenceMemoryDatabaseClientSimpleDeserializeKeepCallbackDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.CreateMethodCallbackDelegate">
            <summary>
            创建回调对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.CreateMethodParameterCallbackDelegate">
            <summary>
            创建回调对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.CreateMethodKeepCallbackDelegate">
            <summary>
            创建回调对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.CreateMethodParameterKeepCallbackDelegate">
            <summary>
            创建回调对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.AppendRepairNodeMethodLoader">
            <summary>
            添加待加载修复方法节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.create``1">
            <summary>
            创建泛型类型元数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.lastGenericType">
            <summary>
            最后一次访问的泛型类型元数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType.Get(System.Type)">
            <summary>
            获取泛型类型元数据
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1">
            <summary>
            泛型代理
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.CurrentType">
            <summary>
            获取当前泛型类型
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.StreamPersistenceMemoryDatabaseClientCallOutputDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.StreamPersistenceMemoryDatabaseClientKeepCallbackDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.StreamPersistenceMemoryDatabaseClientSimpleDeserializeCallOutputDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.StreamPersistenceMemoryDatabaseClientSimpleDeserializeKeepCallbackDelegate">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.CreateMethodCallbackDelegate">
            <summary>
            创建回调对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.CreateMethodParameterCallbackDelegate">
            <summary>
            创建回调对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.CreateMethodKeepCallbackDelegate">
            <summary>
            创建回调对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.CreateMethodParameterKeepCallbackDelegate">
            <summary>
            创建回调对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Metadata.GenericType`1.AppendRepairNodeMethodLoader">
            <summary>
            添加待加载修复方法节点
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum">
            <summary>
            服务端节点方法标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.None">
            <summary>
            无标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsPersistence">
            <summary>
            是否持久化（涉及写入操作则需要持久化）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsClientCall">
            <summary>
            是否允许客户端调用，否则为服务端内存调用方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsSimpleSerializeParamter">
            <summary>
            是否简单序列化输出数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsSimpleDeserializeParamter">
            <summary>
            是否简单反序列化输入数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsIgnorePersistenceCallbackException">
            <summary>
            是否忽略持久化回调异常，节点方法必须保证异常时还原恢复内存数据状态，必须关心 new 产生的内存不足异常，在修改数据以前应该将完成所有 new 操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter.customSessionObject">
            <summary>
            自定义状态对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter.customSessionObject">
            <summary>
            自定义状态对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter.customSessionObject">
            <summary>
            自定义状态对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1.customSessionObject">
            <summary>
            自定义状态对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod,`0)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter)">
            <summary>
            调用方法
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter)">
            <summary>
            初始化加载数据
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod`1">
            <summary>
            服务端节点方法
            </summary>
            <typeparam name="T">输入参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod`1.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.InputKeepCallback(AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@)">
            <summary>
            调用方法
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.enumerableCallback``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            枚举回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.EnumerableCallback``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            枚举回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodParameter"></param>
            <param name="values"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1">
            <summary>
            调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.parameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.GetParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter{`0})">
            <summary>
            获取输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="node"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            初始化加载数据
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.EnumerableCallback``1(System.Collections.Generic.IEnumerable{``0},AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@,System.Boolean)">
            <summary>
            枚举回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <param name="callback"></param>
            <param name="isSimpleSerialize"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod.SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter)">
            <summary>
            调用方法
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter)">
            <summary>
            初始化加载数据
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod`1">
            <summary>
            服务端节点方法
            </summary>
            <typeparam name="T">输入参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod`1.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.FreeIdentity">
            <summary>
            空闲节点标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.Index">
            <summary>
            节点索引
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.Identity">
            <summary>
            节点标识
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.#ctor(System.Int32,System.UInt32)">
            <summary>
            节点索引信息
            </summary>
            <param name="index"></param>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            错误信息
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.GetFree">
            <summary>
            获取节点空闲标记
            </summary>
            <returns>是否空闲节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.GetState">
            <summary>
            获取调用状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.Equals(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            判断是否一致
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo">
            <summary>
            服务端节点信息 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.RemoteType">
            <summary>
            服务端节点接口类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.#ctor(System.Type)">
            <summary>
            服务端节点信息
            </summary>
            <param name="type">服务端节点接口类型</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod">
            <summary>
            服务端节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.MethodIndexEnumTypePath">
            <summary>
            生成方法序号映射枚举类型代码相对路径
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.CallType">
            <summary>
            方法调用类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.CallState">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.#ctor(System.Type,System.Reflection.MethodInfo)">
            <summary>
            服务端节点方法信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.setCallType">
            <summary>
            设置方法调用类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.checkParameter">
            <summary>
            参数检查
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.SetError(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.String)">
            <summary>
            设置错误信息
            </summary>
            <param name="state"></param>
            <param name="error"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.Equals(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod)">
            <summary>
            判断是否相等
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.Equals(System.Object)">
            <summary>
            判断是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.GetHashCode">
            <summary>
            获取哈希值
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1">
            <summary>
            数组节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.array">
            <summary>
            数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.#ctor(System.Int32)">
            <summary>
            数组节点
            </summary>
            <param name="length">数组长度</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SnapshotSet(AutoCSer.KeyValue{System.Int32,`0})">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.ClearArray">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.ClearBeforePersistence(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetLength">
            <summary>
            获取数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SetValueBeforePersistence(System.Int32,`0)">
            <summary>
            根据索引位置设置数据 持久化参数检查
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetValueSetBeforePersistence(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据 持久化参数检查
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.FillBeforePersistence(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置 持久化参数检查
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.ReverseBeforePersistence(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SortBeforePersistence(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode">
            <summary>
            位图节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.map">
            <summary>
            位图
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.capacity">
            <summary>
            二进制位数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.#ctor(System.UInt32)">
            <summary>
            位图节点
            </summary>
            <param name="capacity">二进制位数量</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.SnapshotSet(System.Byte[])">
            <summary>
            快照添加数据
            </summary>
            <param name="map">位图</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetCapacity">
            <summary>
            获取二进制位数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.ClearMap">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBit(System.UInt32)">
            <summary>
            读取位
            </summary>
            <param name="index">位索引</param>
            <returns>非 0 表示二进制位为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.SetBitBeforePersistence(System.UInt32)">
            <summary>
            设置位状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.SetBit(System.UInt32)">
            <summary>
            设置位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitSetBitBeforePersistence(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitSetBit(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.ClearBitBeforePersistence(System.UInt32)">
            <summary>
            清除位状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.ClearBit(System.UInt32)">
            <summary>
            清除位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitClearBitBeforePersistence(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitClearBit(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.InvertBitBeforePersistence(System.UInt32)">
            <summary>
            状态取反 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.InvertBit(System.UInt32)">
            <summary>
            状态取反
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitInvertBitBeforePersistence(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitInvertBit(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1">
            <summary>
            256 基分片哈希表节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.hashSet">
            <summary>
            256 基分片 哈希表
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.AddBeforePersistence(`0)">
            <summary>
            如果关键字不存在则添加数据 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Add(`0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2">
            <summary>
            256 基分片字典节点
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.dictionary">
            <summary>
            256 基分片字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            如果关键字不存在则添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.SetBeforePersistence(`0,`1)">
            <summary>
            强制设置数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1">
            <summary>
            哈希表节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.hashSet">
            <summary>
            哈希表
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.#ctor">
            <summary>
            哈希表节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.RenewBeforePersistence">
            <summary>
            清除所有数据并重建容器 持久化参数检查
            </summary>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Renew">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.AddBeforePersistence(`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage`1">
            <summary>
            二进制序列化消息
            </summary>
            <typeparam name="T">消息数据对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage`1.message">
            <summary>
            二进制序列化消息数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage`1.#ctor(`0)">
            <summary>
            二进制序列化消息
            </summary>
            <param name="message">二进制序列化消息数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage{`0}">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage{`0})~`0">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1">
            <summary>
            消息处理节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.SnapshotAdd(`0)">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetTotalCount">
            <summary>
            获取未处理完成消息数量（包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetCount">
            <summary>
            获取未处理完成消息数量（不包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetFailedCount">
            <summary>
            获取失败消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetCallbackCount">
            <summary>
            获取消费者回调数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetTimeoutCount">
            <summary>
            获取未完成处理超时消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.Clear">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.ClearFailed">
            <summary>
            清除所有失败消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetMessage(System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0})">
            <summary>
            消费客户端获取消息
            </summary>
            <param name="maxCount">当前客户端最大并发消息数量</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.AppendMessageBeforePersistence(`0)">
            <summary>
            生产者添加新消息 持久化参数检查
            </summary>
            <param name="message"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.AppendMessage(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.CompletedBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理 持久化参数检查
            </summary>
            <param name="identity"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.FailedBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理 持久化参数检查
            </summary>
            <param name="identity"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1">
            <summary>
            数组节点接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.SnapshotSet(AutoCSer.KeyValue{System.Int32,`0})">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.ClearArray">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.ClearBeforePersistence(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.GetLength">
            <summary>
            获取数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.SetValueBeforePersistence(System.Int32,`0)">
            <summary>
            根据索引位置设置数据 持久化参数检查
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.GetValueSetBeforePersistence(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据 持久化参数检查
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.FillBeforePersistence(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置 持久化参数检查
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.ReverseBeforePersistence(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.SortBeforePersistence(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode">
            <summary>
            位图节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.SnapshotSet(System.Byte[])">
            <summary>
            快照添加数据
            </summary>
            <param name="map"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetCapacity">
            <summary>
            获取二进制位数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.ClearMap">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBit(System.UInt32)">
            <summary>
            读取位状态
            </summary>
            <param name="index">位索引</param>
            <returns>非 0 表示二进制位为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.SetBitBeforePersistence(System.UInt32)">
            <summary>
            设置位状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.SetBit(System.UInt32)">
            <summary>
            设置位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitSetBitBeforePersistence(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitSetBit(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.ClearBitBeforePersistence(System.UInt32)">
            <summary>
            清除位状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.ClearBit(System.UInt32)">
            <summary>
            清除位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitClearBitBeforePersistence(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitClearBit(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.InvertBitBeforePersistence(System.UInt32)">
            <summary>
            状态取反 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.InvertBit(System.UInt32)">
            <summary>
            状态取反
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitInvertBitBeforePersistence(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态 持久化参数检查
            </summary>
            <param name="index">位索引</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitInvertBit(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1">
            <summary>
            256 基分片 哈希表 节点接口
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.AddBeforePersistence(`0)">
            <summary>
            如果关键字不存在则添加数据 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Add(`0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2">
            <summary>
            256 基分片字典 节点接口
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            如果关键字不存在则添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.SetBeforePersistence(`0,`1)">
            <summary>
            强制设置数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1">
            <summary>
            哈希表节点接口
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.RenewBeforePersistence">
            <summary>
            清除所有数据并重建容器 持久化参数检查
            </summary>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Renew">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.AddBeforePersistence(`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1">
            <summary>
            数组节点接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetLength">
            <summary>
            获取有效数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetCapacity">
            <summary>
            获取数组容器初大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetFreeCount">
            <summary>
            获取容器空闲数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.SetEmpty">
            <summary>
            置空并释放数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.ClearLength">
            <summary>
            清除所有数据并将数据有效长度设置为 0
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.ClearBeforePersistence(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.AddBeforePersistence(`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="value">数据</param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.TryAdd(`0)">
            <summary>
            当有空闲位置时添加数据
            </summary>
            <param name="value"></param>
            <returns>如果数组已满则添加失败并返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.SetValueBeforePersistence(System.Int32,`0)">
            <summary>
            根据索引位置设置数据 持久化参数检查
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.InsertBeforePersistence(System.Int32,`0)">
            <summary>
            插入数据 持久化参数检查
            </summary>
            <param name="index">插入位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Insert(System.Int32,`0)">
            <summary>
            插入数据
            </summary>
            <param name="index">插入位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueSetBeforePersistence(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据 持久化参数检查
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.FillBeforePersistence(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置 持久化参数检查
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.ReverseBeforePersistence(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.SortBeforePersistence(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Remove(`0)">
            <summary>
            移除第一个匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">数据</param>
            <returns>是否存在移除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.RemoveAtBeforePersistence(System.Int32)">
            <summary>
            移除指定索引位置数据 持久化参数检查
            </summary>
            <param name="index">数据位置</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.RemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueRemoveAtBeforePersistence(System.Int32)">
            <summary>
            移除指定索引位置数据并返回被移除的数据 持久化参数检查
            </summary>
            <param name="index">数据位置</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueRemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据并返回被移除的数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.RemoveToEndBeforePersistence(System.Int32)">
            <summary>
            移除指定索引位置数据并将最后一个数据移动到该指定位置 持久化参数检查
            </summary>
            <param name="index"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.RemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据并将最后一个数据移动到该指定位置
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueRemoveToEndBeforePersistence(System.Int32)">
            <summary>
            移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据
            </summary>
            <param name="index"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueRemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetTryPopValueBeforePersistence">
            <summary>
            移除最后一个数据并返回该数据 持久化参数检查
            </summary>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetTryPopValue">
            <summary>
            移除最后一个数据并返回该数据
            </summary>
            <returns>没有可移除数据则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.TryPopBeforePersistence">
            <summary>
            移除最后一个数据 持久化参数检查
            </summary>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.TryPop">
            <summary>
            移除最后一个数据
            </summary>
            <returns>是否存在可移除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1">
            <summary>
            队列节点接口（先进先出）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.Count">
            <summary>
            获取队列数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.Contains(`0)">
            <summary>
            判断队列中是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.Enqueue(`0)">
            <summary>
            将数据添加到队列
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.TryDequeueBeforePersistence">
            <summary>
            从队列中弹出一个数据 持久化参数检查
            </summary>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.TryDequeue">
            <summary>
            从队列中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.TryPeek">
            <summary>
            获取队列中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2">
            <summary>
            二叉搜索树节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.Count">
            <summary>
            获取节点数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.GetHeight">
            <summary>
            获取树高度，时间复杂度 O(n)
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.Clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.SetBeforePersistence(`0,`1)">
            <summary>
            设置数据 持久化参数检查
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.Set(`0,`1)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.Remove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.GetRemove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>被删除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断是否包含关键字
            </summary>
            <param name="key">关键字</param>
            <returns>是否包含关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key">关键字</param>
            <returns>目标数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="key">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetKeyValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetFirstKeyValue">
            <summary>
            获取第一组数据
            </summary>
            <returns>第一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetLastKeyValue">
            <summary>
            获取最后一组数据
            </summary>
            <returns>最后一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetFirstKey">
            <summary>
            获取第一个关键字数据
            </summary>
            <returns>第一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetLastKey">
            <summary>
            获取最后一个关键字数据
            </summary>
            <returns>最后一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetFirstValue">
            <summary>
            获取第一个数据
            </summary>
            <returns>第一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.TryGetLastValue">
            <summary>
            获取最后一个数据
            </summary>
            <returns>最后一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2.GetValues(System.Int32,System.Byte)">
            <summary>
            获取范围数据集合
            </summary>
            <param name="skipCount">跳过记录数</param>
            <param name="getCount">获取记录数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1">
            <summary>
            二叉搜索树集合节点接口
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.AddBeforePersistence(`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">关键字</param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value">关键字</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value">关键字</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.GetFrist">
            <summary>
            获取第一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.GetLast">
            <summary>
            获取最后一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="value">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.GetByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2">
            <summary>
            排序字典节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2">
            <summary>
            排序列表节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.GetCapacity">
            <summary>
            获取容器大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.IndexOfKey(`0)">
            <summary>
            获取关键字排序位置
            </summary>
            <param name="key"></param>
            <returns>负数表示没有找到关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.IndexOfValue(`1)">
            <summary>
            获取第一个匹配数据排序位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>负数表示没有找到匹配数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.RemoveAtBeforePersistence(System.Int32)">
            <summary>
            删除指定排序索引位置数据 持久化参数检查
            </summary>
            <param name="index"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.RemoveAt(System.Int32)">
            <summary>
            删除指定排序索引位置数据
            </summary>
            <param name="index"></param>
            <returns>索引超出范围返回 false</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1">
            <summary>
            排序集合节点接口
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.AddBeforePersistence(`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.GetMin">
            <summary>
            获取最小值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.GetMax">
            <summary>
            获取最大值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1">
            <summary>
            栈节点（后进先出）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.Contains(`0)">
            <summary>
            判断是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.Push(`0)">
            <summary>
            将数据添加到栈
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.TryPopBeforePersistence">
            <summary>
            从栈中弹出一个数据 持久化参数检查
            </summary>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.TryPop">
            <summary>
            从栈中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.TryPeek">
            <summary>
            获取栈中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1">
            <summary>
            数组节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.array">
            <summary>
            数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.#ctor(System.Int32)">
            <summary>
            数组节点
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetLength">
            <summary>
            获取有效数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetCapacity">
            <summary>
            获取数组容器初大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetFreeCount">
            <summary>
            获取容器空闲数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SetEmpty">
            <summary>
            置空并释放数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.ClearLength">
            <summary>
            清除所有数据并将数据有效长度设置为 0
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.ClearBeforePersistence(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.AddBeforePersistence(`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="value">数据</param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.TryAdd(`0)">
            <summary>
            当有空闲位置时添加数据
            </summary>
            <param name="value"></param>
            <returns>如果数组已满则添加失败并返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SetValueBeforePersistence(System.Int32,`0)">
            <summary>
            根据索引位置设置数据 持久化参数检查
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.InsertBeforePersistence(System.Int32,`0)">
            <summary>
            插入数据 持久化参数检查
            </summary>
            <param name="index">插入位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Insert(System.Int32,`0)">
            <summary>
            插入数据
            </summary>
            <param name="index">插入位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueSetBeforePersistence(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据 持久化参数检查
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.FillBeforePersistence(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置 持久化参数检查
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.ReverseBeforePersistence(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SortBeforePersistence(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据 持久化参数检查
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Remove(`0)">
            <summary>
            移除第一个匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">数据</param>
            <returns>是否存在移除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.RemoveAtBeforePersistence(System.Int32)">
            <summary>
            移除指定索引位置数据 持久化参数检查
            </summary>
            <param name="index">数据位置</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.RemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueRemoveAtBeforePersistence(System.Int32)">
            <summary>
            移除指定索引位置数据并返回被移除的数据 持久化参数检查
            </summary>
            <param name="index">数据位置</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueRemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据并返回被移除的数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.RemoveToEndBeforePersistence(System.Int32)">
            <summary>
            移除指定索引位置数据并将最后一个数据移动到该指定位置 持久化参数检查
            </summary>
            <param name="index"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.RemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据并将最后一个数据移动到该指定位置
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueRemoveToEndBeforePersistence(System.Int32)">
            <summary>
            移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据 持久化参数检查
            </summary>
            <param name="index"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueRemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetTryPopValueBeforePersistence">
            <summary>
            移除最后一个数据并返回该数据 持久化参数检查
            </summary>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetTryPopValue">
            <summary>
            移除最后一个数据并返回该数据
            </summary>
            <returns>没有可移除数据则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.TryPopBeforePersistence">
            <summary>
            移除最后一个数据 持久化参数检查
            </summary>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.TryPop">
            <summary>
            移除最后一个数据
            </summary>
            <returns>是否存在可移除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Message`1">
            <summary>
            消息数据
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Message`1.MessageIdeneity">
            <summary>
            消息唯一编号（节点内唯一编号）
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer">
            <summary>
            消息节点消费者
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer.DefaultDelayMilliseconds">
            <summary>
            默认重试间隔毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer.commandClient">
            <summary>
            客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer.delayMilliseconds">
            <summary>
            重试间隔毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer.isDisposed">
            <summary>
            是否已释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer.#ctor(AutoCSer.Net.CommandClient,System.Int32)">
            <summary>
            消息节点消费者
            </summary>
            <param name="commandClient">客户端</param>
            <param name="delayMilliseconds">重试间隔毫秒数</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1">
            <summary>
            消息节点消费者
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.node">
            <summary>
            消息客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.lastError">
            <summary>
            接收消息的最后一次错误信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.keepCallback">
            <summary>
            保持回调输出
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.#ctor(AutoCSer.Net.CommandClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode{`0},System.Int32)">
            <summary>
            字符串消息消费者
            </summary>
            <param name="commandClient">客户端</param>
            <param name="node">消息客户端节点</param>
            <param name="delayMilliseconds">重试间隔毫秒数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.onError(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{`0})">
            <summary>
            接收消息错误处理
            </summary>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.Start(System.Int32)">
            <summary>
            开始接收并处理消息
            </summary>
            <param name="maxCallbackCount">单个连接最大并发数量</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.checkOnMessage(`0)">
            <summary>
            消息处理
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageConsumer`1.onMessage(`0)">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity">
            <summary>
            正在处理的消息标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.Identity">
            <summary>
            消息唯一编号（节点内唯一编号）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.ArrayIndex">
            <summary>
            消息数组索引位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.Flags">
            <summary>
            消息标记
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.SetNew(System.Int64)">
            <summary>
            设置新消息唯一编号
            </summary>
            <param name="currentIdentity"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1">
            <summary>
            正在处理的消息信息
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.Message">
            <summary>
            正在处理的消息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.callback">
            <summary>
            消息回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.NextIndex">
            <summary>
            下一个空闲位置 或者 上一个正在处理的消息节点位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.timeoutTimestamp">
            <summary>
            消息超时时间戳
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.Set(`0,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0},System.Int64)">
            <summary>
            设置消息数据
            </summary>
            <param name="message"></param>
            <param name="callback"></param>
            <param name="timeoutTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.GetMessage(System.Int32@)">
            <summary>
            获取消息数据
            </summary>
            <param name="nextIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.Free(System.Int32)">
            <summary>
            释放消息处理状态（消息完成或者失败）
            </summary>
            <param name="nextIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.Clear(System.Int32)">
            <summary>
            清除消息数据
            </summary>
            <param name="nextIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.CheckTimeout(System.Int32@)">
            <summary>
            超时检查
            </summary>
            <param name="nextIndex"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum">
            <summary>
            消息标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.None">
            <summary>
            无标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.Failed">
            <summary>
            处理失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.Timeout">
            <summary>
            超时
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.FailedOrTimeout">
            <summary>
            处理失败（包括超时）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.SnapshotEnd">
            <summary>
            快照结束
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1">
            <summary>
            消息处理节点
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.timeoutTimestamp">
            <summary>
            消息超时时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.checkTimer">
            <summary>
            超时检查定时
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.MessageArray">
            <summary>
            正在处理的消息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.callbacks">
            <summary>
            消息处理客户端回调集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.currentCallback">
            <summary>
            当前预备处理客户端回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.timeoutMessages">
            <summary>
            超时消息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.linkHead">
            <summary>
            等待处理的消息头节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.linkEnd">
            <summary>
            等待处理的消息尾节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.failedHead">
            <summary>
            失败消息头节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.failedEnd">
            <summary>
            失败消息尾节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.nextFailed">
            <summary>
            LinkNext 为下一个待重试处理失败消息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.arrayHead">
            <summary>
            正在处理的消息头节点，NextIndex 表示上一个节点位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.CurrentIdentity">
            <summary>
            当前消息分配唯一编号（节点内唯一编号）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.count">
            <summary>
            未处理完成消息数量（不包括失败消息）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.failedCount">
            <summary>
            失败消息数量（包括处理超时消息）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.arrayMessageCount">
            <summary>
            正在处理中的消息数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.messageArrayFreeIndex">
            <summary>
            空闲的消息位置，NextIndex 表示下一个空闲位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.sendFailedIndex">
            <summary>
            正在重试失败消息的数组位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.fullCallbackIndex">
            <summary>
            满负载消费者回调起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.isCheckTimeout">
            <summary>
            是否正在检查超时
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            消息处理节点
            </summary>
            <param name="arraySize">正在处理消息数组大小</param>
            <param name="timeoutSeconds">消息处理超时秒数</param>
            <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建消息处理节点
            </summary>
            <param name="service"></param>
            <param name="arraySize">正在处理消息数组大小</param>
            <param name="timeoutSeconds">消息处理超时秒数</param>
            <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.StreamPersistenceMemoryDatabaseServiceLoaded">
            <summary>
            初始化加载完毕处理
            </summary>
            <returns>加载完毕替换的新节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.StreamPersistenceMemoryDatabaseServiceNodeOnRemoved">
            <summary>
            节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.SnapshotAdd(`0)">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.AppendLinkCount(`0)">
            <summary>
            添加等待处理消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.AppendFailedCount(`0)">
            <summary>
            添加失败消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.appendFailed(`0)">
            <summary>
            添加失败消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.GetTotalCount">
            <summary>
            获取未处理完成消息数量（包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.GetCount">
            <summary>
            获取未处理完成消息数量（不包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.GetCallbackCount">
            <summary>
            获取消费者回调数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.GetTimeoutCount">
            <summary>
            获取未完成处理超时消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.Clear">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.GetFailedCount">
            <summary>
            获取失败消息数量（包括处理超时消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.clearFailed">
            <summary>
            清除所有失败消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.ClearFailed">
            <summary>
            清除所有失败消息（包括处理超时消息）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.removeCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0})">
            <summary>
            移除无效客户端回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.GetMessage(System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0})">
            <summary>
            消费客户端获取消息
            </summary>
            <param name="maxCount">当前客户端最大并发消息数量</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.sendMessage">
            <summary>
            发送一条消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.sendMessageLink">
            <summary>
            发送多条新消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.sendFailedMessage">
            <summary>
            发送一条失败消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.appendArrayMessage(`0)">
            <summary>
            消息添加到处理中数组
            </summary>
            <param name="message"></param>
            <returns>message.LinkNext</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.AppendMessageBeforePersistence(`0)">
            <summary>
            生产者添加新消息 持久化参数检查
            </summary>
            <param name="message"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.AppendMessage(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.sendNewMessage">
            <summary>
            发送新消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.CompletedBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理 持久化参数检查
            </summary>
            <param name="identity"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.freeArrayIndex(`0,System.Int32)">
            <summary>
            释放消息处理状态
            </summary>
            <param name="message"></param>
            <param name="nextIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.FailedBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理 持久化参数检查
            </summary>
            <param name="identity"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.failed(`0,System.Int32)">
            <summary>
            消息失败处理
            </summary>
            <param name="message"></param>
            <param name="nextIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.CheckTimeout">
            <summary>
            消息超时检查
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`1.CheckTimeoutCallback">
            <summary>
            消息超时检查
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1">
            <summary>
            消费者回调信息
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.Callback">
            <summary>
            消费者回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.MaxCount">
            <summary>
            最大并发数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.Count">
            <summary>
            正在处理的回调计数
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.FreeCount">
            <summary>
            空闲并发数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0},System.Int32)">
            <summary>
            设置消费者回调
            </summary>
            <param name="callback"></param>
            <param name="maxCount"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.SetRemove(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount{`0}@)">
            <summary>
            设置消费者回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.remove(System.Int32)">
            <summary>
            移除并复制消费者回调信息
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.IncrementCount">
            <summary>
            添加正在处理的回调计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.DecrementCount">
            <summary>
            释放正在处理的回调计数
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimeoutCallback`1">
            <summary>
            超时检查队列回调
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimeoutCallback`1.messageNode">
            <summary>
            消息处理节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimeoutCallback`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode{`0})">
            <summary>
            超时检查队列回调
            </summary>
            <param name="messageNode"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimeoutCallback`1.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`1">
            <summary>
            超时检查定时
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`1.messageNode">
            <summary>
            消息处理节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode{`0},System.Int32)">
            <summary>
            超时检查定时
            </summary>
            <param name="messageNode"></param>
            <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`1.OnTimer">
            <summary>
            定时器触发
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`1.Cancel">
            <summary>
            取消定时
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1">
            <summary>
            消息处理节点初始化加载节点
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.messageNode">
            <summary>
            消息处理节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.messages">
            <summary>
            未完成消息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.failedMessages">
            <summary>
            处理失败消息集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode{`0})">
            <summary>
            消息处理节点初始化加载节点
            </summary>
            <param name="messageNode">消息处理节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.StreamPersistenceMemoryDatabaseServiceLoaded">
            <summary>
            初始化加载完毕处理
            </summary>
            <returns>加载完毕替换的新节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.SnapshotAdd(`0)">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.GetTotalCount">
            <summary>
            获取未处理完成消息数量（包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.GetCount">
            <summary>
            获取未处理完成消息数量（不包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.GetFailedCount">
            <summary>
            获取失败消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.GetCallbackCount">
            <summary>
            获取消费者回调数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.GetTimeoutCount">
            <summary>
            获取未完成处理超时消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.Clear">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.ClearFailed">
            <summary>
            清除所有失败消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.GetMessage(System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0})">
            <summary>
            消费客户端获取消息
            </summary>
            <param name="maxCount">当前客户端最大并发消息数量</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.AppendMessageBeforePersistence(`0)">
            <summary>
            生产者添加新消息 持久化参数检查
            </summary>
            <param name="message"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.AppendMessage(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.CompletedBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理 持久化参数检查
            </summary>
            <param name="identity"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.FailedBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理 持久化参数检查
            </summary>
            <param name="identity"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`1.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage`1">
            <summary>
            服务端二进制序列化数据 / 客户端对象 消息
            </summary>
            <typeparam name="T">消息数据对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage`1.message">
            <summary>
            服务端二进制序列化数据 / 客户端对象 消息数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage`1.#ctor(`0)">
            <summary>
            服务端二进制序列化数据 / 客户端对象 消息
            </summary>
            <param name="message">服务端二进制序列化数据 / 客户端对象 消息数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage{`0}">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage{`0})~`0">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage`1">
            <summary>
            服务端 JSON 字符串二进制序列化数据 / 客户端对象 消息
            </summary>
            <typeparam name="T">消息数据对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage`1.message">
            <summary>
            服务端 JSON 字符串二进制序列化数据 / 客户端对象 消息数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage`1.#ctor(`0)">
            <summary>
            服务端 JSON 字符串二进制序列化数据 / 客户端对象 消息
            </summary>
            <param name="message">服务端 JSON 字符串二进制序列化数据 / 客户端对象 消息数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage{`0}">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage{`0})~`0">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage`1">
            <summary>
            服务端 JSON 字符串 / 客户端对象 消息，如果服务端不需要使用 JSON 字符串建议使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage{T} 以减少内存空间占用
            </summary>
            <typeparam name="T">消息数据对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage`1.message">
            <summary>
            服务端 JSON 字符串 / 客户端对象 消息数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage`1.#ctor(`0)">
            <summary>
            服务端 JSON 字符串 / 客户端对象 消息
            </summary>
            <param name="message">服务端 JSON 字符串 / 客户端对象 消息数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage{`0}">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage{`0})~`0">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessageConsumer`1">
            <summary>
            服务端 JSON 字符串二进制序列化数据 / 客户端对象 消息消费者
            </summary>
            <typeparam name="T">消息数据对象类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessageConsumer`1.#ctor(AutoCSer.Net.CommandClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage{`0}},System.Int32)">
            <summary>
            服务端 JSON 字符串二进制序列化数据 / 客户端对象 消息消费者
            </summary>
            <param name="commandClient">客户端</param>
            <param name="node">服务端 JSON 字符串二进制序列化数据 / 客户端对象 消息客户端节点</param>
            <param name="delayMilliseconds">重试间隔毫秒数，默认为 1000，最小值为 1</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessageConsumer`1.onMessage(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage{`0})">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessageConsumer`1.onMessage(`0)">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessageConsumer`1">
            <summary>
            服务端 JSON 字符串 / 客户端对象 消息消费者
            </summary>
            <typeparam name="T">消息数据对象类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessageConsumer`1.#ctor(AutoCSer.Net.CommandClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage{`0}},System.Int32)">
            <summary>
            服务端 JSON 字符串 / 客户端对象 消息消费者
            </summary>
            <param name="commandClient">客户端</param>
            <param name="node">服务端 JSON 字符串 / 客户端对象 消息客户端节点</param>
            <param name="delayMilliseconds">重试间隔毫秒数，默认为 1000，最小值为 1</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessageConsumer`1.onMessage(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessage{`0})">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonMessageConsumer`1.onMessage(`0)">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage">
            <summary>
            字符串消息，如果是确定类型的 JSON 字符串建议使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinaryMessage{T} 或者 ServerJsonMessage{T} 以减少反序列化开销
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage.message">
            <summary>
            字符串消息数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage.#ctor(System.String)">
            <summary>
            字符串消息
            </summary>
            <param name="message">字符串消息数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage.op_Implicit(System.String)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage)~System.String">
            <summary>
            隐式转换
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessageConsumer`1">
            <summary>
            服务端二进制序列化数据 / 客户端对象 消息节点消费者
            </summary>
            <typeparam name="T">消息数据对象类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessageConsumer`1.#ctor(AutoCSer.Net.CommandClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage{`0}},System.Int32)">
            <summary>
            服务端二进制序列化数据 / 客户端对象 消息消费者
            </summary>
            <param name="commandClient">客户端</param>
            <param name="node">服务端二进制序列化数据 / 客户端对象 消息客户端节点</param>
            <param name="delayMilliseconds">重试间隔毫秒数，默认为 1000，最小值为 1</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessageConsumer`1.onMessage(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessage{`0})">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinaryMessageConsumer`1.onMessage(`0)">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessageConsumer`1">
            <summary>
            二进制序列化消息节点消费者
            </summary>
            <typeparam name="T">消息数据对象类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessageConsumer`1.#ctor(AutoCSer.Net.CommandClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage{`0}},System.Int32)">
            <summary>
            二进制序列化消息消费者
            </summary>
            <param name="commandClient">客户端</param>
            <param name="node">二进制序列化消息消息客户端节点</param>
            <param name="delayMilliseconds">重试间隔毫秒数，默认为 1000，最小值为 1</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessageConsumer`1.onMessage(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessage{`0})">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinaryMessageConsumer`1.onMessage(`0)">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessageConsumer">
            <summary>
            字符串消息节点消费者
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessageConsumer.#ctor(AutoCSer.Net.CommandClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage},System.Int32)">
            <summary>
            字符串消息消费者
            </summary>
            <param name="commandClient">客户端</param>
            <param name="node">字符串消息客户端节点</param>
            <param name="delayMilliseconds">重试间隔毫秒数，默认为 1000，最小值为 1</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessageConsumer.onMessage(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessage)">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StringMessageConsumer.onMessage(System.String)">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1">
            <summary>
            队列节点（先进先出）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.queue">
            <summary>
            队列
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.#ctor(System.Int32)">
            <summary>
            队列节点
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.Count">
            <summary>
            获取队列数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.Contains(`0)">
            <summary>
            判断队列中是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.Enqueue(`0)">
            <summary>
            将数据添加到队列
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.TryDequeueBeforePersistence">
            <summary>
            从队列中弹出一个数据 持久化参数检查
            </summary>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.TryDequeue">
            <summary>
            从队列中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.TryPeek">
            <summary>
            获取队列中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult">
            <summary>
            重建持久化文件调用结果
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.CallState">
            <summary>
            调用返回状态，Success 表示提交成功正在处理中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.LoadExceptionNodeState">
            <summary>
            初始化加载执行异常节点状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.LoadExceptionNodeKey">
            <summary>
            初始化加载执行异常节点名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.LoadExceptionNodeType">
            <summary>
            初始化加载执行异常节点接口类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            重建持久化文件调用结果
            </summary>
            <param name="callState"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            重建持久化文件调用结果
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2">
            <summary>
            二叉搜索树字典节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.dictionary">
            <summary>
            二叉搜索树字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.#ctor">
            <summary>
            二叉搜索树字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.Count">
            <summary>
            获取节点数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.GetHeight">
            <summary>
            获取树高度，时间复杂度 O(n)
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.Clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.SetBeforePersistence(`0,`1)">
            <summary>
            设置数据 持久化参数检查
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.Set(`0,`1)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.Remove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.GetRemove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>被删除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断是否包含关键字
            </summary>
            <param name="key">关键字</param>
            <returns>是否包含关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key">关键字</param>
            <returns>目标数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="key">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetKeyValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetFirstKeyValue">
            <summary>
            获取第一组数据
            </summary>
            <returns>第一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetLastKeyValue">
            <summary>
            获取最后一组数据
            </summary>
            <returns>最后一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetFirstKey">
            <summary>
            获取第一个关键字数据
            </summary>
            <returns>第一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetLastKey">
            <summary>
            获取最后一个关键字数据
            </summary>
            <returns>最后一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetFirstValue">
            <summary>
            获取第一个数据
            </summary>
            <returns>第一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetLastValue">
            <summary>
            获取最后一个数据
            </summary>
            <returns>最后一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.GetValues(System.Int32,System.Byte)">
            <summary>
            获取范围数据集合
            </summary>
            <param name="skipCount">跳过记录数</param>
            <param name="getCount">获取记录数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1">
            <summary>
            二叉搜索树集合节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.searchTreeSet">
            <summary>
            二叉搜索树集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.#ctor">
            <summary>
            二叉搜索树集合节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.AddBeforePersistence(`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">关键字</param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value">关键字</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value">关键字</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetFrist">
            <summary>
            获取第一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetLast">
            <summary>
            获取最后一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="value">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2">
            <summary>
            排序字典节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.dictionary">
            <summary>
            排序字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.#ctor">
            <summary>
            排序字典节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2">
            <summary>
            排序列表节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.list">
            <summary>
            排序列表
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.#ctor(System.Int32)">
            <summary>
            排序列表
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.GetCapacity">
            <summary>
            获取容器大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.IndexOfKey(`0)">
            <summary>
            获取关键字排序位置
            </summary>
            <param name="key"></param>
            <returns>负数表示没有找到关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.IndexOfValue(`1)">
            <summary>
            获取第一个匹配数据排序位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>负数表示没有找到匹配数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.RemoveAtBeforePersistence(System.Int32)">
            <summary>
            删除指定排序索引位置数据 持久化参数检查
            </summary>
            <param name="index"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.RemoveAt(System.Int32)">
            <summary>
            删除指定排序索引位置数据
            </summary>
            <param name="index"></param>
            <returns>索引超出范围返回 false</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1">
            <summary>
            排序集合节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.sortedSet">
            <summary>
            排序集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.#ctor">
            <summary>
            排序集合节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.AddBeforePersistence(`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.GetMin">
            <summary>
            获取最小值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.GetMax">
            <summary>
            获取最大值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1">
            <summary>
            栈节点（后进先出）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.stack">
            <summary>
            栈
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.#ctor(System.Int32)">
            <summary>
            栈节点
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.Contains(`0)">
            <summary>
            判断是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.Push(`0)">
            <summary>
            将数据添加到栈
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.TryPopBeforePersistence">
            <summary>
            从栈中弹出一个数据 持久化参数检查
            </summary>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.TryPop">
            <summary>
            从栈中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.TryPeek">
            <summary>
            获取栈中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer">
            <summary>
            持久化文件缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.SerializeWaitLock">
            <summary>
            序列化结束等待锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.Buffer">
            <summary>
            读取数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.position">
            <summary>
            持久化流已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.isPersistenceCallbackExceptionPosition">
            <summary>
            是否持久化回调异常位置文件，false 表示为持久化文件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.CallState">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.#ctor(AutoCSer.Memory.ByteArrayBuffer@,System.Boolean)">
            <summary>
            持久化文件缓冲区
            </summary>
            <param name="buffer"></param>
            <param name="isPersistenceCallbackExceptionPosition"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.Boolean)">
            <summary>
            持久化文件缓冲区
            </summary>
            <param name="callState"></param>
            <param name="isPersistenceCallbackExceptionPosition"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.SetBuffer(System.Int32,System.Int64)">
            <summary>
            设置缓冲区字节数
            </summary>
            <param name="bufferSize"></param>
            <param name="position"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.SetSerializeWaitLock">
            <summary>
            释放序列化结束等待锁
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#PersistenceFileBuffer}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#PersistenceFileBuffer}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod">
            <summary>
            修复节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.RemoteType">
            <summary>
            服务端节点接口类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.TypeDirectoryName">
            <summary>
            修复节点方法类型保存目录名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.MethodDirectoryName">
            <summary>
            修复节点方法保存目录名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.RawAssembly">
            <summary>
            程序集文件数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.MethodName">
            <summary>
            修复方法名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.RepairNodeMethodDirectory">
            <summary>
            修复方法目录信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.RepairNodeMethodFile">
            <summary>
            修复方法文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.CallState">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.#ctor">
            <summary>
            修复节点方法信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            错误信息
            </summary>
            <param name="callState">调用状态</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.#ctor(System.Type,System.String,System.String,System.Byte[],System.Reflection.MethodInfo,System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            修复节点方法信息
            </summary>
            <param name="type">节点类型</param>
            <param name="typeDirectoryName">修复节点方法类型保存目录名称</param>
            <param name="methodDirectoryName">修复节点方法保存目录名称</param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="method">修复方法信息</param>
            <param name="assemblyFile">程序集文件信息</param>
            <param name="methodNameFile">修复方法名称文件信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod.Deserialize(AutoCSer.BinaryDeserializer,System.Int32)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="state"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory">
            <summary>
            修复方法目录信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.NodeTypeHashCode">
            <summary>
            节点类型哈希值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.Position">
            <summary>
            修复方法生效的持久化重建绝对位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.RepairTime">
            <summary>
            修复方法目录创建时间
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.MethodIndex">
            <summary>
            方法编号
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.#ctor(System.String)">
            <summary>
            修复方法目录信息
            </summary>
            <param name="nodeTypeFullName">节点类型名称</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.#ctor(System.String,System.Int32)">
            <summary>
            修复方法目录信息
            </summary>
            <param name="nodeTypeFullName">节点类型名称</param>
            <param name="methodIndex">方法编号</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.Equals(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory)">
            <summary>
            判断是否一致
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.Equals(System.Object)">
            <summary>
            判断是否一致
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory.GetHashCode">
            <summary>
            哈希值
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile">
            <summary>
            修复方法文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile.AssemblyFileLength">
            <summary>
            程序集文件长度
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile.MethodNameFileLength">
            <summary>
            方法名称信息 JSON 文件长度
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile.LastWriteTime">
            <summary>
            文件最后修改时间
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile.#ctor(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            修复方法文件信息
            </summary>
            <param name="assemblyFile">程序集文件</param>
            <param name="methodNameFile">方法名称信息 JSON 文件</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile.Set(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            设置程序集文件信息
            </summary>
            <param name="assemblyFile">程序集文件</param>
            <param name="methodNameFile">方法名称信息 JSON 文件</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile.Equals(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile)">
            <summary>
            判断是否一致
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName">
            <summary>
            修复节点方法名称信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName.DeclaringTypeFullName">
            <summary>
            静态方法定义类型名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName.Name">
            <summary>
            修复静态方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName.NodeTypeFullName">
            <summary>
            节点类型名称
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName.#ctor(System.Reflection.MethodInfo,System.Type)">
            <summary>
            修复节点方法名称信息
            </summary>
            <param name="method">静态方法信息</param>
            <param name="nodeType">节点类型</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition">
            <summary>
            修复节点方法信息 与 文件流持久化位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition.Position">
            <summary>
            文件流持久化位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition.RepairNodeMethod">
            <summary>
            修复节点方法信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition.#ctor(System.Int64)">
            <summary>
            文件流持久化位置
            </summary>
            <param name="position">文件流持久化位置</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod)">
            <summary>
            修复节点方法信息
            </summary>
            <param name="repairNodeMethod"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#RepairNodeMethodPosition}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#RepairNodeMethodPosition}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.index">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.methodIndex">
            <summary>
            调用方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.CallState">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.serializer">
            <summary>
            序列化委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.MethodParameter">
            <summary>
            调用方法信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,System.Action{AutoCSer.BinarySerializer})">
            <summary>
            请求参数序列化
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="serializer">序列化委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#RequestParameter}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#RequestParameter}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.State">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.#ctor">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            返回参数序列化
            </summary>
            <param name="state">调用状态</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ResponseParameter}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ResponseParameter}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.CreateKeepCallback">
            <summary>
            创建持续回调返回参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.Create``1(``0,System.Boolean)">
            <summary>
            创建返回参数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="isSimpleSerialize">是否简单序列化输出数据</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter`1">
            <summary>
            返回参数
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter`1.#ctor">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter`1.#ctor(`0)">
            <summary>
            返回参数
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod.CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter)">
            <summary>
            调用方法
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter)">
            <summary>
            初始化加载数据
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod`1">
            <summary>
            服务端节点方法
            </summary>
            <typeparam name="T">输入参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod`1.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.SendOnly">
            <summary>
            调用方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1">
            <summary>
            调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.parameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.GetParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter{`0})">
            <summary>
            获取输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.CallInput(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            调用方法
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.SuccessCallback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter)">
            <summary>
            调用回调
            </summary>
            <param name="methodParameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1">
            <summary>
            调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.parameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.GetParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter{`0})">
            <summary>
            获取输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            调用方法
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            持久化之前检查参数
            </summary>
            <param name="parameter"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.CallBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            持久化之前检查参数
            </summary>
            <param name="parameter"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            初始化加载数据
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod`1">
            <summary>
            服务端节点方法
            </summary>
            <typeparam name="T">输入参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod`1.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.CallInputOutput(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@)">
            <summary>
            调用方法
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.SuccessCallback``1(``0)">
            <summary>
            调用回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter,``0)">
            <summary>
            调用回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodParameter"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.GetBeforePersistenceResponseParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{``0})">
            <summary>
            获取持久化检查方法返回值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodParameter"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1">
            <summary>
            调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.parameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod,`0)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.GetParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter{`0})">
            <summary>
            获取输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="node"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            初始化加载数据
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            调用回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.CallbackDelegate">
            <summary>
            调用回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="node"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            持久化之前检查参数
            </summary>
            <param name="node"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.CallBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            持久化之前检查参数
            </summary>
            <param name="node"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            初始化加载数据
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback``1(``0,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@,System.Boolean)">
            <summary>
            调用回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="callback"></param>
            <param name="isSimpleSerialize"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.GetBeforePersistenceResponseParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{``0},System.Boolean)">
            <summary>
            获取持久化检查方法返回值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="isSimpleSerialize"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum">
            <summary>
            方法调用类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.Call">
            <summary>
            无输入无返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.CallInput">
            <summary>
            有输入无返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.CallOutput">
            <summary>
            无输入有返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.CallInputOutput">
            <summary>
            有输入有返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.SendOnly">
            <summary>
            有输入无返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.KeepCallback">
            <summary>
            无输入有返回（持续回调）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.InputKeepCallback">
            <summary>
            有输入有返回（持续回调）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.Callback">
            <summary>
            无输入有返回（服务端调用类型，客户端对应 CallOutput）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.InputCallback">
            <summary>
            有输入有返回（服务端调用类型，客户端对应 CallInputOutput）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.Enumerable">
            <summary>
            无输入有返回（持续回调）（服务端调用类型，客户端对应 KeepCallback）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.InputEnumerable">
            <summary>
            有输入有返回（持续回调）（服务端调用类型，客户端对应 InputKeepCallback）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.Unknown">
            <summary>
            未知，定义不合法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2">
            <summary>
            字典节点
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.dictionary">
            <summary>
            字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.#ctor(System.Int32)">
            <summary>
            字典节点
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.RenewBeforePersistence(System.Int32)">
            <summary>
            清除所有数据并重建容器 持久化参数检查
            </summary>
            <param name="capacity">新容器初始化大小</param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
            <param name="capacity">新容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.SetBeforePersistence(`0,`1)">
            <summary>
            强制设置数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1">
            <summary>
            256 基分片 HashString 字典 节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.dictionary">
            <summary>
            256 基分片 HashString 字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.SnapshotAdd(AutoCSer.KeyValue{System.String,`0})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.TryGetValue(System.String)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.TryAddBeforePersistence(System.String,`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.TryAdd(System.String,`0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.SetBeforePersistence(System.String,`0)">
            <summary>
            强制设置数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.Set(System.String,`0)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.ContainsKey(System.String)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.RemoveBeforePersistence(System.String)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.Remove(System.String)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.GetRemoveBeforePersistence(System.String)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNode`1.GetRemove(System.String)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2">
            <summary>
            字典节点接口
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.RenewBeforePersistence(System.Int32)">
            <summary>
            清除所有数据并重建容器 持久化参数检查
            </summary>
            <param name="capacity">新容器初始化大小</param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
            <param name="capacity">新容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.TryAddBeforePersistence(`0,`1)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            尝试添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.SetBeforePersistence(`0,`1)">
            <summary>
            强制设置数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.RemoveBeforePersistence(`0)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.GetRemoveBeforePersistence(`0)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1">
            <summary>
            256 基分片 HashString 字典 节点接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.SnapshotAdd(AutoCSer.KeyValue{System.String,`0})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.TryGetValue(System.String)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.TryAddBeforePersistence(System.String,`0)">
            <summary>
            添加数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.TryAdd(System.String,`0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.SetBeforePersistence(System.String,`0)">
            <summary>
            强制设置数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.Set(System.String,`0)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.ContainsKey(System.String)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.RemoveBeforePersistence(System.String)">
            <summary>
            删除关键字 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.Remove(System.String)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.GetRemoveBeforePersistence(System.String)">
            <summary>
            删除关键字并返回被删除数据 持久化参数检查
            </summary>
            <param name="key"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNode`1.GetRemove(System.String)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1">
            <summary>
            返回参数序列化
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.#ctor">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.#ctor(`0)">
            <summary>
            返回参数序列化
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1">
            <summary>
            返回参数序列化
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.#ctor">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.#ctor(`0)">
            <summary>
            返回参数序列化
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary`1">
            <summary>
            服务端二进制序列化数据 / 客户端对象，用于客户端对象与二进制序列化数据适配，减少不必要的序列化开销（比如服务端存二进制序列化数据，客户端处理为对象）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary`1.buffer">
            <summary>
            服务端二进制序列化数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary`1.Value">
            <summary>
            客户端对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary`1.#ctor(`0)">
            <summary>
            客户端对象
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary{`0}">
            <summary>
            客户端隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary{`0})~`0">
            <summary>
            客户端隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary`1.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ServerBinary{T}}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerBinary`1.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ServerBinary{T}}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary`1">
            <summary>
            服务端 JSON 字符串二进制序列化数据 / 客户端对象，用于客户端对象与服务端 JSON 字符串二进制序列化数据适配，减少不必要的序列化与内存空间开销（比如服务端存 JSON 字符串二进制序列化数据，客户端处理为对象）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary`1.buffer">
            <summary>
            服务端 JSON 字符串二进制序列化数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary`1.Value">
            <summary>
            客户端对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary`1.#ctor(`0)">
            <summary>
            客户端对象
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary{`0}">
            <summary>
            客户端隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary{`0})~`0">
            <summary>
            客户端隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary`1.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ServerJsonBinary{T}}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary`1.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ServerJsonBinary{T}}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1">
            <summary>
            服务端 JSON 字符串 / 客户端对象，用于客户端对象与服务端 JSON 字符串适配，减少不必要的序列化开销（比如服务端存 JSON 字符串，客户端处理为对象）
            如果服务端不需要使用 JSON 字符串建议使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJsonBinary{T} 以减少内存空间占用
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.Json">
            <summary>
            服务端 JSON 字符串
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.Value">
            <summary>
            客户端对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.#ctor(`0)">
            <summary>
            客户端对象
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.#ctor(System.String)">
            <summary>
            服务端 JSON 字符串
            </summary>
            <param name="json"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson{`0})~System.String">
            <summary>
            服务端隐式转换为字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson{`0}">
            <summary>
            客户端隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson{`0})~`0">
            <summary>
            客户端隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ServerJson{T}}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerJson`1.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ServerJson{T}}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper">
            <summary>
            日志流持久化内存数据库备份
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.masterClient">
            <summary>
            主节点客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.delayTimeSpan">
            <summary>
            同步失败重试间隔
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.loader">
            <summary>
            日志流持久化内存数据库从节点服务数据加载
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.isLoad">
            <summary>
            是否已经启动数据加载
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.IsBackup">
            <summary>
            是否备份客户端
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceConfig,AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent)">
            <summary>
            日志流持久化内存数据库备份
            </summary>
            <param name="config">日志流持久化内存数据库服务端配置</param>
            <param name="masterClient">主节点客户端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.Load">
            <summary>
            开始加载数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.CloseLoader(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader,System.Boolean)">
            <summary>
            关闭数据加载
            </summary>
            <param name="loader"></param>
            <param name="isRetry"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.delayLoad">
            <summary>
            重试加载数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISlaveLoader#GetPersistenceCallbackExceptionPositionFile(System.Int64,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="position"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Backuper.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISlaveLoader#GetPersistenceFile(System.Int64,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="position"></param>
            <param name="buffer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObject">
            <summary>
            日志流持久化内存数据库服务端会话对象操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObject.AutoCSer#Net#ICommandServerSocketSessionObject{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#CommandServerSocketSessionObjectService,AutoCSer#CommandService#StreamPersistenceMemoryDatabase#CommandServerSocketSessionObjectService}#TryGetSessionObject(AutoCSer.Net.CommandServerSocket)">
            <summary>
            尝试从命令服务套接字自定义会话对象获取指定会话对象
            </summary>
            <param name="socket"></param>
            <returns>失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObject.AutoCSer#Net#ICommandServerSocketSessionObject{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#CommandServerSocketSessionObjectService,AutoCSer#CommandService#StreamPersistenceMemoryDatabase#CommandServerSocketSessionObjectService}#CreateSessionObject(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService,AutoCSer.Net.CommandServerSocket)">
            <summary>
            创建会话对象
            </summary>
            <param name="cacheService"></param>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObject.Default">
            <summary>
            默认日志流持久化内存数据库服务端会话对象操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.BeforePersistenceMethodParameter">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode">
            <summary>
            服务基础操作接口方法映射枚举
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.RemoveNodeBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点持久化参数检查
            </summary>
            <param name="index">节点索引信息</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.CreateFragmentHashStringDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建字典节点 FragmentHashStringDictionary256{HashString,string}
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService">
            <summary>
            服务端会话绑定日志流持久化内存数据库服务
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.streamPersistenceMemoryDatabaseConfig">
            <summary>
            日志流持久化内存数据库服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.singleService">
            <summary>
            单服务实例
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.isSingleService">
            <summary>
            是否进程内单服务
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.isDeserializeLog">
            <summary>
            是否输出反序列化错误日志
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.serviceCount">
            <summary>
            服务数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.Config">
            <summary>
            日志流持久化内存数据库服务端配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.CommandServerCallQueue">
            <summary>
            服务端执行队列
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistenceFileInfo">
            <summary>
            持久化文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistenceCallbackExceptionPositionFileInfo">
            <summary>
            持久化回调异常位置文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.nodeCreators">
            <summary>
            生成服务端节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.nodeCreatorLock">
            <summary>
            生成服务端节点集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.RepairNodeMethodLoaders">
            <summary>
            待加载修复方法节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistenceDataPositionBuffer">
            <summary>
            持久化回调异常位置写入缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.nodeDictionary">
            <summary>
            根节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.createKeys">
            <summary>
            正在创建节点的关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.serviceCallbackWait">
            <summary>
            持久化回调完成等待
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.Nodes">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.CurrentMethodParameter">
            <summary>
            当前执行的调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistenceQueue">
            <summary>
            调用持久化链表
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistenceWaitHandle">
            <summary>
            等待事件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.Rebuilder">
            <summary>
            日志流持久化文件重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.Slave">
            <summary>
            从节点客户端信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.LoadedRepairNodeMethod">
            <summary>
            已加载加载修复节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.RebuildPosition">
            <summary>
            持久化流重建起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistencePosition">
            <summary>
            持久化流已写入位置
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.RebuildPersistenceEndPosition">
            <summary>
            持久化流重建绝对结束位置 rebuildPosition + persistencePosition
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistenceCallbackExceptionFilePosition">
            <summary>
            持久化回调异常位置文件已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.NodeIndex">
            <summary>
            当前分配节点索引
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.serviceCallbackCount">
            <summary>
            未完成持久化回调次数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.SnapshotTransactionNodeVersion">
            <summary>
            快照事务关系节点版本
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.IsMaster">
            <summary>
            是否主节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.CanCreateSlave">
            <summary>
            是否允许创建从节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.IsBackup">
            <summary>
            是否备份客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.CurrentCallIsPersistence">
            <summary>
            当前调用是否持久化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.IsLoaded">
            <summary>
            是否已经加载完数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.IsDisposed">
            <summary>
            是否已经释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig,System.Boolean)">
            <summary>
            服务端会话绑定日志流持久化内存数据库服务
            </summary>
            <param name="config">日志流持久化内存数据库服务端配置</param>
            <param name="isMaster">是否主节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.AppendNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.String)">
            <summary>
            添加新节点
            </summary>
            <param name="node"></param>
            <param name="key"></param>
            <returns>当前执行的持久化回调</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.CreateInputMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PushPersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            添加持久化调用方法与参数信息
            </summary>
            <param name="methodParameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PushPersistenceMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,``0@)">
            <summary>
            添加持久化调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodParameter"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.SetCurrentMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            设置当前执行的调用方法与参数信息
            </summary>
            <param name="methodParameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,System.Int64)">
            <summary>
            持久化回调
            </summary>
            <param name="head"></param>
            <param name="end"></param>
            <param name="persistencePosition"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.PersistenceException(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化结束释放队列
            </summary>
            <param name="head"></param>
            <param name="end"></param>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.WritePersistenceCallbackExceptionPosition(System.Int64)">
            <summary>
            写入持久化回调异常数据位置
            </summary>
            <param name="persistenceCallbackExceptionPosition">持久化异常位置信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.AppendRepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod)">
            <summary>
            添加修复接口方法文件
            </summary>
            <param name="repairNodeMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.AppendRepairNodeMethodLoader``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService,System.IO.DirectoryInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory)">
            <summary>
            添加待加载修复方法节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="methodDirectory"></param>
            <param name="repairNodeMethodDirectory"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.appendRepairNodeMethodLoader``1(System.IO.DirectoryInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory@)">
            <summary>
            添加待加载修复方法节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodDirectory"></param>
            <param name="repairNodeMethodDirectory"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.AppendRepairNodeMethodLoader(System.UInt64,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader)">
            <summary>
            添加待加载修复方法节点
            </summary>
            <param name="position"></param>
            <param name="loader"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.GetNodeCreator``1">
            <summary>
            获取生成服务端节点
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.AppendLoadedRepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod)">
            <summary>
            添加已加载加载修复节点方法
            </summary>
            <param name="repairNodeMethod"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.CloseLoader(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader,System.Boolean)">
            <summary>
            关闭数据加载
            </summary>
            <param name="loader"></param>
            <param name="isRetry"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService.GetSessionObject(AutoCSer.BinaryDeserializer)">
            <summary>
            从反序列化上下文中获取日志流持久化内存数据库服务端对象
            </summary>
            <param name="deserializer"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1">
            <summary>
            服务端节点上下文
            </summary>
            <typeparam name="T">服务节点类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.streamPersistenceMemoryDatabaseService">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.streamPersistenceMemoryDatabaseNode">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.SetContext(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            服务端节点上下文
            </summary>
            <param name="node">服务端节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseServiceLoaded">
            <summary>
            初始化加载完毕处理
            </summary>
            <returns>加载完毕替换的新节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseServiceNodeOnRemoved">
            <summary>
            节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.getServerNode(System.String,System.Boolean)">
            <summary>
            根据节点全局关键字获取服务端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="isSnapshotTransaction">默认为 true 表示需要建立快照事务关系，比如在持久化 API 中同步更新其它节点状态</param>
            <returns>服务端节点，失败返回 null</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptyCommandServerCallback`1">
            <summary>
            空回调
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptyCommandServerCallback`1.Callback(`0)">
            <summary>
            空回调
            </summary>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptyCommandServerCallback`1.Default">
            <summary>
            空回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode">
            <summary>
            服务端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode.StreamPersistenceMemoryDatabaseServiceNodeOnRemoved">
            <summary>
            节点移除后处理
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode`1">
            <summary>
            服务端节点接口
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode`1.SetContext(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            设置节点上下文
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode`1.StreamPersistenceMemoryDatabaseServiceLoaded">
            <summary>
            初始化加载完毕处理
            </summary>
            <returns>加载完毕替换的新节点</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISlaveLoader">
            <summary>
            从服务节点加载数据接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISlaveLoader.GetPersistenceFile(System.Int64,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="position"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISlaveLoader.GetPersistenceCallbackExceptionPositionFile(System.Int64,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="position"></param>
            <param name="buffer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshot`1">
            <summary>
            节点快照功能接口
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshot`1.GetSnapshotArray">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <returns>快照数据集合</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.Index">
            <summary>
            方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.BeforePersistenceMethodIndex">
            <summary>
            持久化之前参数检查方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.CallType">
            <summary>
            方法调用类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.flags">
            <summary>
            服务端节点方法标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsPersistence">
            <summary>
            是否持久化（涉及写入操作则需要持久化）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsClientCall">
            <summary>
            是否允许客户端调用，否则为服务端内存调用方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsSimpleSerializeParamter">
            <summary>
            是否简单序列化输出数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsSimpleDeserializeParamter">
            <summary>
            是否简单反序列化输入数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsIgnorePersistenceCallbackException">
            <summary>
            是否忽略持久化回调异常，节点方法必须保证异常时还原恢复内存数据状态，必须关心 new 产生的内存不足异常，在修改数据以前应该将完成所有 new 操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader">
            <summary>
            加载修复节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader.nodeCreator">
            <summary>
            生成服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader.methodDirectory">
            <summary>
            节点方法目录
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader.repairNodeMethodDirectory">
            <summary>
            修复方法目录信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator,System.IO.DirectoryInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory@)">
            <summary>
            加载修复节点方法
            </summary>
            <param name="nodeCreator">生成服务端节点</param>
            <param name="methodDirectory">节点方法目录</param>
            <param name="repairNodeMethodDirectory">修复方法目录信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader.LoadRepair">
            <summary>
            初始化节点加载修复方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader`1">
            <summary>
            加载修复节点方法
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator,System.IO.DirectoryInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory@)">
            <summary>
            加载修复节点方法
            </summary>
            <param name="nodeCreator">生成服务端节点</param>
            <param name="methodDirectory">节点方法目录</param>
            <param name="repairNodeMethodDirectory">修复方法目录信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodLoader`1.LoadRepair">
            <summary>
            初始化节点加载修复方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback">
            <summary>
            修复节点方法队列回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.nodeCreator">
            <summary>
            生成服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.repairNodeMethod">
            <summary>
            修复节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.nodeMethod">
            <summary>
            修复节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.method">
            <summary>
            修复节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.methodInfo">
            <summary>
            修复节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.methodAttribute">
            <summary>
            服务端节点方法自定义属性
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.methodDirectory">
            <summary>
            修复节点方法目录
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.callback">
            <summary>
            修复节点方法回调返回状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            修复节点方法队列回调
            </summary>
            <param name="nodeCreator">生成服务端节点</param>
            <param name="repairNodeMethod">修复节点方法信息</param>
            <param name="nodeMethod">修复节点方法信息</param>
            <param name="method">修复节点方法</param>
            <param name="methodInfo">修复节点方法信息</param>
            <param name="methodAttribute">服务端节点方法自定义属性</param>
            <param name="callback">修复节点方法回调返回状态</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodCallback.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute">
            <summary>
            服务端节点方法自定义属性
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex">
            <summary>
            自定义方法序号，用于客户端识别服务端 API 的路由，同一个节点接口中不允许重复，默认小于 0 表示采用自动匹配模式，自动匹配模式不能保证服务端修改升级以后旧的客户端调用路由能与新的服务端路由匹配。存在自定义需求时不要使用巨大的数据，建议从 0 开始，因为它会是某个数组的大小。
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsPersistence">
            <summary>
            默认为 true 表示调用需要持久化，如果调用不涉及数据变更操作则应该手动设置为 false 避免垃圾数据被持久化（只有在节点支持快照的场景下才有效，不支持快照的节点不支持持久化，即使设置为 true 也无效）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsClientCall">
            <summary>
            默认为 true 表示允许客户端调用，否则为服务端内存调用方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsSnapshotMethod">
            <summary>
            是否快照调用方法，该方法必须只有 1 个参数且类型匹配快照数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsSendOnly">
            <summary>
            默认为 false 表示服务端应答客户端请求，设置为 true 表示服务端仅接收请求不做应答操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsIgnorePersistenceCallbackException">
            <summary>
            默认为 false 表示持久化回调异常时将节点设置为不可用状态，设置为 true 则在 Node.IsPersistenceCallbackChanged 为 false 时避免该问题，但是节点方法必须保证异常时还原恢复内存数据状态，必须关心 new 产生的内存不足异常，在修改数据以前应该将完成所有 new 操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.Default">
            <summary>
            默认节点方法自定义属性
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1">
            <summary>
            方法调用回调包装
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.callback">
            <summary>
            服务接口回调委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.isSimpleSerialize">
            <summary>
            是否简单序列化输出数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.#ctor">
            <summary>
            无回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.#ctor(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@,System.Boolean)">
            <summary>
            方法调用回调包装
            </summary>
            <param name="callback">服务接口回调委托</param>
            <param name="isSimpleSerialize">是否简单序列化输出数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Callback(`0)">
            <summary>
            成功回调
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            失败回调
            </summary>
            <param name="state">失败状态</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.CreateDelegate">
            <summary>
            创建方法调用回调包装对象委托类型
            </summary>
            <param name="callback"></param>
            <param name="isSimpleSerialize"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Create(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@,System.Boolean)">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <param name="callback"></param>
            <param name="isSimpleSerialize"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <param name="methodParameter"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.NullCallback">
            <summary>
            无回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceStartIndex">
            <summary>
            持久化输出流起始位置，用于记录当前输出数据长度
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.CompressPersistenceStartIndex">
            <summary>
            压缩持久化输出流起始位置，用于记录压缩后的数据长度
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.Node">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.persistenceCallbackExceptionPosition">
            <summary>
            持久化异常位置信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.IsPersistenceCallback">
            <summary>
            持久化回调是否成功
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.Clone">
            <summary>
            复制调用方法与参数信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns>下一个参数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceCallbackIgnoreException(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer,System.Int64)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <param name="persistenceCallbackExceptionPosition"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.persistenceSerialize(AutoCSer.BinarySerializer,System.Int64)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceSerialize``1(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,``0@)">
            <summary>
            持久化序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializer"></param>
            <param name="method"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            获取服务端节点
            </summary>
            <param name="methodParameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1">
            <summary>
            方法调用回调包装
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.callback">
            <summary>
            服务接口回调委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.IsSimpleSerialize">
            <summary>
            是否简单序列化输出数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Reserve">
            <summary>
            保留
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.IsCancelKeepCallback">
            <summary>
            是否已经取消保持回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.#ctor">
            <summary>
            无回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.#ctor(AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@,System.Boolean)">
            <summary>
            方法调用回调包装
            </summary>
            <param name="callback">服务接口回调委托</param>
            <param name="isSimpleSerialize">是否简单序列化输出数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Callback(`0)">
            <summary>
            成功回调
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Callback(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            成功回调
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.CallbackCancelKeep(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            失败回调
            </summary>
            <param name="state">失败状态</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.CancelKeep">
            <summary>
            取消保持回调命令
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.CreateDelegate">
            <summary>
            创建方法调用回调包装对象委托类型
            </summary>
            <param name="callback"></param>
            <param name="isSimpleSerialize"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Create(AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@,System.Boolean)">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <param name="callback"></param>
            <param name="isSimpleSerialize"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter)">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <param name="methodParameter"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.NullCallback">
            <summary>
            无回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.node">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.pushPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            添加到持久化队列
            </summary>
            <param name="methodParameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallMethodParameter(System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="creator"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallOutputMethodParameter(System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="creator"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallInputMethodParameter``1(System.Int32,``0@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallInputOutputMethodParameter``1(System.Int32,``0@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createSendOnlyMethodParameter``1(System.Int32,``0@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateSendOnlyMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createKeepCallbackMethodParameter(System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateKeepCallbackMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="creator"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createInputKeepCallbackMethodParameter``1(System.Int32,``0@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateInputKeepCallbackMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator`1">
            <summary>
            创建调用方法与参数信息，用于服务端自定义持久化调用，调用接口方法会添加到持久化队列
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator`1.Creator">
            <summary>
            创建调用方法与参数信息，用于服务端自定义持久化调用，调用接口方法会添加到持久化队列
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`1">
            <summary>
            创建调用方法与参数信息节点
            </summary>
            <typeparam name="T">服务节点类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`1.methodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`1.SetContext(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            服务端节点上下文
            </summary>
            <param name="node">服务端节点</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Index">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.NodeCreator">
            <summary>
            生成服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Key">
            <summary>
            节点全局关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CreateNodeMethodParameter">
            <summary>
            创建节点参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SnapshotTransactionNodes">
            <summary>
            快照事务关系节点集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SnapshotTransactionNodeCount">
            <summary>
            快照事务关系节点数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsPersistence">
            <summary>
            是否持久化，设置为 false 为纯内存模式在重启服务是数据将丢失
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.callState">
            <summary>
            节点调用状态
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CallState">
            <summary>
            节点调用状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Rebuilding">
            <summary>
            是否重建中，设置为 true 表示忽略持久化回调参数，设置为 false 则需要将回调参数复制添加到待持久化队列中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsLoadException">
            <summary>
            是否初始化加载执行异常节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsPersistenceCallbackChanged">
            <summary>
            持久化回调是否存在数据更新，节点数据更新以后应该将该状态修改为 true
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsRebuild">
            <summary>
            当前节点是否支持重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsRemoved">
            <summary>
            当前节点是否已被移除
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,System.Boolean)">
            <summary>
            服务端节点
            </summary>
            <param name="nodeCreator"></param>
            <param name="index"></param>
            <param name="key">节点全局关键字</param>
            <param name="isPersistence">是否持久化，设置为 false 为纯内存模式在重启服务是数据将丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Loaded">
            <summary>
            初始化加载完毕处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.OnRemoved">
            <summary>
            服务端节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotTransactionNode(AutoCSer.HashString@)">
            <summary>
            根据节点全局关键字获取服务端节点
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.AppendSnapshotTransaction(AutoCSer.HashString@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            添加快照事务关系节点
            </summary>
            <param name="key"></param>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.appendSnapshotTransaction(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            添加快照事务关系节点
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SetPersistenceCallbackException">
            <summary>
            设置持久化回调错误
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SetLoadException">
            <summary>
            设置初始化加载持久化数据执行异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CreateInputMethodParameter(System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum@)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="methodIndex"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Call(System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="methodIndex"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CallOutput(System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="methodIndex"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.KeepCallback(System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="methodIndex"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CloseRebuild">
            <summary>
            关闭重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SetSnapshotArray">
            <summary>
            获取快照数据集合
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Rebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder)">
            <summary>
            持久化重建
            </summary>
            <param name="rebuilder"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Repair(System.Byte[],System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="rawAssembly"></param>
            <param name="method">必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <param name="methodAttribute"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Bind(System.Byte[],System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="rawAssembly"></param>
            <param name="method">必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <param name="methodAttribute"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotArray``2(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            获取快照数据集合
            </summary>
            <param name="values"></param>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotArray``1(System.Int32,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            获取快照数据集合
            </summary>
            <param name="count"></param>
            <param name="values"></param>
            <returns>快照数据集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSearchTreeSnapshotArray``1(System.Int32,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            获取二叉搜索树快照数据集合
            </summary>
            <param name="count"></param>
            <param name="values"></param>
            <returns>快照数据集合</returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.DefaultAttribute">
            <summary>
            默认节点接口配置
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1">
            <summary>
            服务端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.target">
            <summary>
            操作节点对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.Target">
            <summary>
            操作节点对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,`0,System.Boolean)">
            <summary>
            服务端节点
            </summary>
            <param name="service"></param>
            <param name="index"></param>
            <param name="key">节点全局关键字</param>
            <param name="target"></param>
            <param name="isPersistence">默认为 true 表示持久化为数据库，设置为 false 为纯内存模式在重启服务是数据将丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,`0)">
            <summary>
            服务端节点（除了 服务基础操作节点 以外，该调用不支持节点持久化，只有支持快照的节点才支持持久化）
            </summary>
            <param name="service"></param>
            <param name="index"></param>
            <param name="key">节点全局关键字</param>
            <param name="target"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.Loaded">
            <summary>
            初始化加载完毕处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.OnRemoved">
            <summary>
            服务端节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.CreateMethodParameterCreator">
            <summary>
            创建调用方法与参数信息，派生自类型 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator
            </summary>
            <returns>创建调用方法与参数信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.Repair(System.Byte[],System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="rawAssembly"></param>
            <param name="method">必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <param name="methodAttribute"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.Bind(System.Byte[],System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="rawAssembly"></param>
            <param name="method">必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <param name="methodAttribute"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.GetTarget(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            获取操作节点对象
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2">
            <summary>
            支持快照的服务端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2.IsRebuild">
            <summary>
            当前节点是否支持重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2.snapshotArray">
            <summary>
            快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,`0,System.Boolean)">
            <summary>
            服务端节点
            </summary>
            <param name="service"></param>
            <param name="index"></param>
            <param name="key">节点全局关键字</param>
            <param name="target"></param>
            <param name="isPersistence">默认为 true 表示持久化为数据库，设置为 false 为纯内存模式在重启服务是数据将丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2.checkTarget(`0)">
            <summary>
            检查操作节点对象是否实现快照接口
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2.Loaded">
            <summary>
            初始化加载完毕处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2.CloseRebuild">
            <summary>
            关闭重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2.SetSnapshotArray">
            <summary>
            获取快照数据集合
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`2.Rebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder)">
            <summary>
            持久化重建
            </summary>
            <param name="rebuilder"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator">
            <summary>
            生成服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Type">
            <summary>
            节点接口类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.methodLock">
            <summary>
            节点方法集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Methods">
            <summary>
            节点方法集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.NodeMethods">
            <summary>
            节点方法信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.SnapshotMethod">
            <summary>
            快照方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.SnapshotType">
            <summary>
            快照数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.State">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService,System.Type,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,System.Type)">
            <summary>
            生成服务端节点
            </summary>
            <param name="service"></param>
            <param name="type">节点接口类型</param>
            <param name="methods">节点方法集合</param>
            <param name="nodeMethods">节点方法信息集合</param>
            <param name="snapshotMethod">快照方法</param>
            <param name="snapshotType">快照数据类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.LoadRepairNodeMethod``1">
            <summary>
            初始化节点加载修复方法
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.loadRepairNodeMethod``1(System.IO.DirectoryInfo,System.String,System.Collections.Generic.HashSet{System.Int32},System.Boolean)">
            <summary>
            初始化节点加载修复方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodDirectory"></param>
            <param name="nodeTypeFullName"></param>
            <param name="methodIndexs"></param>
            <param name="isMoveHistory"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Repair``1(System.Byte[],System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rawAssembly"></param>
            <param name="methodInfo">必须是静态方法，第一个参数必须是操作节点接口类型</param>
            <param name="methodAttribute"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.writeRepairNodeMethodFile(System.Byte[],System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute)">
            <summary>
            写入修复节点方法问价
            </summary>
            <param name="rawAssembly"></param>
            <param name="methodInfo"></param>
            <param name="methodAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Bind``1(System.Byte[],System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rawAssembly"></param>
            <param name="methodInfo">必须是静态方法，第一个参数必须是操作节点接口类型</param>
            <param name="methodAttribute"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Repair(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,System.IO.DirectoryInfo,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            修复接口方法错误
            </summary>
            <param name="repairNodeMethod"></param>
            <param name="nodeMethod"></param>
            <param name="method"></param>
            <param name="methodInfo"></param>
            <param name="methodAttribute"></param>
            <param name="methodDirectory"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.GetNodeTypeHashCode(System.IO.DirectoryInfo,System.UInt64@)">
            <summary>
            根据修复方法节点类型目录获取对应节点类型哈希值
            </summary>
            <param name="typeDirectory"></param>
            <param name="nodeTypeHashCode"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.GetMethodDirectoryPosition(System.IO.DirectoryInfo)">
            <summary>
            根据修复方法目录获取对应持久化位置
            </summary>
            <param name="methodDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.GetMethodDirectory(System.IO.DirectoryInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory@)">
            <summary>
            根据修复方法目录获取相关对应信息
            </summary>
            <param name="methodDirectory"></param>
            <param name="repairNodeMethodDirectoryKey"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.GetRepairMethod(System.Byte[]@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName@,System.Reflection.MethodInfo@)">
            <summary>
            获取修复方法信息
            </summary>
            <param name="rawAssembly"></param>
            <param name="methodName"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.GetRepairMethod(System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName@,System.Reflection.MethodInfo@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute@)">
            <summary>
            获取修复方法信息
            </summary>
            <param name="rawAssembly"></param>
            <param name="methodName"></param>
            <param name="method"></param>
            <param name="methodAttribute"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.MethodConstructorParameterTypes">
            <summary>
            服务端节点方法构造函数参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallTypeMethodConstructorParameterTypes">
            <summary>
            服务端节点方法构造函数参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallMethodParameterTypes">
            <summary>
            调用节点方法参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallOutputMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallOutputMethodParameterTypes">
            <summary>
            调用节点方法参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallOutputCallBeforePersistenceMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallOutputCallOutputBeforePersistenceMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallOutputBeforePersistenceMethodParameterTypes">
            <summary>
            调用节点方法参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputMethodParameterTypes">
            <summary>
            调用节点方法参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputOutputMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputOutputMethodParameterTypes">
            <summary>
            调用节点方法参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputOutputCallOutputBeforePersistenceMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputOutputCallBeforePersistenceMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.SendOnlyMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.SendOnlyMethodParameterTypes">
            <summary>
            调用节点方法参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.KeepCallbackMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.KeepCallbackMethodParameterTypes">
            <summary>
            调用节点方法参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.InputKeepCallbackMethod">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.InputKeepCallbackMethodParameterTypes">
            <summary>
            调用节点方法参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.MethodParameterGetNode">
            <summary>
            获取服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallMethodCallback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallOutputMethodCallbackMethod">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallOutputMethodGetBeforePersistenceResponseParameterMethod">
            <summary>
            获取持久化检查方法返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputMethodParameterCallback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputOutputMethodParameterCallbackMethod">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CallInputOutputMethodParameterGetBeforePersistenceResponseParameterMethod">
            <summary>
            获取持久化检查方法返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.KeepCallbackMethodEnumerableCallbackMethod">
            <summary>
            枚举回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.InputKeepCallbackMethodParameterEnumerableCallbackMethod">
            <summary>
            枚举回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.MethodParameterCreatorCreateCallMethodParameter">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.MethodParameterCreatorCreateCallOutputMethodParameter">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.MethodParameterCreatorCreateKeepCallbackMethodParameter">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1">
            <summary>
            生成服务端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.creatorException">
            <summary>
            节点生成错误
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.creatorMessages">
            <summary>
            节点生成提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.methods">
            <summary>
            节点方法集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.nodeMethods">
            <summary>
            节点方法信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.snapshotMethod">
            <summary>
            快照方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.snapshotType">
            <summary>
            快照数据类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService)">
            <summary>
            生成服务端节点
            </summary>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.MethodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity">
            <summary>
            节点信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.Node">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.identity">
            <summary>
            节点标识
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.Get(System.UInt32)">
            <summary>
            获取服务端节点
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.CheckGet(System.UInt32)">
            <summary>
            获取服务端节点
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.UInt32)">
            <summary>
            设置节点
            </summary>
            <param name="node"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.GetRemove(System.UInt32)">
            <summary>
            移除节点
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.GetFreeIdentity">
            <summary>
            设置空闲节点标识，用于创建节点预申请
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.CheckFreeIdentity(System.UInt32@)">
            <summary>
            判断空闲节点标识是否匹配
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.FreeIdentity(System.UInt32)">
            <summary>
            释放空闲节点
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.SetFreeIdentity(System.UInt32)">
            <summary>
            初始化创建节点设置节点标识
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeAttribute">
            <summary>
            节点接口配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeAttribute.IsClientCodeGeneratorOnlyDeclaringMethod">
            <summary>
            默认为 false 表示仅生成当前接口定义方法，否则生成所有被继承接口方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod">
            <summary>
            服务端节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.BeforePersistenceMethodNameSuffix">
            <summary>
            持久化之前检查参数方法的名称后缀
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.createMethodIndex">
            <summary>
            创建节点方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.MethodAttribute">
            <summary>
            节点方法自定义属性
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.repairMethods">
            <summary>
            修复方法集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.PersistenceMethodName">
            <summary>
            持久化方法名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.persistenceMethodReturnType">
            <summary>
            持久化方法返回数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.RepairNodeMethod">
            <summary>
            修复节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.beforePersistenceMethodIndex">
            <summary>
            持久化之前参数检查方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.IsPersistence">
            <summary>
            默认为 true 表示调用需要持久化，如果调用不涉及数据变更操作则应该手动设置为 false 避免垃圾数据被持久化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.IsClientCall">
            <summary>
            默认为 true 表示允许客户端调用，否则为服务端内存调用方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.IsDeclaringMethod">
            <summary>
            是否当前接口定义方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.#ctor(System.Type,System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute,System.Boolean)">
            <summary>
            服务端节点方法信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
            <param name="methodAttribute"></param>
            <param name="isDeclaringMethod"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.CheckBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod,System.String@)">
            <summary>
            持久化检查方法匹配
            </summary>
            <param name="beforePersistenceMethod"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.setIsPersistenceMethod">
            <summary>
            设置持久化检查方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.CallMethodParameter(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.LocalBuilder)">
            <summary>
            方法调用传参
            </summary>
            <param name="doCommandGenerator"></param>
            <param name="inputParameterLocalBuilder"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.CheckRepair(System.Type,System.Reflection.MethodInfo)">
            <summary>
            检查修复方法定义是否一致
            </summary>
            <param name="type"></param>
            <param name="methodInfo"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.CreateMethod``1(System.Reflection.MethodInfo)">
            <summary>
            创建服务端节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repairMethod">修复方法信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.createMethod``1(System.Reflection.MethodInfo)">
            <summary>
            创建服务端节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="repairMethod">修复方法信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.GetMethod(System.Type,AutoCSer.LeftArray{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod}@,System.Boolean)">
            <summary>
            获取服务端接口方法集合
            </summary>
            <param name="type"></param>
            <param name="methods"></param>
            <param name="isDeclaringMethod"></param>
            <returns>错误信息</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType">
            <summary>
            服务端节点类型信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.NodeAttribute">
            <summary>
            节点接口配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.Methods">
            <summary>
            服务端接口方法信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.Messages">
            <summary>
            提示信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.#ctor(System.Type)">
            <summary>
            服务端节点类型信息
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.GetClientMethods(System.Type,System.Exception@,System.String[]@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod[]@)">
            <summary>
            获取客户端方法集合
            </summary>
            <param name="type"></param>
            <param name="creatorException"></param>
            <param name="creatorMessages"></param>
            <param name="methods"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.GetMethodGroup">
            <summary>
            获取方法分组
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.CheckType(System.Type)">
            <summary>
            接口类型检查
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.CheckType(System.Type,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeAttribute@)">
            <summary>
            检查节点接口类型
            </summary>
            <param name="type"></param>
            <param name="nodeAttribute"></param>
            <returns>错误信息</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer">
            <summary>
            日志流持久化缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.OutputBuffer">
            <summary>
            输出数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.outputCopyBuffer">
            <summary>
            临时复制数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.outputCompressBuffer">
            <summary>
            压缩数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.SendBufferMaxSize">
            <summary>
            数据缓冲区最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.minCompressSize">
            <summary>
            启用压缩最低字节数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.OutputStream">
            <summary>
            输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.start">
            <summary>
            输出数据缓冲区起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.bufferLength">
            <summary>
            输出数据缓冲区大小
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.Count">
            <summary>
            当前已经创建输出数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.currentIndex">
            <summary>
            当前缓冲区已确认输出位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.isNewBuffer">
            <summary>
            是否创建了新的缓冲区
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            日志流持久化缓冲区
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.GetBufferLength">
            <summary>
            获取输出数据缓冲区大小
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.Free">
            <summary>
            释放缓冲区
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.SetStart(System.Byte*)">
            <summary>
            设置输出数据缓冲区起始位置
            </summary>
            <param name="dataFixed"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.Reset">
            <summary>
            重置状态数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.RestoreCurrentIndex">
            <summary>
            还原当前缓冲区已确认输出位置
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.TrySetCurrentIndex">
            <summary>
            输出数量不为 0 时设置当前缓冲区已确认输出位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.CheckResizeError">
            <summary>
            检查输出流是否已经超限
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.CheckDataStart">
            <summary>
            输出数据缓冲区未更新时设置输出计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.CheckNewBuffer">
            <summary>
            检查数据缓冲区是否被新建
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.GetData">
            <summary>
            获取输出数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.compress(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            压缩数据
            </summary>
            <param name="outputData"></param>
            <returns>是否压缩成功</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder">
            <summary>
            日志流持久化文件重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceFileInfo">
            <summary>
            持久化文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceCallbackExceptionPositionFileInfo">
            <summary>
            持久化回调异常位置文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceDataPositionBuffer">
            <summary>
            持久化回调异常位置输出缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.nodes">
            <summary>
            服务端节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.snapshotTransactionNodes">
            <summary>
            快照事务关系节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.LoadExceptionNode">
            <summary>
            初始化加载执行异常节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.node">
            <summary>
            当前持久化节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceQueue">
            <summary>
            调用持久化链表
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.rebuildPosition">
            <summary>
            持久化流重建起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistencePosition">
            <summary>
            持久化流已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceCallbackExceptionFilePosition">
            <summary>
            持久化回调异常位置文件已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.snapshotTransactionNodeVersion">
            <summary>
            快照事务关系节点版本
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.isSnapshotTransactionNodeVersionRebuild">
            <summary>
            快照事务关系节点版本重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.nodeCount">
            <summary>
            服务端节点数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.isClosed">
            <summary>
            是否已关闭
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.isClosedOrServiceDisposed">
            <summary>
            是否已关闭
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            日志流持久化文件重建
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.appendSnapshotTransactionNode(System.Collections.Generic.KeyValuePair{AutoCSer.HashString,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode})">
            <summary>
            添加快照事务关系节点
            </summary>
            <param name="serverNode"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Close">
            <summary>
            关闭重建操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Free">
            <summary>
            释放重建操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.createFile">
            <summary>
            创建重建文件
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.NextNode">
            <summary>
            持久化下一个节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.nodePersistence">
            <summary>
            当前节点持久化操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.checkPersistencePosition(System.IO.FileStream)">
            <summary>
            检查持久化流已写入位置是否匹配
            </summary>
            <param name="persistenceStream"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Rebuild``1(AutoCSer.LeftArray{``0}@)">
            <summary>
            当前节点持久化操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.PushQueue(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            添加调用队列
            </summary>
            <param name="methodParameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.CheckQueue">
            <summary>
            检查调用队列
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.queuePersistence">
            <summary>
            调用队列持久化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistence">
            <summary>
            调用队列持久化
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.QueuePersistence(System.Int64@)">
            <summary>
            未完成调用队列持久化
            </summary>
            <param name="persistenceCallbackExceptionFilePosition"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback">
            <summary>
            日志流持久化文件重建队列回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback.rebuilder">
            <summary>
            日志流持久化文件重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback.type">
            <summary>
            日志流持久化文件重建队列回调任务类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum)">
            <summary>
            日志流持久化文件重建队列回调
            </summary>
            <param name="rebuilder">日志流持久化文件重建</param>
            <param name="type">日志流持久化文件重建队列回调任务类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum">
            <summary>
            日志流持久化文件重建队列回调任务类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.Close">
            <summary>
            关闭重建操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.NextNode">
            <summary>
            持久化下一个节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.CheckQueue">
            <summary>
            检查调用队列
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.Completed">
            <summary>
            重建完成
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave">
            <summary>
            从节点客户端信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.repairNodeMethodDirectoryFiles">
            <summary>
            修复方法目录与文件信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.removeCallback">
            <summary>
            异常移除客户端回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.repairNodeMethodPositionCallback">
            <summary>
            获取修复节点方法信息委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.persistenceFileCallback">
            <summary>
            获取持久化文件数据委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.persistenceCallbackExceptionPositionFileCallback">
            <summary>
            获取持久化回调异常位置文件数据委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.PersistenceCallbackExceptionPositionCallback">
            <summary>
            获取持久化回调异常位置信息委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.readPersistenceWaitLock">
            <summary>
            持久化文件读取操作等待锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.persistenceFileStream">
            <summary>
            持久化文件流
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.persistenceCallbackExceptionPositionFileStream">
            <summary>
            持久化异常位置文件流
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.Timestamp">
            <summary>
            创建从节点客户端信息时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.bufferSize">
            <summary>
            读取文件缓冲区大小
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.isPersistenceCallbackExceptionPosition">
            <summary>
            是否直接获取持久化回调异常位置信息，否则正在读取文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.isClosed">
            <summary>
            是否已释放资源
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.isBackup">
            <summary>
            是否备份客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.persistencePosition">
            <summary>
            读取文件位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.persistenceCallbackExceptionFilePosition">
            <summary>
            读取持久化回调异常位置文件位置
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.Net.CommandServerSocket,System.Boolean)">
            <summary>
            从节点客户端信息
            </summary>
            <param name="service"></param>
            <param name="socket"></param>
            <param name="isBackup">是否备份客户端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.Close">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.RemoveCallback">
            <summary>
            移除从节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.remove">
            <summary>
            移除从节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.AppendRepairNodeMethodDirectoryFile(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile)">
            <summary>
            添加修复方法目录与文件信息
            </summary>
            <param name="directory"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.GetRepairNodeMethodPosition(AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition}@)">
            <summary>
            获取修复节点方法信息
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.AppendRepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethod)">
            <summary>
            修复节点方法信息回调
            </summary>
            <param name="repairNodeMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.SetPersistencePosition(System.Int64)">
            <summary>
            持久化流已写入位置回调
            </summary>
            <param name="persistencePosition">持久化流已写入位置</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.GetPersistenceFile(System.Int64,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer}@)">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="position"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.getPersistenceFile">
            <summary>
            获取持久化文件数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.GetPersistenceCallbackExceptionPositionFile(System.Int64,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer}@)">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="position"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.getPersistenceCallbackExceptionPositionFile">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.CheckPersistenceCallbackExceptionPositionCallback">
            <summary>
            检查持久化回调异常位置文件已写入位置
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave.AppendPersistenceCallbackExceptionPosition(System.Int64)">
            <summary>
            持久化回调异常位置信息回调
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback">
            <summary>
            日志流持久化内存数据库回调操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.PersistencePosition">
            <summary>
            持久化流已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.head">
            <summary>
            持久化回调头节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.end">
            <summary>
            持久化回调尾节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            日志流持久化内存数据库回调操作
            </summary>
            <param name="head">持久化回调头节点</param>
            <param name="end">持久化回调尾节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader">
            <summary>
            日志流持久化内存数据库服务端数据加载
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.FileVersion">
            <summary>
            文件版本号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.FieHead">
            <summary>
            文件头部前 4 个字节，头部版本号为 0
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.PersistenceCallbackExceptionPositionFileHead">
            <summary>
            持久化回调异常位置文件头部前 4 个字节，头部版本号为 0
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.FileHeadSize">
            <summary>
            文件头部字节大小
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.persistenceCallbackExceptionFilePosition">
            <summary>
            持久化异常位置文件读取位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.deserializer">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.persistenceCallbackExceptionPositions">
            <summary>
            持久化回调异常位置集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.persistenceFileName">
            <summary>
            日志流持久化文件名称
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.readBufferSize">
            <summary>
            读取文件缓冲区大小，最小为 4KB
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.persistenceCallbackExceptionPositionFileName">
            <summary>
            持久化回调异常位置文件名称
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            日志流持久化内存数据库服务端数据加载
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.Load">
            <summary>
            开始加载数据
            </summary>
            <returns>加载请求数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.loadHead(AutoCSer.SubArray{System.Byte})">
            <summary>
            加载文件头部数据
            </summary>
            <param name="data">读取文件数据</param>
            <returns>文件头部大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.loadPersistenceCallbackExceptionPositionVersion0">
            <summary>
            加载持久化回调异常位置集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.loadBuffer">
            <summary>
            初始化加载数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.load(AutoCSer.SubArray{System.Byte},System.Int64)">
            <summary>
            加载数据
            </summary>
            <param name="data">当前加载数据缓冲区</param>
            <param name="position">当前数据所在持久化流中的位置</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.GetPersistenceFileHeadVersion(System.Byte[],System.UInt64@)">
            <summary>
            获取持久化文件头部版本信息
            </summary>
            <param name="buffer"></param>
            <param name="rebuildPosition"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode">
            <summary>
            服务基础操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.ServiceNodeIndex">
            <summary>
            创建服务基础操作节点标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            服务基础操作
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.RemoveNodeBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点持久化参数检查
            </summary>
            <param name="index">节点索引信息</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.createNode``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Func{``0})">
            <summary>
            创建服务端节点（不支持持久化，只有支持快照的节点才支持持久化）
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="getNode">获取节点操作对象</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.checkCreateNode``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex@)">
            <summary>
            创建支持快照的服务端节点 参数检查
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="ST"></typeparam>
            <param name="index"></param>
            <param name="key"></param>
            <param name="nodeInfo"></param>
            <param name="nodeIndex"></param>
            <returns>返回 true 表示直接返回无需继续操作</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.createNode``3(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Func{``1})">
            <summary>
            创建支持快照的服务端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <typeparam name="NT">节点接口操作对象类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="getNode">获取节点操作对象</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.createNode``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Func{``0})">
            <summary>
            创建支持快照的服务端节点（必须保证操作节点对象实现快照接口）
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="getNode">获取节点操作对象（必须保证操作节点对象实现快照接口）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateFragmentHashStringDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建字典节点 FragmentHashStringDictionary256{HashString,string}
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateServiceNode``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,``0)">
            <summary>
            创建服务基础操作节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallback">
            <summary>
            从节点客户端信息回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallback.slave">
            <summary>
            从节点客户端信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallback.callbackType">
            <summary>
            从节点客户端信息回调类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallbackTypeEnum)">
            <summary>
            从节点客户端信息回调
            </summary>
            <param name="slave">从节点客户端信息</param>
            <param name="callbackType">从节点客户端信息回调类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallback.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallbackTypeEnum">
            <summary>
            从节点客户端信息回调类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallbackTypeEnum.Remove">
            <summary>
            异常移除节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlaveCallbackTypeEnum.CheckPersistenceCallbackExceptionPosition">
            <summary>
            检查持久化回调异常位置文件已写入位置
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader">
            <summary>
            从服务节点加载数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.isDeserializeLog">
            <summary>
            是否输出反序列化错误日志
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.service">
            <summary>
            服务端会话绑定日志流持久化内存数据库服务
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.masterClient">
            <summary>
            主节点客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.timestamp">
            <summary>
            从服务验证时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.persistencePosition">
            <summary>
            服务端持久化流已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getRepairNodeMethodPositionCommandKeepCallback">
            <summary>
            从节点获取修复节点方法信息命令
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.persistenceCallbackExceptionPositionStream">
            <summary>
            持久化回调异常位置文件流
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceCallbackExceptionPositionFileCommandKeepCallback">
            <summary>
            获取持久化回调异常位置文件数据命令
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceCallbackExceptionPositionCommandKeepCallback">
            <summary>
            获取持久化回调异常位置数据命令
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.persistenceStream">
            <summary>
            持久化文件流
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceFileCommandKeepCallback">
            <summary>
            获取持久化文件数据命令
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceCallbackExceptionPositionFileCompleted">
            <summary>
            获取持久化回调异常位置文件数据是否已完成
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.callState">
            <summary>
            调用错误状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.returnType">
            <summary>
            服务错误返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.isBackup">
            <summary>
            是否备份客户端
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CommandServerSocketSessionObjectService,AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent)">
            <summary>
            从服务节点加载数据
            </summary>
            <param name="service"></param>
            <param name="masterClient"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.Close">
            <summary>
            关闭数据加载
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.Load">
            <summary>
            开始加载数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceCallbackExceptionPositionFile">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceCallbackExceptionPosition(AutoCSer.Net.CommandClientReturnValue{System.Int64},AutoCSer.Net.KeepCallbackCommand)">
            <summary>
            获取持久化回调异常位置数据
            </summary>
            <param name="returnValue"></param>
            <param name="keepCallbackCommand"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceCallbackExceptionPositionFile(AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer},AutoCSer.Net.KeepCallbackCommand)">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="returnValue"></param>
            <param name="keepCallbackCommand"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.GetPersistenceCallbackExceptionPositionFile(System.Int64,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="position"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.tryGetPersistenceFile">
            <summary>
            获取持久化文件数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceFile">
            <summary>
            获取持久化文件数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getPersistenceFile(AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer},AutoCSer.Net.KeepCallbackCommand)">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="returnValue"></param>
            <param name="keepCallbackCommand"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.GetPersistenceFile(System.Int64,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="position"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getRepairNodeMethodPosition">
            <summary>
            从节点获取修复节点方法信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.getRepairNodeMethodPosition(AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition},AutoCSer.Net.KeepCallbackCommand)">
            <summary>
            从节点获取修复节点方法信息
            </summary>
            <param name="returnValue"></param>
            <param name="keepCallbackCommand"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.check``1(AutoCSer.Net.CommandClientReturnValue{``0}@)">
            <summary>
            检查服务返回值状态
            </summary>
            <typeparam name="T"></typeparam>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader.GetSessionObject(AutoCSer.BinaryDeserializer)">
            <summary>
            获取从服务节点加载数据接口实例
            </summary>
            <param name="deserializer"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceConfig">
            <summary>
            日志流持久化内存数据库服务端从节点配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceConfig.DelayMilliseconds">
            <summary>
            同步失败重试间隔毫秒数，默认为 100，最小值为 1
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceConfig.DelayTimeSpan">
            <summary>
            同步失败重试间隔
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceConfig.Create(AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent,AutoCSer.Net.CommandClientSocket)">
            <summary>
            日志流持久化内存数据库备份
            </summary>
            <param name="masterClient"></param>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceConfig.Create``1(System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,``0},AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent)">
            <summary>
            日志流持久化内存数据库服务端（从服务节点）
            </summary>
            <typeparam name="T">节点服务接口类型</typeparam>
            <param name="createServiceNode"></param>
            <param name="masterClient"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceLoadTypeEnum">
            <summary>
            日志流持久化内存数据库从节点服务端加载数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceLoadTypeEnum.RepairNodeMethod">
            <summary>
            修复节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceLoadTypeEnum.PersistenceFile">
            <summary>
            持久化文件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceLoadTypeEnum.PersistenceCallbackExceptionPositionFile">
            <summary>
            持久化回调异常位置文件
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer">
            <summary>
            快照方法序列化调用
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer.serializer">
            <summary>
            二进制序列化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer.nodeIndex">
            <summary>
            节点标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer.methodIndex">
            <summary>
            方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer.isSimpleSerializeParamter">
            <summary>
            是否简单序列化输出数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer.#ctor(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            快照方法序列化调用
            </summary>
            <param name="serializer">二进制序列化</param>
            <param name="node">节点信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer.Serialize``1(``0)">
            <summary>
            参数序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameter"></param>
            <returns>是否序列化成功</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService">
            <summary>
            日志流持久化内存数据库从节点服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.masterClient">
            <summary>
            主节点客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.delayTimeSpan">
            <summary>
            同步失败重试间隔
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.loader">
            <summary>
            日志流持久化内存数据库从节点服务数据加载
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.isLoad">
            <summary>
            是否已经启动数据加载
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveServiceConfig,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode},AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent)">
            <summary>
            日志流持久化内存数据库从节点服务端
            </summary>
            <param name="config">日志流持久化内存数据库服务端配置</param>
            <param name="createServiceNode">创建服务基础操作节点委托</param>
            <param name="masterClient">主节点客户端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.GetNodeIndex(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            获取节点标识
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.Rebuild(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue)">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.RepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.BindNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.CreateSlave(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Boolean)">
            <summary>
            创建从节点
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="isBackup">是否备份客户端</param>
            <returns>从节点验证时间戳，负数表示 CallStateEnum 错误状态</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.Load">
            <summary>
            开始加载数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.CloseLoader(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader,System.Boolean)">
            <summary>
            关闭数据加载
            </summary>
            <param name="loader"></param>
            <param name="isRetry"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.delayLoad">
            <summary>
            重试加载数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISlaveLoader#GetPersistenceCallbackExceptionPositionFile(System.Int64,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="position"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveService.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISlaveLoader#GetPersistenceFile(System.Int64,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="position"></param>
            <param name="buffer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1">
            <summary>
            返回参数
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.#ctor">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.#ctor(`0)">
            <summary>
            返回参数
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.CreateKeepCallback">
            <summary>
            创建持续回调返回参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1">
            <summary>
            返回数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.Value">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.IsValue">
            <summary>
            是否存在返回数据，false 表示输入参数非法或者无返回值
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.#ctor(`0)">
            <summary>
            返回数据
            </summary>
            <param name="value">返回数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{`0}">
            <summary>
            隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.NullEnumerable">
            <summary>
            空集合
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1">
            <summary>
            数组节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.ClearArray">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.GetLength">
            <summary>
            获取数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNodeClientNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode">
            <summary>
            位图节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.ClearBit(System.UInt32)">
            <summary>
            清除位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.ClearMap">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.GetBit(System.UInt32)">
            <summary>
            读取位状态
            </summary>
            <param name="index">位索引</param>
            <returns>非 0 表示二进制位为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.GetBitClearBit(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.GetBitInvertBit(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.GetBitSetBit(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.GetCapacity">
            <summary>
            获取二进制位数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.InvertBit(System.UInt32)">
            <summary>
            状态取反
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode.SetBit(System.UInt32)">
            <summary>
            设置位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2">
            <summary>
            字典节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.TryAdd(`0,`1)">
            <summary>
            尝试添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode`2.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
            <param name="capacity">新容器初始化大小</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2">
            <summary>
            256 基分片字典 节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.TryAdd(`0,`1)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNodeClientNode`1">
            <summary>
            256 基分片 哈希表 节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNodeClientNode`1.Add(`0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNodeClientNode`1.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNodeClientNode`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNodeClientNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNodeClientNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNodeClientNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNodeClientNode`1">
            <summary>
            哈希表节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNodeClientNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNodeClientNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNodeClientNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNodeClientNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNodeClientNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNodeClientNode`1.Renew">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1">
            <summary>
            256 基分片 HashString 字典 节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.ContainsKey(System.String)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.GetRemove(System.String)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.Remove(System.String)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.Set(System.String,`0)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.TryAdd(System.String,`0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode`1.TryGetValue(System.String)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1">
            <summary>
            数组节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.ClearLength">
            <summary>
            清除所有数据并将数据有效长度设置为 0
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.GetCapacity">
            <summary>
            获取数组容器初大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.GetFreeCount">
            <summary>
            获取容器空闲数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.GetLength">
            <summary>
            获取有效数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.GetTryPopValue">
            <summary>
            移除最后一个数据并返回该数据
            </summary>
            <returns>没有可移除数据则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.GetValueRemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据并返回被移除的数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.GetValueRemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.Insert(System.Int32,`0)">
            <summary>
            插入数据
            </summary>
            <param name="index">插入位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.Remove(`0)">
            <summary>
            移除第一个匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">数据</param>
            <returns>是否存在移除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.RemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.RemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据并将最后一个数据移动到该指定位置
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.SetEmpty">
            <summary>
            置空并释放数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.TryAdd(`0)">
            <summary>
            当有空闲位置时添加数据
            </summary>
            <param name="value"></param>
            <returns>如果数组已满则添加失败并返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNodeClientNode`1.TryPop">
            <summary>
            移除最后一个数据
            </summary>
            <returns>是否存在可移除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1">
            <summary>
            消息处理节点 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.AppendMessage(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.Clear">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.ClearFailed">
            <summary>
            清除所有失败消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.GetCount">
            <summary>
            获取未处理完成消息数量（不包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.GetFailedCount">
            <summary>
            获取失败消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.GetMessage(System.Int32)">
            <summary>
            
            </summary>
            <param name="maxCount"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.GetTotalCount">
            <summary>
            获取未处理完成消息数量（包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.GetCallbackCount">
            <summary>
            获取消费者回调数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNodeClientNode`1.GetTimeoutCount">
            <summary>
            获取未完成处理超时消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNodeClientNode`1">
            <summary>
            队列节点接口（先进先出） 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNodeClientNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNodeClientNode`1.Contains(`0)">
            <summary>
            判断队列中是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNodeClientNode`1.Enqueue(`0)">
            <summary>
            将数据添加到队列
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNodeClientNode`1.Count">
            <summary>
            获取队列数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNodeClientNode`1.TryDequeue">
            <summary>
            从队列中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNodeClientNode`1.TryPeek">
            <summary>
            获取队列中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2">
            <summary>
            二叉搜索树节点 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.Clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.ContainsKey(`0)">
            <summary>
            判断是否包含关键字
            </summary>
            <param name="key">关键字</param>
            <returns>是否包含关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.Count">
            <summary>
            获取节点数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.GetHeight">
            <summary>
            获取树高度，时间复杂度 O(n)
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.GetRemove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>被删除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.GetValues(System.Int32,System.Byte)">
            <summary>
            获取范围数据集合
            </summary>
            <param name="skipCount">跳过记录数</param>
            <param name="getCount">获取记录数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="key">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.Remove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.Set(`0,`1)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetFirstKey">
            <summary>
            获取第一个关键字数据
            </summary>
            <returns>第一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetFirstKeyValue">
            <summary>
            获取第一组数据
            </summary>
            <returns>第一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetFirstValue">
            <summary>
            获取第一个数据
            </summary>
            <returns>第一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetKeyValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetLastKey">
            <summary>
            获取最后一个关键字数据
            </summary>
            <returns>最后一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetLastKeyValue">
            <summary>
            获取最后一组数据
            </summary>
            <returns>最后一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetLastValue">
            <summary>
            获取最后一个数据
            </summary>
            <returns>最后一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key">关键字</param>
            <returns>目标数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode`2.TryGetValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1">
            <summary>
            二叉搜索树集合节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">关键字</param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value">关键字</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.GetByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.GetFrist">
            <summary>
            获取第一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.GetLast">
            <summary>
            获取最后一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="value">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNodeClientNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value">关键字</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeClientNode">
            <summary>
            服务基础操作接口方法映射枚举 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeClientNode.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeClientNode.CreateFragmentHashStringDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建字典节点 FragmentHashStringDictionary256{HashString,string}
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2">
            <summary>
            排序字典节点 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNodeClientNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2">
            <summary>
            排序列表节点 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.GetCapacity">
            <summary>
            获取容器大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.IndexOfKey(`0)">
            <summary>
            获取关键字排序位置
            </summary>
            <param name="key"></param>
            <returns>负数表示没有找到关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.IndexOfValue(`1)">
            <summary>
            获取第一个匹配数据排序位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>负数表示没有找到匹配数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.RemoveAt(System.Int32)">
            <summary>
            删除指定排序索引位置数据
            </summary>
            <param name="index"></param>
            <returns>索引超出范围返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNodeClientNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNodeClientNode`1">
            <summary>
            排序集合节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNodeClientNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNodeClientNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNodeClientNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNodeClientNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNodeClientNode`1.GetMax">
            <summary>
            获取最大值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNodeClientNode`1.GetMin">
            <summary>
            获取最小值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNodeClientNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNodeClientNode`1">
            <summary>
            栈节点（后进先出） 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNodeClientNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNodeClientNode`1.Contains(`0)">
            <summary>
            判断是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNodeClientNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNodeClientNode`1.Push(`0)">
            <summary>
            将数据添加到栈
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNodeClientNode`1.TryPeek">
            <summary>
            获取栈中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNodeClientNode`1.TryPop">
            <summary>
            从栈中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum">
            <summary>
            数组节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.Clear">
            <summary>
            [0] 清除指定位置数据
            int startIndex 起始位置
            int count 清除数据数量
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.ClearArray">
            <summary>
            [1] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.ClearBeforePersistence">
            <summary>
            [2] 清除指定位置数据 持久化参数检查
            int startIndex 起始位置
            int count 清除数据数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.Fill">
            <summary>
            [3] 用数据填充数组指定位置
            T value 
            int startIndex 起始位置
            int count 填充数据数量
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.FillArray">
            <summary>
            [4] 用数据填充整个数组
            T value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.FillBeforePersistence">
            <summary>
            [5] 用数据填充数组指定位置 持久化参数检查
            T value 
            int startIndex 起始位置
            int count 填充数据数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.GetLength">
            <summary>
            [6] 获取数组长度
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.GetValue">
            <summary>
            [7] 根据索引位置获取数据
            int index 索引位置
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 超出索引返回则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.GetValueSet">
            <summary>
            [8] 根据索引位置设置数据并返回设置之前的数据
            int index 索引位置
            T value 数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 设置之前的数据，超出索引返回则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.GetValueSetBeforePersistence">
            <summary>
            [9] 根据索引位置设置数据并返回设置之前的数据 持久化参数检查
            int index 索引位置
            T value 数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.IndexOf">
            <summary>
            [10] 从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 
            int startIndex 起始位置
            int count 查找匹配数据数量
            返回值 int 失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.IndexOfArray">
            <summary>
            [11] 从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 
            返回值 int 失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.LastIndexOf">
            <summary>
            [12] 从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 
            int startIndex 最后一个匹配位置（起始位置）
            int count 查找匹配数据数量
            返回值 int 失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.LastIndexOfArray">
            <summary>
            [13] 从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 
            返回值 int 失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.Reverse">
            <summary>
            [14] 反转指定位置数组数据
            int startIndex 起始位置
            int count 反转数据数量
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.ReverseArray">
            <summary>
            [15] 反转整个数组数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.ReverseBeforePersistence">
            <summary>
            [16] 反转指定位置数组数据 持久化参数检查
            int startIndex 起始位置
            int count 反转数据数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.SetValue">
            <summary>
            [17] 根据索引位置设置数据
            int index 索引位置
            T value 数据
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.SetValueBeforePersistence">
            <summary>
            [18] 根据索引位置设置数据 持久化参数检查
            int index 索引位置
            T value 数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.SnapshotSet">
            <summary>
            [19] 
            AutoCSer.KeyValue{int,T} value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.Sort">
            <summary>
            [20] 排序指定位置数组数据
            int startIndex 起始位置
            int count 排序数据数量
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.SortArray">
            <summary>
            [21] 数组排序
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNodeMethodEnum.SortBeforePersistence">
            <summary>
            [22] 排序指定位置数组数据 持久化参数检查
            int startIndex 起始位置
            int count 排序数据数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum">
            <summary>
            位图节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.ClearBit">
            <summary>
            [0] 清除位状态
            uint index 位索引
            返回值 bool 是否设置成功，失败表示索引超出范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.ClearBitBeforePersistence">
            <summary>
            [1] 清除位状态 持久化参数检查
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.ClearMap">
            <summary>
            [2] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.GetBit">
            <summary>
            [3] 读取位状态
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 非 0 表示二进制位为已设置状态，索引超出则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.GetBitClearBit">
            <summary>
            [4] 清除位状态并返回设置之前的状态
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.GetBitClearBitBeforePersistence">
            <summary>
            [5] 清除位状态并返回设置之前的状态 持久化参数检查
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.GetBitInvertBit">
            <summary>
            [6] 状态取反并返回操作之前的状态
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.GetBitInvertBitBeforePersistence">
            <summary>
            [7] 状态取反并返回操作之前的状态 持久化参数检查
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.GetBitSetBit">
            <summary>
            [8] 设置位状态并返回设置之前的状态
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.GetBitSetBitBeforePersistence">
            <summary>
            [9] 设置位状态并返回设置之前的状态 持久化参数检查
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.GetCapacity">
            <summary>
            [10] 获取二进制位数量
            返回值 uint 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.InvertBit">
            <summary>
            [11] 状态取反
            uint index 位索引
            返回值 bool 是否设置成功，失败表示索引超出范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.InvertBitBeforePersistence">
            <summary>
            [12] 状态取反 持久化参数检查
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.SetBit">
            <summary>
            [13] 设置位状态
            uint index 位索引
            返回值 bool 是否设置成功，失败表示索引超出范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.SetBitBeforePersistence">
            <summary>
            [14] 设置位状态 持久化参数检查
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodEnum.SnapshotSet">
            <summary>
            [15] 快照添加数据
            byte[] map 
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum">
            <summary>
            字典节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.Clear">
            <summary>
            [0] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.ContainsKey">
            <summary>
            [1] 判断关键字是否存在
            KT key 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.ContainsValue">
            <summary>
            [2] 判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            VT value 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.Count">
            <summary>
            [3] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.GetRemove">
            <summary>
            [4] 删除关键字并返回被删除数据
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 被删除数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.Remove">
            <summary>
            [5] 删除关键字
            KT key 
            返回值 bool 是否删除成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.Set">
            <summary>
            [6] 强制设置数据，如果关键字已存在则覆盖
            KT key 
            VT value 
            返回值 bool 是否设置成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.TryAdd">
            <summary>
            [7] 尝试添加数据
            KT key 
            VT value 
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.TryGetValue">
            <summary>
            [8] 根据关键字获取数据
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.Renew">
            <summary>
            [9] 清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            int capacity 新容器初始化大小
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.SnapshotAdd">
            <summary>
            [10] 
            AutoCSer.KeyValue{KT,VT} value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.GetRemoveBeforePersistence">
            <summary>
            [11] 删除关键字并返回被删除数据 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [12] 删除关键字 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.RenewBeforePersistence">
            <summary>
            [13] 清除所有数据并重建容器 持久化参数检查
            int capacity 新容器初始化大小
            返回值 bool 返回 true 表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.SetBeforePersistence">
            <summary>
            [14] 强制设置数据 持久化参数检查
            KT key 
            VT value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNodeMethodEnum.TryAddBeforePersistence">
            <summary>
            [15] 添加数据 持久化参数检查
            KT key 
            VT value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum">
            <summary>
            256 基分片字典 节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.Clear">
            <summary>
            [0] 清除数据（保留分片数组）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.ClearArray">
            <summary>
            [1] 清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.ContainsKey">
            <summary>
            [2] 判断关键字是否存在
            KT key 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.Count">
            <summary>
            [3] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.GetRemove">
            <summary>
            [4] 删除关键字并返回被删除数据
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.Remove">
            <summary>
            [5] 删除关键字
            KT key 
            返回值 bool 是否存在关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.Set">
            <summary>
            [6] 强制设置数据，如果关键字已存在则覆盖
            KT key 
            VT value 
            返回值 bool 是否设置成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.TryAdd">
            <summary>
            [7] 如果关键字不存在则添加数据
            KT key 
            VT value 
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.TryGetValue">
            <summary>
            [8] 根据关键字获取数据
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.SnapshotAdd">
            <summary>
            [9] 
            AutoCSer.KeyValue{KT,VT} value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.GetRemoveBeforePersistence">
            <summary>
            [10] 删除关键字并返回被删除数据 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [11] 删除关键字 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.SetBeforePersistence">
            <summary>
            [12] 强制设置数据 持久化参数检查
            KT key 
            VT value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNodeMethodEnum.TryAddBeforePersistence">
            <summary>
            [13] 如果关键字不存在则添加数据 持久化参数检查
            KT key 
            VT value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum">
            <summary>
            256 基分片 哈希表 节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum.Add">
            <summary>
            [0] 如果关键字不存在则添加数据
            T value 
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum.Clear">
            <summary>
            [1] 清除数据（保留分片数组）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum.ClearArray">
            <summary>
            [2] 清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum.Contains">
            <summary>
            [3] 判断关键字是否存在
            T value 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum.Count">
            <summary>
            [4] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum.Remove">
            <summary>
            [5] 删除关键字
            T value 
            返回值 bool 是否存在关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum.AddBeforePersistence">
            <summary>
            [6] 如果关键字不存在则添加数据 持久化参数检查
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [7] 删除关键字 持久化参数检查
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum">
            <summary>
            哈希表节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.Add">
            <summary>
            [0] 添加数据
            T value 
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.Clear">
            <summary>
            [1] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.Contains">
            <summary>
            [2] 判断关键字是否存在
            T value 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.Count">
            <summary>
            [3] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.Remove">
            <summary>
            [4] 删除关键字
            T value 
            返回值 bool 是否删除成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.Renew">
            <summary>
            [5] 清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.AddBeforePersistence">
            <summary>
            [6] 添加数据 持久化参数检查
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [7] 删除关键字 持久化参数检查
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNodeMethodEnum.RenewBeforePersistence">
            <summary>
            [8] 清除所有数据并重建容器 持久化参数检查
            返回值 bool 返回 true 表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum">
            <summary>
            256 基分片 HashString 字典 节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.Clear">
            <summary>
            [0] 清除数据（保留分片数组）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.ClearArray">
            <summary>
            [1] 清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.ContainsKey">
            <summary>
            [2] 判断关键字是否存在
            string key 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.Count">
            <summary>
            [3] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.GetRemove">
            <summary>
            [4] 删除关键字并返回被删除数据
            string key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 被删除数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.Remove">
            <summary>
            [5] 删除关键字
            string key 
            返回值 bool 是否存在关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.Set">
            <summary>
            [6] 强制设置数据，如果关键字已存在则覆盖
            string key 
            T value 
            返回值 bool 是否设置成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.TryAdd">
            <summary>
            [7] 如果关键字不存在则添加数据
            string key 
            T value 
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.TryGetValue">
            <summary>
            [8] 根据关键字获取数据
            string key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.SnapshotAdd">
            <summary>
            [9] 
            AutoCSer.KeyValue{string,T} value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.GetRemoveBeforePersistence">
            <summary>
            [10] 删除关键字并返回被删除数据 持久化参数检查
            string key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [11] 删除关键字 持久化参数检查
            string key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.SetBeforePersistence">
            <summary>
            [12] 强制设置数据 持久化参数检查
            string key 
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashStringFragmentDictionaryNodeMethodEnum.TryAddBeforePersistence">
            <summary>
            [13] 添加数据 持久化参数检查
            string key 
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum">
            <summary>
            数组节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.Add">
            <summary>
            [0] 添加数据
            T value 数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.AddBeforePersistence">
            <summary>
            [1] 添加数据 持久化参数检查
            T value 数据
            返回值 bool 返回 true 表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.Clear">
            <summary>
            [2] 清除指定位置数据
            int startIndex 起始位置
            int count 清除数据数量
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.ClearBeforePersistence">
            <summary>
            [3] 清除指定位置数据 持久化参数检查
            int startIndex 起始位置
            int count 清除数据数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.ClearLength">
            <summary>
            [4] 清除所有数据并将数据有效长度设置为 0
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.Fill">
            <summary>
            [5] 用数据填充数组指定位置
            T value 
            int startIndex 起始位置
            int count 填充数据数量
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.FillArray">
            <summary>
            [6] 用数据填充整个数组
            T value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.FillBeforePersistence">
            <summary>
            [7] 用数据填充数组指定位置 持久化参数检查
            T value 
            int startIndex 起始位置
            int count 填充数据数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetCapacity">
            <summary>
            [8] 获取数组容器初大小
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetFreeCount">
            <summary>
            [9] 获取容器空闲数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetLength">
            <summary>
            [10] 获取有效数组长度
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetTryPopValue">
            <summary>
            [11] 移除最后一个数据并返回该数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有可移除数据则无数据返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetTryPopValueBeforePersistence">
            <summary>
            [12] 移除最后一个数据并返回该数据 持久化参数检查
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetValue">
            <summary>
            [13] 根据索引位置获取数据
            int index 索引位置
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 超出索引返回则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetValueRemoveAt">
            <summary>
            [14] 移除指定索引位置数据并返回被移除的数据
            int index 数据位置
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 超出索引范围则无数据返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetValueRemoveAtBeforePersistence">
            <summary>
            [15] 移除指定索引位置数据并返回被移除的数据 持久化参数检查
            int index 数据位置
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetValueRemoveToEnd">
            <summary>
            [16] 移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据
            int index 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 超出索引范围则无数据返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetValueRemoveToEndBeforePersistence">
            <summary>
            [17] 移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据
            int index 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetValueSet">
            <summary>
            [18] 根据索引位置设置数据并返回设置之前的数据
            int index 索引位置
            T value 数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 设置之前的数据，超出索引返回则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.GetValueSetBeforePersistence">
            <summary>
            [19] 根据索引位置设置数据并返回设置之前的数据 持久化参数检查
            int index 索引位置
            T value 数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.IndexOf">
            <summary>
            [20] 从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 
            int startIndex 起始位置
            int count 查找匹配数据数量
            返回值 int 失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.IndexOfArray">
            <summary>
            [21] 从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 
            返回值 int 失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.Insert">
            <summary>
            [22] 插入数据
            int index 插入位置
            T value 数据
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.InsertBeforePersistence">
            <summary>
            [23] 插入数据 持久化参数检查
            int index 插入位置
            T value 数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.LastIndexOf">
            <summary>
            [24] 从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 
            int startIndex 最后一个匹配位置（起始位置）
            int count 查找匹配数据数量
            返回值 int 失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.LastIndexOfArray">
            <summary>
            [25] 从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 
            返回值 int 失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.Remove">
            <summary>
            [26] 移除第一个匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 数据
            返回值 bool 是否存在移除数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.RemoveAt">
            <summary>
            [27] 移除指定索引位置数据
            int index 数据位置
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.RemoveAtBeforePersistence">
            <summary>
            [28] 移除指定索引位置数据 持久化参数检查
            int index 数据位置
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.RemoveToEnd">
            <summary>
            [29] 移除指定索引位置数据并将最后一个数据移动到该指定位置
            int index 
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.RemoveToEndBeforePersistence">
            <summary>
            [30] 移除指定索引位置数据并将最后一个数据移动到该指定位置 持久化参数检查
            int index 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.Reverse">
            <summary>
            [31] 反转指定位置数组数据
            int startIndex 起始位置
            int count 反转数据数量
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.ReverseArray">
            <summary>
            [32] 反转整个数组数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.ReverseBeforePersistence">
            <summary>
            [33] 反转指定位置数组数据 持久化参数检查
            int startIndex 起始位置
            int count 反转数据数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.SetEmpty">
            <summary>
            [34] 置空并释放数组
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.SetValue">
            <summary>
            [35] 根据索引位置设置数据
            int index 索引位置
            T value 数据
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.SetValueBeforePersistence">
            <summary>
            [36] 根据索引位置设置数据 持久化参数检查
            int index 索引位置
            T value 数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.Sort">
            <summary>
            [37] 排序指定位置数组数据
            int startIndex 起始位置
            int count 排序数据数量
            返回值 bool 超出索引范围则返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.SortArray">
            <summary>
            [38] 数组排序
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.SortBeforePersistence">
            <summary>
            [39] 排序指定位置数组数据 持久化参数检查
            int startIndex 起始位置
            int count 排序数据数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.TryAdd">
            <summary>
            [40] 当有空闲位置时添加数据
            T value 
            返回值 bool 如果数组已满则添加失败并返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.TryPop">
            <summary>
            [41] 移除最后一个数据
            返回值 bool 是否存在可移除数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNodeMethodEnum.TryPopBeforePersistence">
            <summary>
            [42] 移除最后一个数据 持久化参数检查
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum">
            <summary>
            消息处理节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.AppendMessage">
            <summary>
            [0] 生产者添加新消息
            T message 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.AppendMessageBeforePersistence">
            <summary>
            [1] 生产者添加新消息 持久化参数检查
            T message 
            返回值 bool 返回 true 表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.Clear">
            <summary>
            [2] 清除所有消息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.ClearFailed">
            <summary>
            [3] 清除所有失败消息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.Completed">
            <summary>
            [4] 消息完成处理
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.CompletedBeforePersistence">
            <summary>
            [5] 消息完成处理 持久化参数检查
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            返回值 bool 返回 true 表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.Failed">
            <summary>
            [6] 消息失败处理
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.FailedBeforePersistence">
            <summary>
            [7] 消息失败处理 持久化参数检查
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            返回值 bool 返回 true 表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.GetCount">
            <summary>
            [8] 获取未处理完成消息数量（不包括失败消息）
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.GetFailedCount">
            <summary>
            [9] 获取失败消息数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.GetMessage">
            <summary>
            [10] 
            int maxCount 
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{T} callback 
            返回值 T 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.SnapshotAdd">
            <summary>
            [11] 快照设置数据
            T value 数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.GetTotalCount">
            <summary>
            [12] 获取未处理完成消息数量（包括失败消息）
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.GetCallbackCount">
            <summary>
            [13] 获取消费者回调数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeMethodEnum.GetTimeoutCount">
            <summary>
            [14] 获取未完成处理超时消息数量
            返回值 int 
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNodeMethodEnum">
            <summary>
            数组节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNodeMethodEnum.Clear">
            <summary>
            [0] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNodeMethodEnum.Contains">
            <summary>
            [1] 判断队列中是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 匹配数据
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNodeMethodEnum.Enqueue">
            <summary>
            [2] 将数据添加到队列
            T value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNodeMethodEnum.Count">
            <summary>
            [3] 获取队列数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNodeMethodEnum.TryDequeueBeforePersistence">
            <summary>
            [4] 从队列中弹出一个数据 持久化参数检查
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNodeMethodEnum.TryDequeue">
            <summary>
            [5] 从队列中弹出一个数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有可弹出数据则返回无数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNodeMethodEnum.TryPeek">
            <summary>
            [6] 获取队列中下一个弹出数据（不弹出数据仅查看）
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有可弹出数据则返回无数据
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum">
            <summary>
            二叉搜索树节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.Clear">
            <summary>
            [0] 清除数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.ContainsKey">
            <summary>
            [1] 判断是否包含关键字
            KT key 关键字
            返回值 bool 是否包含关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.Count">
            <summary>
            [2] 获取节点数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.CountLess">
            <summary>
            [3] 根据关键字比它小的节点数量
            KT key 关键字
            返回值 int 节点数量，失败返回 -1
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.CountThan">
            <summary>
            [4] 根据关键字比它大的节点数量
            KT key 关键字
            返回值 int 节点数量，失败返回 -1
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.GetHeight">
            <summary>
            [5] 获取树高度，时间复杂度 O(n)
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.GetRemove">
            <summary>
            [6] 根据关键字删除节点
            KT key 关键字
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 被删除数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.GetRemoveBeforePersistence">
            <summary>
            [7] 删除关键字并返回被删除数据 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.GetValues">
            <summary>
            [8] 获取范围数据集合
            int skipCount 跳过记录数
            byte getCount 获取记录数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.IndexOf">
            <summary>
            [9] 根据关键字获取一个匹配节点位置
            KT key 关键字
            返回值 int 一个匹配节点位置,失败返回-1
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.Remove">
            <summary>
            [10] 根据关键字删除节点
            KT key 关键字
            返回值 bool 是否存在关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [11] 删除关键字 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.Set">
            <summary>
            [12] 设置数据
            KT key 关键字
            VT value 数据
            返回值 bool 是否添加了关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.SetBeforePersistence">
            <summary>
            [13] 设置数据 持久化参数检查
            KT key 关键字
            VT value 数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.SnapshotAdd">
            <summary>
            [14] 
            AutoCSer.KeyValue{KT,VT} value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryAdd">
            <summary>
            [15] 添加数据
            KT key 关键字
            VT value 数据
            返回值 bool 是否添加了数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryAddBeforePersistence">
            <summary>
            [16] 添加数据 持久化参数检查
            KT key 
            VT value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetFirstKey">
            <summary>
            [17] 获取第一个关键字数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{KT} 第一个关键字数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetFirstKeyValue">
            <summary>
            [18] 获取第一组数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.KeyValue{KT,VT}} 第一组数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetFirstValue">
            <summary>
            [19] 获取第一个数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 第一个数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetKeyValueByIndex">
            <summary>
            [20] 根据节点位置获取数据
            int index 节点位置
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.KeyValue{KT,VT}} 数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetLastKey">
            <summary>
            [21] 获取最后一个关键字数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{KT} 最后一个关键字数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetLastKeyValue">
            <summary>
            [22] 获取最后一组数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.KeyValue{KT,VT}} 最后一组数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetLastValue">
            <summary>
            [23] 获取最后一个数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 最后一个数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetValue">
            <summary>
            [24] 根据关键字获取数据
            KT key 关键字
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 目标数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNodeMethodEnum.TryGetValueByIndex">
            <summary>
            [25] 根据节点位置获取数据
            int index 节点位置
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 数据
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum">
            <summary>
            二叉搜索树集合节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.Add">
            <summary>
            [0] 添加数据
            T value 关键字
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.Clear">
            <summary>
            [1] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.Contains">
            <summary>
            [2] 判断关键字是否存在
            T value 关键字
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.Count">
            <summary>
            [3] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.CountLess">
            <summary>
            [4] 根据关键字比它小的节点数量
            T value 关键字
            返回值 int 节点数量，失败返回 -1
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.CountThan">
            <summary>
            [5] 根据关键字比它大的节点数量
            T value 关键字
            返回值 int 节点数量，失败返回 -1
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.GetByIndex">
            <summary>
            [6] 根据节点位置获取数据
            int index 节点位置
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.GetFrist">
            <summary>
            [7] 获取第一个数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有数据时返回无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.GetLast">
            <summary>
            [8] 获取最后一个数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有数据时返回无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.IndexOf">
            <summary>
            [9] 根据关键字获取一个匹配节点位置
            T value 关键字
            返回值 int 一个匹配节点位置,失败返回-1
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.Remove">
            <summary>
            [10] 删除关键字
            T value 关键字
            返回值 bool 是否删除成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.AddBeforePersistence">
            <summary>
            [11] 添加数据 持久化参数检查
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [12] 删除关键字 持久化参数检查
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeMethodEnum">
            <summary>
            服务基础操作接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeMethodEnum.RemoveNode">
            <summary>
            [0] 删除节点
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            返回值 bool 是否成功删除节点，否则表示没有找到节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeMethodEnum.CreateFragmentHashStringDictionaryNode">
            <summary>
            [1] 创建字典节点 FragmentHashStringDictionary256{HashString,string}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeMethodEnum.RemoveNodeBeforePersistence">
            <summary>
            [2] 删除节点持久化参数检查
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum">
            <summary>
            排序字典节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.Clear">
            <summary>
            [0] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.ContainsKey">
            <summary>
            [1] 判断关键字是否存在
            KT key 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.ContainsValue">
            <summary>
            [2] 判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            VT value 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.Count">
            <summary>
            [3] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.GetRemove">
            <summary>
            [4] 删除关键字并返回被删除数据
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.GetRemoveBeforePersistence">
            <summary>
            [5] 删除关键字并返回被删除数据 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.Remove">
            <summary>
            [6] 删除关键字
            KT key 
            返回值 bool 是否删除成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [7] 删除关键字 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.SnapshotAdd">
            <summary>
            [8] 
            AutoCSer.KeyValue{KT,VT} value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.TryAdd">
            <summary>
            [9] 添加数据
            KT key 
            VT value 
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.TryAddBeforePersistence">
            <summary>
            [10] 添加数据 持久化参数检查
            KT key 
            VT value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNodeMethodEnum.TryGetValue">
            <summary>
            [11] 根据关键字获取数据
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum">
            <summary>
            排序列表节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.Clear">
            <summary>
            [0] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.ContainsKey">
            <summary>
            [1] 判断关键字是否存在
            KT key 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.ContainsValue">
            <summary>
            [2] 判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            VT value 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.Count">
            <summary>
            [3] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.GetCapacity">
            <summary>
            [4] 获取容器大小
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.GetRemove">
            <summary>
            [5] 删除关键字并返回被删除数据
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.GetRemoveBeforePersistence">
            <summary>
            [6] 删除关键字并返回被删除数据 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.IndexOfKey">
            <summary>
            [7] 获取关键字排序位置
            KT key 
            返回值 int 负数表示没有找到关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.IndexOfValue">
            <summary>
            [8] 获取第一个匹配数据排序位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            VT value 
            返回值 int 负数表示没有找到匹配数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.Remove">
            <summary>
            [9] 删除关键字
            KT key 
            返回值 bool 是否删除成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.RemoveAt">
            <summary>
            [10] 删除指定排序索引位置数据
            int index 
            返回值 bool 索引超出范围返回 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.RemoveAtBeforePersistence">
            <summary>
            [11] 删除指定排序索引位置数据 持久化参数检查
            int index 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [12] 删除关键字 持久化参数检查
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.SnapshotAdd">
            <summary>
            [13] 
            AutoCSer.KeyValue{KT,VT} value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.TryAdd">
            <summary>
            [14] 添加数据
            KT key 
            VT value 
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.TryAddBeforePersistence">
            <summary>
            [15] 添加数据 持久化参数检查
            KT key 
            VT value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNodeMethodEnum.TryGetValue">
            <summary>
            [16] 根据关键字获取数据
            KT key 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{VT} 
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum">
            <summary>
            哈希表节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.Add">
            <summary>
            [0] 添加数据
            T value 
            返回值 bool 是否添加成功，否则表示关键字已经存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.AddBeforePersistence">
            <summary>
            [1] 添加数据 持久化参数检查
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.Clear">
            <summary>
            [2] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.Contains">
            <summary>
            [3] 判断关键字是否存在
            T value 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.Count">
            <summary>
            [4] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.GetMax">
            <summary>
            [5] 获取最大值
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有数据时返回无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.GetMin">
            <summary>
            [6] 获取最小值
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有数据时返回无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.Remove">
            <summary>
            [7] 删除关键字
            T value 
            返回值 bool 是否删除成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNodeMethodEnum.RemoveBeforePersistence">
            <summary>
            [8] 删除关键字 持久化参数检查
            T value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNodeMethodEnum">
            <summary>
            栈节点接口方法映射枚举
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNodeMethodEnum.Clear">
            <summary>
            [0] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNodeMethodEnum.Contains">
            <summary>
            [1] 判断是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            T value 匹配数据
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNodeMethodEnum.Count">
            <summary>
            [2] 获取数据数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNodeMethodEnum.Push">
            <summary>
            [3] 将数据添加到栈
            T value 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNodeMethodEnum.TryPeek">
            <summary>
            [4] 获取栈中下一个弹出数据（不弹出数据仅查看）
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有可弹出数据则返回无数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNodeMethodEnum.TryPop">
            <summary>
            [5] 从栈中弹出一个数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T} 没有可弹出数据则返回无数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNodeMethodEnum.TryPopBeforePersistence">
            <summary>
            [6] 从栈中弹出一个数据 持久化参数检查
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}} 无返回值表示需要继续调用持久化方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseTaskClient">
            <summary>
            日志流持久化内存数据库客户端接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseTaskClient.Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseTaskClient.CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseTaskClient.CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseTaskClient.CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseTaskClient.KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseTaskClient.InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient">
            <summary>
            日志流持久化内存数据库客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.Client">
            <summary>
            日志流持久化内存数据库客户端套接字事件
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.#ctor(AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent)">
            <summary>
            日志流持久化内存数据库客户端
            </summary>
            <param name="client">日志流持久化内存数据库客户端套接字事件</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode)">
            <summary>
            删除节点
            </summary>
            <param name="node">客户端节点</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.GetOrCreateNode``1(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Threading.Tasks.Task{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},System.Boolean)">
            <summary>
            获取节点，不存在则创建节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建客户端节点委托</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns>节点接口对象派生自 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode{T}</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.GetOrCreateNode``2(System.String,``1,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,``1,System.Threading.Tasks.Task{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},System.Boolean)">
            <summary>
            获取节点，不存在则创建节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <typeparam name="PT">附加参数类型</typeparam>
            <param name="key">节点全局关键字</param>
            <param name="parameter">附加参数</param>
            <param name="creator">创建客户端节点委托</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns>节点接口对象派生自 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode{T}</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.GetOrCreateNodeIndex``1(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Threading.Tasks.Task{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}})">
            <summary>
            获取创建节点标识
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建客户端节点委托</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.RepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Reflection.MethodInfo)">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="node"></param>
            <param name="method">必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.RepairNodeMethod(System.Object,System.Reflection.MethodInfo)">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="node">AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode 实例，所有的客户端节点接口实例都派生自该类型</param>
            <param name="method">必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.BindNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Reflection.MethodInfo)">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="node"></param>
            <param name="method">必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.BindNodeMethod(System.Object,System.Reflection.MethodInfo)">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="node">AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode 实例，所有的客户端节点接口实例都派生自该类型</param>
            <param name="method">必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.CallInput``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32,``0)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用方法请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.SimpleSerializeCallInput``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32,``0)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用方法请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.CallOutput``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.SimpleDeserializeCallOutput``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.CallInputOutput``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum,``0)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="RT"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="flags">服务端节点方法标记</param>
            <param name="parameter">调用方法请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.SendOnly``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32,``0)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用方法请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.SimpleSerializeSendOnly``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32,``0)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用方法请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.KeepCallback``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.SimpleDeserializeKeepCallback``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient.InputKeepCallback``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum,``0)">
            <summary>
            调用节点方法
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="RT"></typeparam>
            <param name="node">客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="flags">服务端节点方法标记</param>
            <param name="parameter">调用方法请求参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient`1">
            <summary>
            日志流持久化内存数据库客户端
            </summary>
            <typeparam name="CT">服务基础操作客户端接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient`1.ClientNode">
            <summary>
            服务基础操作客户端
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient`1.#ctor(AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent)">
            <summary>
            日志流持久化内存数据库客户端
            </summary>
            <param name="client">日志流持久化内存数据库客户端套接字事件</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient`1.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient`1.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode)">
            <summary>
            删除节点
            </summary>
            <param name="node">客户端节点</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClient`1.GetOrCreateFragmentHashStringDictionaryNode(System.String,System.Boolean)">
            <summary>
            获取字典节点，不存在则创建节点 FragmentHashStringDictionary256{HashString,string}
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClient">
            <summary>
            日志流持久化内存数据库客户端接口（IO 线程同步回调接口避免线程调度开销，必须保证客户端调用 await 后续操作无阻塞，否则可能严重影响性能甚至死锁，如果不能保证无阻塞环境请替换为 IStreamPersistenceMemoryDatabaseTaskClient 接口避免死锁）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClient.Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClient.CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClient.CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClient.CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClient.KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClient.InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent">
            <summary>
            日志流持久化内存数据库客户端套接字事件
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseClientSocketEvent.StreamPersistenceMemoryDatabaseClient">
            <summary>
            日志流持久化内存数据库客户端接口
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient">
            <summary>
            日志流持久化内存数据库客户端接口转换封装
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.client">
            <summary>
            日志流持久化内存数据库客户端接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.#ctor(AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseTaskClient)">
            <summary>
            日志流持久化内存数据库客户端接口转换封装
            </summary>
            <param name="client">日志流持久化内存数据库客户端接口</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.CreateSessionObject">
            <summary>
            创建会话对象，用于反序列化时获取服务信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.GetNodeIndex(System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            获取节点标识
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.Rebuild">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.RepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName)">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.BindNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName)">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="returnValue">接口返回初始值，这里用于返回值的自定义反序列化操作，参数名称必须是 ReturnValue 不区分大小写，必须放在第一个数据参数之前，类型必须与返回值类型一致</param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.GetPersistencePosition">
            <summary>
            获取持久化流已当前写入位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.CreateSlave(System.Boolean)">
            <summary>
            创建备份
            </summary>
            <param name="isBackup">是否备份客户端</param>
            <returns>备份验证时间戳，负数表示 CallStateEnum 错误状态</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.RemoveSlave(System.Int64)">
            <summary>
            移除从节点客户端信息
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.AppendRepairNodeMethodDirectoryFile(System.Int64,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile)">
            <summary>
            从节点添加修复方法目录与文件信息
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="directory">修复方法目录信息</param>
            <param name="file">修复方法文件信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.GetRepairNodeMethodPosition(System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            从节点获取修复节点方法信息
            </summary>
            <param name="timestamp">创建备份客户端信息时间戳</param>
            <param name="callback">修复节点方法信息回调委托</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.CheckPersistenceFileHead(System.UInt32,System.UInt64)">
            <summary>
            检查持久化文件头部是否匹配
            </summary>
            <param name="fileHeadVersion">持久化文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <returns>持久化流已写入位置，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.GetPersistenceFile(System.Int64,System.UInt32,System.UInt64,System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="fileHeadVersion">持久化文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="position">读取文件起始位置</param>
            <param name="callback">获取持久化文件数据回调委托</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.GetPersistenceCallbackExceptionPosition(System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{System.Int64},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取持久化回调异常位置数据
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.CheckPersistenceCallbackExceptionPositionFileHead(System.UInt32,System.UInt64)">
            <summary>
            检查持久化回调异常位置文件头部是否匹配
            </summary>
            <param name="fileHeadVersion">持久化回调异常位置文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <returns>持久化回调异常位置文件已写入位置，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseTaskClient.GetPersistenceCallbackExceptionPositionFile(System.Int64,System.UInt32,System.UInt64,System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="fileHeadVersion">持久化回调异常位置文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="position">读取文件起始位置</param>
            <param name="callback">获取持久化回调异常位置文件数据回调委托</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService">
            <summary>
            日志流持久化内存数据库服务端接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.CreateSessionObject(AutoCSer.Net.CommandServerSocket)">
            <summary>
            创建会话对象，用于反序列化时获取服务信息
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.GetPersistencePosition">
            <summary>
            获取持久化流已当前写入位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.GetNodeIndex(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            获取节点标识
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.Call(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.CallOutput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.CallInput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.CallInputOutput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.SendOnly(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.KeepCallback(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.InputKeepCallback(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.Rebuild(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue)">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.RepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.BindNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.CreateSlave(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Boolean)">
            <summary>
            创建从节点
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="isBackup">是否备份客户端</param>
            <returns>从节点验证时间戳，负数表示 CallStateEnum 错误状态</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.RemoveSlave(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64)">
            <summary>
            移除从节点客户端信息
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.AppendRepairNodeMethodDirectoryFile(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile)">
            <summary>
            从节点添加修复方法目录与文件信息
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="directory">修复方法目录信息</param>
            <param name="file">修复方法文件信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.GetRepairNodeMethodPosition(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition})">
            <summary>
            从节点获取修复节点方法信息
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="callback">获取修复节点方法信息委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.CheckPersistenceFileHead(System.UInt32,System.UInt64)">
            <summary>
            检查持久化文件头部是否匹配
            </summary>
            <param name="fileHeadVersion">持久化文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <returns>持久化流已写入位置，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.GetPersistenceFile(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,System.UInt32,System.UInt64,System.Int64,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer})">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="fileHeadVersion">持久化文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="position">读取文件起始位置</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.GetPersistenceCallbackExceptionPosition(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,AutoCSer.Net.CommandServerKeepCallback{System.Int64})">
            <summary>
            获取持久化回调异常位置数据
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.CheckPersistenceCallbackExceptionPositionFileHead(System.UInt32,System.UInt64)">
            <summary>
            检查持久化回调异常位置文件头部是否匹配
            </summary>
            <param name="fileHeadVersion">持久化回调异常位置文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <returns>持久化回调异常位置文件已写入位置，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IStreamPersistenceMemoryDatabaseService.GetPersistenceCallbackExceptionPositionFile(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,System.UInt32,System.UInt64,System.Int64,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer})">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="fileHeadVersion">持久化回调异常位置文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="position">读取文件起始位置</param>
            <param name="callback"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseConfig">
            <summary>
            日志流持久化内存数据库服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseConfig.IsSingleService">
            <summary>
            是否进程内单服务
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CommandServerSocketSessionObject">
            <summary>
            日志流持久化内存数据库服务端会话对象操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.PersistenceBufferPool">
            <summary>
            持久化缓冲区池
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.rebuildCompletedWaitHandle">
            <summary>
            持久化重建完毕关闭从节点等待事件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.PersistenceFileHeadVersion">
            <summary>
            持久化文件头部版本信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.PersistenceCallbackExceptionPositionFileHeadVersion">
            <summary>
            持久化回调异常位置文件头部版本信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodes">
            <summary>
            获取所有有效节点集合（不包括基础操作节点）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.freeIndexs">
            <summary>
            空闲索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.slaveClientTimestamp">
            <summary>
            最后一次生成的从节点时间戳标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.isRebuilderPersistenceWaitting">
            <summary>
            重建持久化是否正在等待操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode},System.Boolean)">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
            <param name="config">日志流持久化内存数据库服务端配置</param>
            <param name="createServiceNode">创建服务基础操作节点委托</param>
            <param name="isMaster">是否主节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.AutoCSer#Net#ICommandServerBindController#Bind(AutoCSer.Net.CommandServerController)">
            <summary>
            绑定命令服务控制器
            </summary>
            <param name="controller"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetServerNode(AutoCSer.HashString@)">
            <summary>
            根据节点全局关键字获取服务端节点
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.LoadRepairNodeMethod(System.Int64)">
            <summary>
            初始化加载修复方法
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetPersistencePosition(System.Int64,System.Int64)">
            <summary>
            设置持久化文件写入位置
            </summary>
            <param name="persistencePosition"></param>
            <param name="persistenceCallbackExceptionFilePosition"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetPersistencePosition">
            <summary>
            获取持久化流已当前写入位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodeIndex(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            获取节点标识
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.check(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo@)">
            <summary>
            检查节点信息是否匹配
            </summary>
            <param name="node"></param>
            <param name="nodeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CheckCreateNodeIndex(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo@)">
            <summary>
            创建节点之前检查节点标识是否匹配
            </summary>
            <param name="index"></param>
            <param name="key"></param>
            <param name="nodeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.LoadCreateNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String)">
            <summary>
            初始化加载数据创建节点
            </summary>
            <param name="index"></param>
            <param name="key"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RemoveNodeBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点持久化参数检查
            </summary>
            <param name="index">节点索引信息</param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetFreeIndex">
            <summary>
            获取节点索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RemoveFreeIndex(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            释放空闲节点
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CreateSessionObject(AutoCSer.Net.CommandServerSocket)">
            <summary>
            创建会话对象，用于反序列化时获取服务信息
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Call(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallOutput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInputOutput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SendOnly(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.KeepCallback(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.InputKeepCallback(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetBeforePersistenceMethodParameterCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetBeforePersistenceMethodParameterCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.persistence">
            <summary>
            持久化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Load(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte})">
            <summary>
            初始化加载数据
            </summary>
            <param name="index"></param>
            <param name="methodIndex"></param>
            <param name="deserializer"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Rebuild(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue)">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RebuildError">
            <summary>
            持久化文件重建异常并已关闭
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RebuildCompleted">
            <summary>
            持久化重建完毕关闭从节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetPersistenceFileHeadVersion(System.UInt32,System.UInt64)">
            <summary>
            设置持久化文件头部版本信息
            </summary>
            <param name="persistenceFileHeadVersion"></param>
            <param name="rebuildPosition"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetRebuilderPersistenceWaitting">
            <summary>
            设置重建持久化等待操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.getRepairMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode@,System.Reflection.MethodInfo@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute@)">
            <summary>
            获取修复方法信息
            </summary>
            <param name="index"></param>
            <param name="rawAssembly"></param>
            <param name="methodName"></param>
            <param name="node"></param>
            <param name="method"></param>
            <param name="methodAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RepairNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            修复接口方法错误，强制覆盖原接口方法调用，除了第一个参数为操作节点对象，方法定义必须一致
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.BindNodeMethod(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Byte[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodName,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            绑定新方法，用于动态增加接口功能，新增方法编号初始状态必须为空闲状态
            </summary>
            <param name="index"></param>
            <param name="rawAssembly">程序集文件数据</param>
            <param name="methodName">修复方法名称，必须是静态方法，第一个参数必须是操作节点接口类型，必须使用 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex 配置方法编号与其他必要配置信息</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetSlaveClientTimestamp">
            <summary>
            获取从节点时间戳标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CreateSlave(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Boolean)">
            <summary>
            创建从节点
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="isBackup">是否备份客户端</param>
            <returns>从节点验证时间戳，负数表示 CallStateEnum 错误状态</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.getSlave(System.Int64,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceSlave@)">
            <summary>
            获取从节点客户端信息
            </summary>
            <param name="timestamp"></param>
            <param name="left"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RemoveSlave(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64)">
            <summary>
            移除从节点客户端信息
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.AppendRepairNodeMethodDirectoryFile(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodDirectory,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodFile)">
            <summary>
            从节点添加修复方法目录与文件信息
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="directory">修复方法目录信息</param>
            <param name="file">修复方法文件信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RemoveSlave(System.Int64)">
            <summary>
            移除从节点客户端信息
            </summary>
            <param name="timestamp"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetRepairNodeMethodPosition(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RepairNodeMethodPosition})">
            <summary>
            从节点获取修复节点方法信息
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="callback">获取修复节点方法信息委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CheckPersistenceFileHead(System.UInt32,System.UInt64)">
            <summary>
            检查文件头部是否匹配
            </summary>
            <param name="fileHeadVersion">持久化文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <returns>持久化流已写入位置，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetPersistenceFile(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,System.UInt32,System.UInt64,System.Int64,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer})">
            <summary>
            获取持久化文件数据
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="fileHeadVersion">持久化文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="position">读取文件起始位置</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CheckPersistenceCallbackExceptionPositionFileHead(System.UInt32,System.UInt64)">
            <summary>
            检查持久化回调异常位置文件头部是否匹配
            </summary>
            <param name="fileHeadVersion">持久化回调异常位置文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <returns>持久化回调异常位置文件已写入位置，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetPersistenceCallbackExceptionPosition(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,AutoCSer.Net.CommandServerKeepCallback{System.Int64})">
            <summary>
            获取持久化回调异常位置数据
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetPersistenceCallbackExceptionPositionFile(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,System.UInt32,System.UInt64,System.Int64,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFileBuffer})">
            <summary>
            获取持久化回调异常位置文件数据
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="timestamp">创建从节点客户端信息时间戳</param>
            <param name="fileHeadVersion">持久化回调异常位置文件头部版本信息</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="position">读取文件起始位置</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CloseLoader(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SlaveLoader,System.Boolean)">
            <summary>
            关闭数据加载
            </summary>
            <param name="loader"></param>
            <param name="isRetry"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig">
            <summary>
            日志流持久化内存数据库服务端配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceExtensionName">
            <summary>
            持久化数据库文件扩展名 AutoCSer Memory Database
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceCallbackExceptionPositionExtensionName">
            <summary>
            持久化回调异常位置文件扩展名 Callback Exception Position
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.DefaultPersistenceFileName">
            <summary>
            默认持久化文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.CommandServerSocketSessionObject">
            <summary>
            套接字自定义会话对象操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceFileName">
            <summary>
            持久化文件名称，建议使用绝对路径
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.RepairNodeMethodDirectoryName">
            <summary>
            修复节点方法保存目录名称，默认为 RepairNodeMethod
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.RepairNodeMethodAssemblyFileName">
            <summary>
            修复节点方法程序集保存文件名称，默认为 assembly.dll
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.RepairNodeMethodNameFileName">
            <summary>
            修复节点方法指定静态方法名称信息文件名称，默认为 method.json
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.BufferMaxSize">
            <summary>
            持久化数据缓冲区最大字节数，默认为 1MB，最小值为 4KB
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.BufferSizeBits">
            <summary>
            持久化数据缓存区池字节大小二进制位数量，默认为 17 表示 128KB，最小值为 12 表示 4KB
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.MinCompressSize">
            <summary>
            持久化数据启用压缩最低字节数量，默认为 4KB
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.CompressionLevel">
            <summary>
            压缩级别默认为快速压缩
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.CanCreateSlave">
            <summary>
            默认为 false 表示不允许创建从节点，如果没有从节点需求设置为 true 会导致内存空间浪费
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.GetBackupFileNameSuffix">
            <summary>
            获取备份文件时间后缀
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.Create">
            <summary>
            创建默认日志流持久化内存数据库服务端（主服务节点）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.Create``1(System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,``0})">
            <summary>
            日志流持久化内存数据库服务端（主服务节点）
            </summary>
            <typeparam name="T">节点服务接口类型</typeparam>
            <param name="createServiceNode"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.BitmapNodeClientNodeExtension">
            <summary>
            位图客户端节点扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.BitmapNodeClientNodeExtension.GetBool(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode,System.UInt32)">
            <summary>
            读取位状态
            </summary>
            <param name="node"></param>
            <param name="index">位索引</param>
            <returns>索引超出返回也返回 false</returns>
        </member>
        <member name="M:AutoCSer.Extensions.BitmapNodeClientNodeExtension.GetBoolClearBit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode,System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态
            </summary>
            <param name="node"></param>
            <param name="index">位索引</param>
            <returns>清除操作之前的状态，索引超出返回也返回 false</returns>
        </member>
        <member name="M:AutoCSer.Extensions.BitmapNodeClientNodeExtension.GetBoolInvertBit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode,System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态
            </summary>
            <param name="node"></param>
            <param name="index">位索引</param>
            <returns>取反操作之前的状态，索引超出返回也返回 false</returns>
        </member>
        <member name="M:AutoCSer.Extensions.BitmapNodeClientNodeExtension.GetBoolSetBit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeClientNode,System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态
            </summary>
            <param name="node"></param>
            <param name="index">位索引</param>
            <returns>设置之前的状态，索引超出返回也返回 false</returns>
        </member>
        <member name="T:AutoCSer.Extensions.DictionaryNodeClientNodeExtension">
            <summary>
            字典客户端节点扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.DictionaryNodeClientNodeExtension.TryAddJson``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode{``0,System.String},``0,``1)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.Extensions.DictionaryNodeClientNodeExtension.SetJson``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode{``0,System.String},``0,``1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.Extensions.DictionaryNodeClientNodeExtension.TryGetFromJson``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode{``0,System.String},``0)">
            <summary>
            根据关键字获取数据
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.DictionaryNodeClientNodeExtension.GetRemoveFromJson``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNodeClientNode{``0,System.String},``0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.FragmentDictionaryNodeClientNodeExtension">
            <summary>
            256 基分片 字典客户端节点扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.FragmentDictionaryNodeClientNodeExtension.TryAddJson``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode{``0,System.String},``0,``1)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.Extensions.FragmentDictionaryNodeClientNodeExtension.SetJson``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode{``0,System.String},``0,``1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.Extensions.FragmentDictionaryNodeClientNodeExtension.TryGetFromJson``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode{``0,System.String},``0)">
            <summary>
            根据关键字获取数据
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.FragmentDictionaryNodeClientNodeExtension.GetRemoveFromJson``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNodeClientNode{``0,System.String},``0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.HashStringFragmentDictionaryNodeClientNodeExtension">
            <summary>
            256 基分片 HashString 字典客户端节点扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.HashStringFragmentDictionaryNodeClientNodeExtension.TryAddJson``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode{System.String},System.String,``0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.Extensions.HashStringFragmentDictionaryNodeClientNodeExtension.SetJson``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode{System.String},System.String,``0)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.Extensions.HashStringFragmentDictionaryNodeClientNodeExtension.TryGetFromJson``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode{System.String},System.String)">
            <summary>
            根据关键字获取数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.HashStringFragmentDictionaryNodeClientNodeExtension.GetRemoveFromJson``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashStringFragmentDictionaryNodeClientNode{System.String},System.String)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.KeepCallbackResponseExtension">
            <summary>
            保持回调输出扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.KeepCallbackResponseExtension.GetLeftArray``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{``0}},System.Int32)">
            <summary>
            获取数组
            </summary>
            <param name="response"></param>
            <param name="capacity">容器初始化大小</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.KeepCallbackResponseExtension.GetLeftArray``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse{``0},System.Int32)">
            <summary>
            获取数组
            </summary>
            <param name="response"></param>
            <param name="capacity">容器初始化大小</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.KeepCallbackResponseExtension.GetLeftArray``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{``0}},System.Func{``0,``1},System.Int32)">
            <summary>
            获取数组
            </summary>
            <param name="response"></param>
            <param name="getValue">数据转换委托</param>
            <param name="capacity">容器初始化大小</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.KeepCallbackResponseExtension.GetLeftArray``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            获取数组
            </summary>
            <param name="response"></param>
            <param name="getValue">数据转换委托</param>
            <param name="capacity">容器初始化大小</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.MethodKeepCallbackExtension">
            <summary>
            方法调用回调包装扩展操作
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.MethodKeepCallbackExtension.Callback``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{``0},``0,``0)">
            <summary>
            返回数据链表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodCallback"></param>
            <param name="head">开始节点</param>
            <param name="end">结束节点</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.ResponseResultExtension">
            <summary>
            缓存返回结果扩展操作
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.ResponseResultExtension.FromJson``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{System.String})">
            <summary>
            JSON 字符串转换为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.ResponseResultExtension.FromJson``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{System.String}})">
            <summary>
            JSON 字符串转换为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.ResponseResultExtension.ToBool(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{System.Int32}})">
            <summary>
            二进制位数据转 bool
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.SearchTreeDictionaryNodeClientNodeExtension">
            <summary>
            二叉搜索树字典客户端节点扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.SearchTreeDictionaryNodeClientNodeExtension.GetPage``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode{``0,``1},System.Int32,System.Byte)">
            <summary>
            获取分页数据集合
            </summary>
            <param name="node"></param>
            <param name="pageIndex">分页编号，从 1 开始</param>
            <param name="pageSize">分页记录数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.SearchTreeDictionaryNodeClientNodeExtension.GetPageArray``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNodeClientNode{``0,``1},System.Int32,System.Byte)">
            <summary>
            获取分页数据数组
            </summary>
            <param name="node"></param>
            <param name="pageIndex">分页编号，从 1 开始</param>
            <param name="pageSize">分页记录数</param>
            <returns></returns>
        </member>
    </members>
</doc>
