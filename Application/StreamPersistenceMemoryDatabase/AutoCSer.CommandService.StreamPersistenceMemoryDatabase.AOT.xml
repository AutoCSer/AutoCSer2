<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.CommandService.StreamPersistenceMemoryDatabase.AOT</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1">
            <summary>
            返回参数
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.#ctor(`0)">
            <summary>
            返回参数
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BinarySerializeResponseParameter`1.CreateKeepCallback">
            <summary>
            创建持续回调返回参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.Unknown">
            <summary>
            未知错误或者异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PersistenceCallbackException">
            <summary>
            持久化成功但是执行异常，该节点可能处于错误状态，如果是内存不足异常则需要重启服务重新加载，对于程序逻辑异常还需要修复该错误逻辑
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeIndexOutOfRange">
            <summary>
            节点编号超出索引范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeIdentityNotMatch">
            <summary>
            节点标识不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.Disposed">
            <summary>
            服务已释放资源
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.IgnorePersistenceCallbackException">
            <summary>
            持久化回调异常写入位置信息，服务端将忽略该请求
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundSessionObject">
            <summary>
            反序列化参数操作没有找到套接字会话对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundClientNodeCreator">
            <summary>
            客户端节点生成失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundNodeKey">
            <summary>
            没有找到匹配关键字的节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.OnlySupportInterface">
            <summary>
            创建服务端节点仅支持接口类型，说明调用泛型类型参数不正确
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NullNodeInfo">
            <summary>
            请求参数缺少节点信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundNodeCreator">
            <summary>
            服务端节点生成失败，说明该接口类型不符合节点定义
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeTypeNotMatch">
            <summary>
            节点类型不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.OnlyMaster">
            <summary>
            该调用仅支持主服务节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NullKey">
            <summary>
            关键字为 null
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundMethod">
            <summary>
            没有找到调用方法，说明服务端与客户端定义不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.MethodIndexOutOfRange">
            <summary>
            方法编号超出索引范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CallTypeNotMatch">
            <summary>
            调用方法类型不匹配，说明服务端与客户端定义不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotAllowClientCall">
            <summary>
            调用方法不允许客户端调用
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PersistenceSerializeException">
            <summary>
            持久化序列化异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PersistenceWriteException">
            <summary>
            持久化写入异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.LoadParameterSizeError">
            <summary>
            加载数据参数缓冲区大小不一致
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.LoadParameterDeserializeError">
            <summary>
            加载数据参数反序列化失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.LoadException">
            <summary>
            节点加载执行异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.LoadRepairNodeMethodException">
            <summary>
            节点修复方法加载异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PersistenceRebuilding">
            <summary>
            日志流持久化文件重建中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundSnapshotNode">
            <summary>
            没有找到快照接口
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundSnapshotMethod">
            <summary>
            没有找到与快照接口类型匹配的方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NoReturnValue">
            <summary>
            调用无返回值，表示 ValueResult{T}.IsValue 为 false
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.IllegalInputParameter">
            <summary>
            非法输出参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NodeMethodParameterIsByRef">
            <summary>
            节点方法输入参数不允许使用 ref / out 修饰
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.SendOnlyNotSupportReturnType">
            <summary>
            非应答方法不支持返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.SendOnlyMustInputParameter">
            <summary>
            非应答方法必须存在输入参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.BeforePersistenceMethodReturnTypeError">
            <summary>
            持久化检查方法返回值类型必须为 bool 或者 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{T}
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.BeforePersistenceMethodCallTypeError">
            <summary>
            持久化检查方法调用类型不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundRepairMethodDeclaringType">
            <summary>
            动态加载程序集中没有找到修复方法的定义类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundRepairMethod">
            <summary>
            动态加载程序集中没有找到修复方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodNotStatic">
            <summary>
            修复方法必须为静态方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodIsGenericMethodDefinition">
            <summary>
            修复方法不能是泛型方法定义
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodReturnTypeNotMatch">
            <summary>
            修复方法返回值类型与原接口定义不一致
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodNotFoundNodeTypeParameter">
            <summary>
            修复方法第一个输入参数必须是节点接口类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodParameterCountNotMatch">
            <summary>
            修复方法输入参数数量与原接口定义不一致（除了第一个输出参数必须是节点接口类型）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RepairMethodParameterTypeNotMatch">
            <summary>
            修复方法输入参数类型与原接口定义不一致
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.BindMethodIndexUsed">
            <summary>
            绑定方法编号已被使用，要修改该方法请调用修复功能
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.BindMethodNotSupportBeforePersistence">
            <summary>
            绑定方法不支持持久化之前检查参数方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.SlaveTimestampNotMatch">
            <summary>
            从节点客户端创建时间戳不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.FileHeadNotMatch">
            <summary>
            文件头部数据不匹配，说明服务端持久化文件被重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.FilePositionOutOfRange">
            <summary>
            文件持久化位置不在范围内，说明服务端重建处理过
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CanNotCreateSlave">
            <summary>
            当前配置 StreamPersistenceMemoryDatabaseServiceConfig.CanCreateSlave 不允许创建从节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.PositionNotMatch">
            <summary>
            持久化位置不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.StateNotMatch">
            <summary>
            当前状态不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CustomDeserializeError">
            <summary>
            自定义反序列化失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.ReadFileSizeError">
            <summary>
            文件读取数据失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CallFail">
            <summary>
            客户端调用失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotFoundRemoteType">
            <summary>
            没有找到泛型类型，或者泛型类型不满足 AutoCSer.Common.Config.CheckRemoteType 合法性检查条件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.RemoteTypeError">
            <summary>
            泛型类型不满足要求
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NullResponseParameter">
            <summary>
            没有返回数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CustomStateError">
            <summary>
            自定义操作状态错误
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.CustomException">
            <summary>
            自定义操作异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.NotSupportPersistence">
            <summary>
            不支持持久化操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.UnknownPersistenceType">
            <summary>
            未知的持久化类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum.Callbacked">
            <summary>
            已回调（可用于计数）
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.Key">
            <summary>
            节点全局关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.Creator">
            <summary>
            创建节点操作对象委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.Client">
            <summary>
            日志流持久化内存数据库客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.Index">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.isRenewing">
            <summary>
            是否重建中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.isReindex">
            <summary>
            是否正在重新获取索引
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.IsSynchronousCallback">
            <summary>
            是否 IO 线程同步回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.isPersistenceCallbackExceptionRenewNode">
            <summary>
            服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.CheckState(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            检查返回错误状态
            </summary>
            <param name="nodeIndex"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.Renew(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            节点重建
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.renew">
            <summary>
            节点重建
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.Reindex(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            索引失效重新获取
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode.reindex">
            <summary>
            索引失效重新获取
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode`1">
            <summary>
            客户端节点
            </summary>
            <typeparam name="T">客户端节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode`1.synchronousNode">
            <summary>
            IO 线程同步客户端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode`1.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode`1.renew">
            <summary>
            节点重建
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode`1.reindex">
            <summary>
            索引失效重新获取
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode`1.createSynchronousCallback">
            <summary>
            创建 IO 线程同步回调节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode`1.GetSynchronousCallback(`0)">
            <summary>
            获取 IO 线程同步回调节点，节点调用 await 后续操作不允许存在同步阻塞逻辑或者长时间占用 CPU 运算
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNodeCreator`1">
            <summary>
            生成客户端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNodeCreator`1.Create(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            创建客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNodeCreator`1.GetNodeInfo(System.Exception@)">
            <summary>
            获取服务端节点信息
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNodeCreator`1.nodeInfo">
            <summary>
            服务端信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNodeCreator`1.creator">
            <summary>
            创建客户端节点委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNodeCreator`1.creatorException">
            <summary>
            节点构造错误
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNodeCreator`1.creatorMessages">
            <summary>
            节点构造提示信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute">
            <summary>
            客户端节点自定义属性
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute.LocalClientNodeConstructorMethodName">
            <summary>
            本地客户端节点构造函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute.LocalClientNodeMethodName">
            <summary>
            本地客户端节点激活 AOT 反射函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute.ServerNodeType">
            <summary>
            匹配服务端节点接口类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute.ClientNodeType">
            <summary>
            代码生成本地客户端类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute.#ctor(System.Type,System.Type)">
            <summary>
            客户端节点自定义属性
            </summary>
            <param name="serverNodeType">匹配服务端节点接口类型</param>
            <param name="clientNodeType">代码生成本地客户端类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeAttribute.#ctor(System.Type)">
            <summary>
            客户端节点自定义属性
            </summary>
            <param name="serverNodeType">匹配服务端节点接口类型</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod">
            <summary>
            客户端节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.LocalClientSendOnlyMethodReturnType">
            <summary>
            本地客户端 SendOnly 方法返回值类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.QueueNodeType">
            <summary>
            队列节点类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.IsCallback">
             <summary>
            客户端是否委托回调 API
             </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.IsReturnResponseParameter">
            <summary>
            是否返回参数类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.#ctor(System.Type,System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            客户端节点方法信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
            <param name="isLocalClient"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod)">
            <summary>
            设置服务端节点方法数据
            </summary>
            <param name="method"></param>
            <returns>错误信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod.GetMethod(System.Type,AutoCSer.LeftArray{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod}@,System.Boolean)">
            <summary>
            获取客户端节点接口方法集合
            </summary>
            <param name="type"></param>
            <param name="methods"></param>
            <param name="isLocalClient"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient">
            <summary>
            日志流持久化内存数据库本地服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.Service">
            <summary>
            日志流持久化内存数据库本地服务
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.PersistencePosition">
            <summary>
            持久化流已写入位置
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.RebuildSnapshotPosition">
            <summary>
            重建快照结束位置
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService)">
            <summary>
            日志流持久化内存数据库本地服务客户端
            </summary>
            <param name="service">日志流持久化内存数据库本地服务</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode)">
            <summary>
            删除节点
            </summary>
            <param name="node">客户端节点</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.GetOrCreateNode``1(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},System.Boolean)">
            <summary>
            获取节点，不存在则创建节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建客户端节点委托</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns>节点接口对象派生自 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode{T}</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.GetOrCreateNode``2(System.String,``1,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,``1,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},System.Boolean)">
            <summary>
            获取节点，不存在则创建节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <typeparam name="PT">附加参数类型</typeparam>
            <param name="key">节点全局关键字</param>
            <param name="parameter">附加参数</param>
            <param name="creator">创建客户端节点委托</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns>节点接口对象派生自 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode{T}</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.GetOrCreateNodeIndex``1(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}})">
            <summary>
            获取创建节点标识
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建客户端节点委托</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.Rebuild">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient.AppendQueueNode``1(System.Func{``0})">
            <summary>
            添加非持久化队列任务（不修改内存数据状态）
            </summary>
            <typeparam name="T">获取结果数据类型</typeparam>
            <param name="getResult">获取结果数据委托</param>
            <returns>队列节点</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient`1">
            <summary>
            日志流持久化内存数据库本地服务客户端
            </summary>
            <typeparam name="CT">服务基础操作客户端接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient`1.ClientNode">
            <summary>
            服务基础操作客户端
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService)">
            <summary>
            日志流持久化内存数据库本地服务客户端
            </summary>
            <param name="service">日志流持久化内存数据库本地服务</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient`1.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient`1.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode)">
            <summary>
            删除节点
            </summary>
            <param name="node">客户端节点</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient`1.GetOrCreateIdentityGeneratorNode(System.String,System.Int64,System.Boolean)">
            <summary>
            获取 64 位自增ID 节点，不存在则创建节点 IdentityGeneratorNode
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="identity">起始分配 ID</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient`1.GetOrCreateBitmapNode(System.String,System.UInt32,System.Boolean)">
            <summary>
            获取位图节点，不存在则创建节点 BitmapNode
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="capacity">容器初始化大小</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient`1.CreateNode``1(System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient{`0},System.Threading.Tasks.Task{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{``0}}})">
            <summary>
            获取日志流持久化内存数据库客户端节点
            </summary>
            <typeparam name="NT">客户端节点类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1">
            <summary>
            本地服务调用节点方法队列节点回调输出
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.moveNext">
            <summary>
            枚举命令是否存在下一个数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.returnValueQueue">
            <summary>
            返回值队列
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.current">
            <summary>
            当前返回数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.Current">
            <summary>
            当前返回数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.ReturnType">
            <summary>
            回调命令返回值类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.isSynchronousCallback">
            <summary>
            是否 IO 线程同步回调
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.Exception">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback{`0},System.Boolean)">
            <summary>
            本地服务调用节点方法队列节点回调输出
            </summary>
            <param name="callback">本地服务调用节点方法队列节点回调对象</param>
            <param name="isSynchronousCallback">是否 IO 线程同步回调</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.DisposeAsync">
            <summary>
            异步释放资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.CancelKeep(AutoCSer.Net.CommandClientReturnTypeEnum,System.Exception)">
            <summary>
            取消输出
            </summary>
            <param name="returnType"></param>
            <param name="exception"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter)">
            <summary>
            返回数据回调
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.MoveNext">
            <summary>
            判断是否存在下一个数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.AutoCSer#IEnumeratorTask#MoveNextAsync">
            <summary>
            判断是否存在下一个数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.System#Collections#Generic#IAsyncEnumerator{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#LocalResult{T}}#MoveNextAsync">
            <summary>
            判断是否存在下一个数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.GetAsyncEnumerable">
            <summary>
            获取 IAsyncEnumerable
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback`1.GetAsyncEnumerable``1(System.Func{`0,``0})">
            <summary>
            数据转换获取 IAsyncEnumerable
            </summary>
            <typeparam name="VT">目标数据类型</typeparam>
            <param name="getValue">数据转换委托</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult">
            <summary>
            本地服务返回结果
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult.CallState">
            <summary>
            读取数据状态
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            返回结果
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult">
            <summary>
            返回结果
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.String)">
            <summary>
            返回结果
            </summary>
            <param name="state"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1">
            <summary>
            本地服务返回结果
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.Value">
            <summary>
            返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.CallState">
            <summary>
            读取数据状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.Exception">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            返回结果
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.#ctor(`0)">
            <summary>
            返回结果
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.Exception)">
            <summary>
            返回结果
            </summary>
            <param name="state"></param>
            <param name="exception"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}">
            <summary>
            返回结果
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}">
            <summary>
            返回结果
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0})~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult">
            <summary>
            错误返回结果
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}">
            <summary>
            错误返回结果
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.Cast``1(``0)">
            <summary>
            返回结果类型转换
            </summary>
            <typeparam name="VT">目标类型</typeparam>
            <param name="defaultValue">成功状态默认值</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult`1.GetPageResult``1">
            <summary>
            获取错误分页数据
            </summary>
            <typeparam name="PT"></typeparam>
            <returns>错误分页数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex">
            <summary>
            创建节点索引信息
            </summary>
            <summary>
            创建节点索引信息
            </summary>
            <summary>
            创建节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.Index">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1">
            <summary>
            数组节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.array">
            <summary>
            数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.#ctor(System.Int32)">
            <summary>
            数组节点
            </summary>
            <param name="length">数组长度</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetSnapshotResult(AutoCSer.KeyValue{System.Int32,`0}[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SetSnapshotResult(AutoCSer.LeftArray{AutoCSer.KeyValue{System.Int32,`0}}@,AutoCSer.LeftArray{AutoCSer.KeyValue{System.Int32,`0}}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SnapshotSet(AutoCSer.KeyValue{System.Int32,`0})">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.ClearArray">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.checkRange(System.Int32,System.Int32)">
            <summary>
            检查索引范围
            </summary>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetLength">
            <summary>
            获取数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ArrayNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3">
            <summary>
            字典节点
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.dictionary">
            <summary>
            字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.#ctor(System.Int32,AutoCSer.ReusableDictionaryGroupTypeEnum)">
            <summary>
            字典节点
            </summary>
            <param name="capacity">容器初始化大小</param>
            <param name="groupType">可重用字典重组操作类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
            <param name="capacity">新容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.GetValueArray(`0[])">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.ReusableClear">
            <summary>
            可重用字典重置数据位置（存在引用类型数据会造成内存泄露）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.RemoveKeys(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`3.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2">
            <summary>
            字典节点
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IEnumerableSnapshot{AutoCSer#KeyValue{KT,VT}}#SnapshotEnumerable">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.#ctor(System.Int32,AutoCSer.ReusableDictionaryGroupTypeEnum)">
            <summary>
            字典节点
            </summary>
            <param name="capacity">容器初始化大小</param>
            <param name="groupType">可重用字典重组操作类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.DictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2">
            <summary>
            256 基分片字典节点
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.dictionary">
            <summary>
            256 基分片字典
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IEnumerableSnapshot{AutoCSer#KeyValue{KT,VT}}#SnapshotEnumerable">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.GetValueArray(`0[])">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.ReusableClear">
            <summary>
            可重用字典重置数据位置（存在引用类型数据会造成内存泄露）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.RemoveKeys(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1">
            <summary>
            256 基分片哈希表节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.hashSet">
            <summary>
            256 基分片 哈希表
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IEnumerableSnapshot{T}#SnapshotEnumerable">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.ReusableClear">
            <summary>
            可重用哈希表重置数据位置（存在引用类型数据会造成内存泄露）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Add(`0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.AddValues(`0[])">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="values"></param>
            <returns>添加数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentHashSetNode`1.RemoveValues(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="values"></param>
            <returns>删除数据数量</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1">
            <summary>
            哈希表节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.hashSet">
            <summary>
            哈希表
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IEnumerableSnapshot{T}#SnapshotEnumerable">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.#ctor(System.Int32,AutoCSer.ReusableDictionaryGroupTypeEnum)">
            <summary>
            哈希表节点
            </summary>
            <param name="capacity">容器初始化大小</param>
            <param name="groupType">可重用字典重组操作类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.AddValues(`0[])">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="values"></param>
            <returns>添加数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.ReusableClear">
            <summary>
            可重用字典重置数据位置（存在引用类型数据会造成内存泄露）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.HashSetNode`1.RemoveValues(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="values"></param>
            <returns>删除数据数量</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1">
            <summary>
            数组节点接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.SnapshotSet(AutoCSer.KeyValue{System.Int32,`0})">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.ClearArray">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.GetLength">
            <summary>
            获取数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IArrayNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3">
            <summary>
            字典节点接口
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.SnapshotAdd(`2)">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
            <param name="capacity">新容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.TryAdd(`0,`1)">
            <summary>
            尝试添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.GetValueArray(`0[])">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.ReusableClear">
            <summary>
            可重用字典重置数据位置（存在引用类型数据会造成内存泄露）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.RemoveKeys(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`3.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns>被删除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IDictionaryNode`2">
            <summary>
            字典节点接口
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2">
            <summary>
            256 基分片字典 节点接口
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.GetValueArray(`0[])">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.ReusableClear">
            <summary>
            可重用字典重置数据位置（存在引用类型数据会造成内存泄露）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.Set(`0,`1)">
            <summary>
            强制设置数据，如果关键字已存在则覆盖
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.RemoveKeys(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1">
            <summary>
            256 基分片 哈希表 节点接口
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.ReusableClear">
            <summary>
            可重用哈希表重置数据位置（存在引用类型数据会造成内存泄露）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Add(`0)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.AddValues(`0[])">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="values"></param>
            <returns>添加数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IFragmentHashSetNode`1.RemoveValues(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="values"></param>
            <returns>删除数据数量</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1">
            <summary>
            哈希表节点接口
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.AddValues(`0[])">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="values"></param>
            <returns>添加数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.ReusableClear">
            <summary>
            可重用字典重置数据位置（存在引用类型数据会造成内存泄露）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IHashSetNode`1.RemoveValues(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="values"></param>
            <returns>删除数据数量</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1">
            <summary>
            数组节点接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetLength">
            <summary>
            获取有效数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetCapacity">
            <summary>
            获取数组容器初大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetFreeCount">
            <summary>
            获取容器空闲数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.SetEmpty">
            <summary>
            置空并释放数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.ClearLength">
            <summary>
            清除所有数据并将数据有效长度设置为 0
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.TryAdd(`0)">
            <summary>
            当有空闲位置时添加数据
            </summary>
            <param name="value"></param>
            <returns>如果数组已满则添加失败并返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Insert(System.Int32,`0)">
            <summary>
            插入数据
            </summary>
            <param name="index">插入位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.Remove(`0)">
            <summary>
            移除第一个匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">数据</param>
            <returns>是否存在移除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.RemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueRemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据并返回被移除的数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.RemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据并将最后一个数据移动到该指定位置
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetValueRemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.GetTryPopValue">
            <summary>
            移除最后一个数据并返回该数据
            </summary>
            <returns>没有可移除数据则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ILeftArrayNode`1.TryPop">
            <summary>
            移除最后一个数据
            </summary>
            <returns>是否存在可移除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1">
            <summary>
            队列节点接口（先进先出）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.Count">
            <summary>
            获取队列数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.Contains(`0)">
            <summary>
            判断队列中是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.Enqueue(`0)">
            <summary>
            将数据添加到队列
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.TryDequeue">
            <summary>
            从队列中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IQueueNode`1.TryPeek">
            <summary>
            获取队列中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3">
            <summary>
            二叉搜索树节点接口
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.SnapshotAdd(`2)">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.Count">
            <summary>
            获取节点数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.GetHeight">
            <summary>
            获取树高度，时间复杂度 O(n)
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.Clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.Set(`0,`1)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.Remove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.RemoveKeys(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.GetRemove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>被删除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.ContainsKey(`0)">
            <summary>
            判断是否包含关键字
            </summary>
            <param name="key">关键字</param>
            <returns>是否包含关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key">关键字</param>
            <returns>目标数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.GetValueArray(`0[])">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="key">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetKeyValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetFirstKeyValue">
            <summary>
            获取第一组数据
            </summary>
            <returns>第一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetLastKeyValue">
            <summary>
            获取最后一组数据
            </summary>
            <returns>最后一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetFirstKey">
            <summary>
            获取第一个关键字数据
            </summary>
            <returns>第一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetLastKey">
            <summary>
            获取最后一个关键字数据
            </summary>
            <returns>最后一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetFirstValue">
            <summary>
            获取第一个数据
            </summary>
            <returns>第一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.TryGetLastValue">
            <summary>
            获取最后一个数据
            </summary>
            <returns>最后一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`3.GetValues(System.Int32,System.Byte)">
            <summary>
            获取范围数据集合
            </summary>
            <param name="skipCount">跳过记录数</param>
            <param name="getCount">获取记录数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeDictionaryNode`2">
            <summary>
            二叉搜索树节点接口
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1">
            <summary>
            二叉搜索树集合节点接口
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">关键字</param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.AddValues(`0[])">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="values"></param>
            <returns>添加数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value">关键字</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value">关键字</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.RemoveValues(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="values"></param>
            <returns>删除数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.GetFrist">
            <summary>
            获取第一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.GetLast">
            <summary>
            获取最后一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="value">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISearchTreeSetNode`1.GetByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2">
            <summary>
            排序字典节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.RemoveKeys(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedDictionaryNode`2.GetValueArray(`0[])">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2">
            <summary>
            排序列表节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.GetCapacity">
            <summary>
            获取容器大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.IndexOfKey(`0)">
            <summary>
            获取关键字排序位置
            </summary>
            <param name="key"></param>
            <returns>负数表示没有找到关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.IndexOfValue(`1)">
            <summary>
            获取第一个匹配数据排序位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>负数表示没有找到匹配数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedListNode`2.RemoveAt(System.Int32)">
            <summary>
            删除指定排序索引位置数据
            </summary>
            <param name="index"></param>
            <returns>索引超出范围返回 false</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1">
            <summary>
            排序集合节点接口
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.AddValues(`0[])">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="values"></param>
            <returns>添加数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.RemoveValues(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="values"></param>
            <returns>删除数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.GetMin">
            <summary>
            获取最小值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISortedSetNode`1.GetMax">
            <summary>
            获取最大值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1">
            <summary>
            栈节点接口（后进先出）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.Contains(`0)">
            <summary>
            判断是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.Push(`0)">
            <summary>
            将数据添加到栈
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.TryPop">
            <summary>
            从栈中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IStackNode`1.TryPeek">
            <summary>
            获取栈中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1">
            <summary>
            数组节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.array">
            <summary>
            数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.#ctor(System.Int32)">
            <summary>
            数组节点
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetSnapshotResult(`0[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SetSnapshotResult(AutoCSer.LeftArray{`0}@,AutoCSer.LeftArray{`0}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetLength">
            <summary>
            获取有效数组长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetCapacity">
            <summary>
            获取数组容器初大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetFreeCount">
            <summary>
            获取容器空闲数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SetEmpty">
            <summary>
            置空并释放数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.ClearLength">
            <summary>
            清除所有数据并将数据有效长度设置为 0
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.checkRange(System.Int32,System.Int32)">
            <summary>
            检查索引范围
            </summary>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Clear(System.Int32,System.Int32)">
            <summary>
            清除指定位置数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">清除数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.TryAdd(`0)">
            <summary>
            当有空闲位置时添加数据
            </summary>
            <param name="value"></param>
            <returns>如果数组已满则添加失败并返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SetValue(System.Int32,`0)">
            <summary>
            根据索引位置设置数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Insert(System.Int32,`0)">
            <summary>
            插入数据
            </summary>
            <param name="index">插入位置</param>
            <param name="value">数据</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValue(System.Int32)">
            <summary>
            根据索引位置获取数据
            </summary>
            <param name="index">索引位置</param>
            <returns>超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueSet(System.Int32,`0)">
            <summary>
            根据索引位置设置数据并返回设置之前的数据
            </summary>
            <param name="index">索引位置</param>
            <param name="value">数据</param>
            <returns>设置之前的数据，超出索引返回则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.FillArray(`0)">
            <summary>
            用数据填充整个数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Fill(`0,System.Int32,System.Int32)">
            <summary>
            用数据填充数组指定位置
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">填充数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.IndexOfArray(`0)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找第一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">起始位置</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.LastIndexOfArray(`0)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            从数组中查找最后一个匹配数据的位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <param name="startIndex">最后一个匹配位置（起始位置）</param>
            <param name="count">查找匹配数据数量</param>
            <returns>失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.ReverseArray">
            <summary>
            反转整个数组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Reverse(System.Int32,System.Int32)">
            <summary>
            反转指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">反转数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.SortArray">
            <summary>
            数组排序
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Sort(System.Int32,System.Int32)">
            <summary>
            排序指定位置数组数据
            </summary>
            <param name="startIndex">起始位置</param>
            <param name="count">排序数据数量</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.Remove(`0)">
            <summary>
            移除第一个匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">数据</param>
            <returns>是否存在移除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.RemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueRemoveAt(System.Int32)">
            <summary>
            移除指定索引位置数据并返回被移除的数据
            </summary>
            <param name="index">数据位置</param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.RemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据并将最后一个数据移动到该指定位置
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetValueRemoveToEnd(System.Int32)">
            <summary>
            移除指定索引位置数据，将最后一个数据移动到该指定位置，并返回被移除的数据
            </summary>
            <param name="index"></param>
            <returns>超出索引范围则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.GetTryPopValue">
            <summary>
            移除最后一个数据并返回该数据
            </summary>
            <returns>没有可移除数据则无数据返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LeftArrayNode`1.TryPop">
            <summary>
            移除最后一个数据
            </summary>
            <returns>是否存在可移除数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode">
            <summary>
            多哈希位图客户端同步过滤节点接口（类似布隆过滤器，适合小容器）
            </summary>
            <summary>
            多哈希位图客户端同步过滤节点接口（类似布隆过滤器，适合小容器）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode.SnapshotSet(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap)">
            <summary>
            快照添加数据
            </summary>
            <param name="map">多哈希位图数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode.GetBit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{System.Int32})">
            <summary>
            获取设置新位操作
            </summary>
            <param name="callback">设置位置</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode.GetSize">
            <summary>
            获取位图大小（位数量）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode.GetData">
            <summary>
            获取当前位图数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode.SetBitBeforePersistence(System.Int32)">
            <summary>
            设置位 持久化前检查
            </summary>
            <param name="bit">位置</param>
            <returns>是否继续持久化操作</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode.SetBit(System.Int32)">
            <summary>
            设置位
            </summary>
            <param name="bit">位置</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode">
            <summary>
            多哈希位图过滤节点接口（类似布隆过滤器）
            </summary>
            <summary>
            多哈希位图过滤节点接口（类似布隆过滤器）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode.SnapshotSet(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap)">
            <summary>
            快照添加数据
            </summary>
            <param name="map">多哈希位图数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode.GetSize">
            <summary>
            获取位图大小（位数量）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode.SetBitsBeforePersistence(System.Int32,System.UInt32[])">
            <summary>
            设置位 持久化前检查
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示位图大小不匹配</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode.SetBits(System.Int32,System.UInt32[])">
            <summary>
            设置位
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示位图大小不匹配</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode.CheckBits(System.Int32,System.UInt32[])">
            <summary>
            检查位图数据
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示数据不存在</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap">
            <summary>
            多哈希位图数据
            </summary>
            <summary>
            多哈希位图数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.Map">
            <summary>
            位图数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.SizeDivision">
            <summary>
            位数量取余操作
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.Size">
            <summary>
            位图大小（位数量）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.Set(System.Int32)">
            <summary>
            设置位图大小
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.GetBitValueBeforePersistence(System.Int32)">
            <summary>
            获取位数据
            </summary>
            <param name="bit"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.CheckSetBit(System.Int32)">
            <summary>
            设置位
            </summary>
            <param name="bit"></param>
            <returns>是否设置新位</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.GetBitByHashCode(System.UInt32)">
            <summary>
            根据哈希值获取位置
            </summary>
            <param name="hashCode"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.GetBitValue(System.Int32)">
            <summary>
            获取位数据
            </summary>
            <param name="bit"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.GetBitValueByHashCode(System.UInt32)">
            <summary>
            获取位数据
            </summary>
            <param name="hashCode"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.Merge(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap)">
            <summary>
            合并位图数据
            </summary>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.SetBit(System.Int32)">
            <summary>
            设置位
            </summary>
            <param name="bit"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode">
            <summary>
            多哈希位图客户端同步过滤节点（类似布隆过滤器，适合小容器）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.map">
            <summary>
            多哈希位图数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IEnumerableSnapshot{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ManyHashBitMap}#SnapshotEnumerable">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.callbacks">
            <summary>
            设置新位回调委托集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.#ctor(System.Int32)">
            <summary>
            多哈希位图客户端同步过滤节点（类似布隆过滤器，适合小容器）
            </summary>
            <param name="size">位图大小（位数量）</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.SnapshotSet(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap)">
            <summary>
            快照添加数据
            </summary>
            <param name="map">多哈希位图数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.GetBit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{System.Int32})">
            <summary>
            获取设置新位操作
            </summary>
            <param name="callback">设置位置</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.GetSize">
            <summary>
            获取位图大小（位数量）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.GetData">
            <summary>
            获取当前位图数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.SetBitBeforePersistence(System.Int32)">
            <summary>
            设置位 持久化前检查
            </summary>
            <param name="bit">位置</param>
            <returns>是否继续持久化操作</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNode.SetBit(System.Int32)">
            <summary>
            设置位
            </summary>
            <param name="bit">位置</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode">
            <summary>
            多哈希位图过滤节点（类似布隆过滤器）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode.map">
            <summary>
            多哈希位图数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IEnumerableSnapshot{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ManyHashBitMap}#SnapshotEnumerable">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode.#ctor(System.Int32)">
            <summary>
            多哈希位图过滤节点（类似布隆过滤器）
            </summary>
            <param name="size">位图大小（位数量）</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode.SnapshotSet(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap)">
            <summary>
            快照添加数据
            </summary>
            <param name="map">多哈希位图数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode.GetSize">
            <summary>
            获取位图大小（位数量）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode.SetBitsBeforePersistence(System.Int32,System.UInt32[])">
            <summary>
            设置位 持久化前检查
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示位图大小不匹配</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode.SetBits(System.Int32,System.UInt32[])">
            <summary>
            设置位
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示位图大小不匹配</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNode.CheckBits(System.Int32,System.UInt32[])">
            <summary>
            检查位图数据
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示数据不存在</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1">
            <summary>
            消息处理节点接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.SnapshotAdd(`0)">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetTotalCount">
            <summary>
            获取未处理完成消息数量（包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetCount">
            <summary>
            获取未处理完成消息数量（不包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetFailedCount">
            <summary>
            获取失败消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetCallbackCount">
            <summary>
            获取消费者回调数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetTimeoutCount">
            <summary>
            获取未完成处理超时消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.ClearLoadPersistence">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.Clear">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.ClearFailedLoadPersistence">
            <summary>
            清除所有失败消息（包括处理超时消息）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.ClearFailed">
            <summary>
            清除所有失败消息（包括处理超时消息）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.GetMessage(System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0})">
            <summary>
            消费客户端获取消息
            </summary>
            <param name="maxCount">当前客户端最大并发消息数量</param>
            <param name="callback">null 表示心跳测试数据，客户端应该忽略该消息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.AppendMessageLoadPersistence(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.AppendMessage(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.CompletedLoadPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.FailedLoadPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IMessageNode`1.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer">
            <summary>
            消息节点消费者
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer.DefaultDelayMilliseconds">
            <summary>
            默认重试间隔毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer.service">
            <summary>
            日志流持久化内存数据库本地服务
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer.delayMilliseconds">
            <summary>
            重试间隔毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer.isDisposed">
            <summary>
            是否已释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,System.Int32)">
            <summary>
            消息节点消费者
            </summary>
            <param name="client">日志流持久化内存数据库本地服务客户端</param>
            <param name="delayMilliseconds">重试间隔毫秒数</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1">
            <summary>
            消息节点消费者
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.node">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.maxMessageCount">
            <summary>
            服务端单次最大回调消息数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.lastError">
            <summary>
            接收消息的最后一次错误信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.keepCallback">
            <summary>
            保持回调输出
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Int32)">
            <summary>
            字符串消息消费者
            </summary>
            <param name="client">日志流持久化内存数据库本地服务客户端</param>
            <param name="node">本地服务客户端节点</param>
            <param name="maxMessageCount">服务端单次最大回调消息数量</param>
            <param name="delayMilliseconds">重试间隔毫秒数，默认为 1000，最小值为 1</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.onMessage(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0})">
            <summary>
            消息处理
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.checkOnMessage(`0)">
            <summary>
            消息处理
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.onError(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0})">
            <summary>
            接收消息错误处理
            </summary>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceMessageConsumer`1.onMessage(`0)">
            <summary>
            消息处理，异常则表示消息执行失败
            </summary>
            <param name="message"></param>
            <returns>消息是否执行成功</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Message`1">
            <summary>
            消息数据
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Message`1.MessageIdeneity">
            <summary>
            消息唯一编号（节点内唯一编号）
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1">
            <summary>
            正在处理的消息信息
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.Message">
            <summary>
            正在处理的消息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.callback">
            <summary>
            消息回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.NextIndex">
            <summary>
            下一个空闲位置 或者 上一个正在处理的消息节点位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.timeoutTimestamp">
            <summary>
            消息超时时间戳
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.Set(`0,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0},System.Int64)">
            <summary>
            设置消息数据
            </summary>
            <param name="message"></param>
            <param name="callback"></param>
            <param name="timeoutTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.GetMessage(System.Int32@)">
            <summary>
            获取消息数据
            </summary>
            <param name="nextIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.Free(System.Int32)">
            <summary>
            释放消息处理状态（消息完成或者失败）
            </summary>
            <param name="nextIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.Clear(System.Int32)">
            <summary>
            清除消息数据
            </summary>
            <param name="nextIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageArrayItem`1.CheckTimeout(System.Int32@)">
            <summary>
            超时检查
            </summary>
            <param name="nextIndex"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum">
            <summary>
            消息标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.None">
            <summary>
            无标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.Failed">
            <summary>
            处理失败
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.Timeout">
            <summary>
            超时
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.FailedOrTimeout">
            <summary>
            处理失败（包括超时）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageFlagsEnum.SnapshotEnd">
            <summary>
            快照结束
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity">
            <summary>
            正在处理的消息标识
            </summary>
            <summary>
            正在处理的消息标识
            </summary>
            <summary>
            正在处理的消息标识
            </summary>
            <summary>
            正在处理的消息标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.Identity">
            <summary>
            消息唯一编号（节点内唯一编号）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.ArrayIndex">
            <summary>
            消息数组索引位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.Flags">
            <summary>
            消息标记
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.SetNew(System.Int64)">
            <summary>
            设置新消息唯一编号
            </summary>
            <param name="currentIdentity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity},AutoCSer.JsonSerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2">
            <summary>
            消息处理节点
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
            <typeparam name="IT">消息处理节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.timeoutTimestamp">
            <summary>
            消息超时时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.checkTimer">
            <summary>
            超时检查定时
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.MessageArray">
            <summary>
            正在处理的消息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.loader">
            <summary>
            初始化加载节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.isNullLoader">
            <summary>
            是否默认空初始化加载节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.callbacks">
            <summary>
            消息处理客户端回调集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.currentCallback">
            <summary>
            当前预备处理客户端回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.timeoutMessages">
            <summary>
            超时消息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.linkHead">
            <summary>
            等待处理的消息头节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.linkEnd">
            <summary>
            等待处理的消息尾节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.failedHead">
            <summary>
            失败消息头节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.failedEnd">
            <summary>
            失败消息尾节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.nextFailed">
            <summary>
            LinkNext 为下一个待重试处理失败消息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.arrayHead">
            <summary>
            正在处理的消息头节点，NextIndex 表示上一个节点位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.CurrentIdentity">
            <summary>
            当前消息分配唯一编号（节点内唯一编号）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.count">
            <summary>
            未处理完成消息数量（不包括失败消息）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.failedCount">
            <summary>
            失败消息数量（包括处理超时消息）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.arrayMessageCount">
            <summary>
            正在处理中的消息数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.messageArrayFreeIndex">
            <summary>
            空闲的消息位置，NextIndex 表示下一个空闲位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.sendFailedIndex">
            <summary>
            正在重试失败消息的数组位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.fullCallbackIndex">
            <summary>
            满负载消费者回调起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.isCheckTimeout">
            <summary>
            是否正在检查超时
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            消息处理节点
            </summary>
            <param name="arraySize">正在处理消息数组大小</param>
            <param name="timeoutSeconds">消息处理超时秒数</param>
            <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.StreamPersistenceMemoryDatabaseServiceLoaded">
            <summary>
            初始化加载完毕处理
            </summary>
            <returns>加载完毕替换的新节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.StreamPersistenceMemoryDatabaseServiceNodeOnRemoved">
            <summary>
            节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.StreamPersistenceMemoryDatabaseServiceDisposable">
            <summary>
            数据库服务关闭操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.GetSnapshotResult(`0[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.SnapshotAdd(`0)">
            <summary>
            快照设置数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.getLoader">
            <summary>
            获取初始化加载节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.tryGetLoader">
            <summary>
            获取初始化加载节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.AppendLinkCount(`0)">
            <summary>
            添加等待处理消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.AppendFailedCount(`0)">
            <summary>
            添加失败消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.appendFailed(`0)">
            <summary>
            添加失败消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.GetTotalCount">
            <summary>
            获取未处理完成消息数量（包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.GetCount">
            <summary>
            获取未处理完成消息数量（不包括失败消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.GetCallbackCount">
            <summary>
            获取消费者回调数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.GetTimeoutCount">
            <summary>
            获取未完成处理超时消息数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.ClearLoadPersistence">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.Clear">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.GetFailedCount">
            <summary>
            获取失败消息数量（包括处理超时消息）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.clearFailed">
            <summary>
            清除所有失败消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.ClearFailedLoadPersistence">
            <summary>
            清除所有失败消息（包括处理超时消息）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.ClearFailed">
            <summary>
            清除所有失败消息（包括处理超时消息）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.removeCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0})">
            <summary>
            移除无效客户端回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.GetMessage(System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0})">
            <summary>
            消费客户端获取消息
            </summary>
            <param name="maxCount">当前客户端最大并发消息数量</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.sendMessage">
            <summary>
            发送一条消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.sendMessageLink">
            <summary>
            发送多条新消息（currentCallback 不允许为 null）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.sendFailedMessage">
            <summary>
            发送一条失败消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.appendArrayMessage(`0)">
            <summary>
            消息添加到处理中数组
            </summary>
            <param name="message"></param>
            <returns>message.LinkNext</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.AppendMessageLoadPersistence(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.AppendMessage(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.sendNewMessage">
            <summary>
            发送新消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.CompletedLoadPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.freeArrayIndex(`0,System.Int32)">
            <summary>
            释放消息处理状态
            </summary>
            <param name="message"></param>
            <param name="nextIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.FailedLoadPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.failed(`0,System.Int32)">
            <summary>
            消息失败处理
            </summary>
            <param name="message"></param>
            <param name="nextIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.CheckTimeout">
            <summary>
            消息超时检查
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode`2.CheckTimeoutCallback">
            <summary>
            消息超时检查
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1">
            <summary>
            消费者回调信息
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.Callback">
            <summary>
            消费者回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.MaxCount">
            <summary>
            最大并发数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.Count">
            <summary>
            正在处理的回调计数
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.FreeCount">
            <summary>
            空闲并发数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0},System.Int32)">
            <summary>
            设置消费者回调
            </summary>
            <param name="callback"></param>
            <param name="maxCount"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.SetRemove(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount{`0}@)">
            <summary>
            设置消费者回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.remove(System.Int32)">
            <summary>
            移除并复制消费者回调信息
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.IncrementCount">
            <summary>
            添加正在处理的回调计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCallbackCount`1.DecrementCount">
            <summary>
            释放正在处理的回调计数
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimeoutCallback`2">
            <summary>
            超时检查队列回调
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
            <typeparam name="IT">消息处理节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimeoutCallback`2.messageNode">
            <summary>
            消息处理节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimeoutCallback`2.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode{`0,`1})">
            <summary>
            超时检查队列回调
            </summary>
            <param name="messageNode"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimeoutCallback`2.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`2">
            <summary>
            超时检查定时
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
            <typeparam name="IT">消息处理节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`2.messageNode">
            <summary>
            消息处理节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`2.#ctor(System.Int32)">
            <summary>
            超时检查定时
            </summary>
            <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`2.OnTimer">
            <summary>
            定时器触发
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`2.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode{`0,`1})">
            <summary>
            设置消息处理节点
            </summary>
            <param name="messageNode"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeCheckTimer`2.Cancel">
            <summary>
            取消定时
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2">
            <summary>
            消息处理节点初始化加载节点
            </summary>
            <typeparam name="T">消息数据类型</typeparam>
            <typeparam name="IT">消息处理节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.Messages">
            <summary>
            未完成消息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.FailedMessages">
            <summary>
            处理失败消息集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.#ctor">
            <summary>
            消息处理节点初始化加载节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNode{`0,`1})">
            <summary>
            消息处理节点初始化加载节点
            </summary>
            <param name="messageNode">消息处理节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.SnapshotAdd(`0)">
            <summary>
            快照设置数据
            </summary>
            <param name="value"></param>
            <returns>是否快照结束数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.Clear">
            <summary>
            清除所有消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.ClearFailed">
            <summary>
            清除所有失败消息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.AppendMessage(`0)">
            <summary>
            生产者添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息完成处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity)">
            <summary>
            消息失败处理
            </summary>
            <param name="identity"></param>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageNodeLoader`2.Null">
            <summary>
            消息处理节点初始化加载节点
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.OnlyPersistenceNode`1">
            <summary>
            仅存档节点（用于大量数据快速存档，不修改内存数据，也不定义快照操作）
            </summary>
            <typeparam name="T">存档数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.OnlyPersistenceNode`1.SaveLoadPersistence(`0)">
            <summary>
            加载保存数据，用于扫描存档模式
            </summary>
            <param name="value">存档数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.OnlyPersistenceNode`1.Save(`0)">
            <summary>
            保存数据
            </summary>
            <param name="value">存档数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.OnlyPersistenceNode`1.SaveSendOnlyLoadPersistence(`0)">
            <summary>
            加载保存数据，用于扫描存档模式
            </summary>
            <param name="value">存档数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.OnlyPersistenceNode`1.SaveSendOnly(`0)">
            <summary>
            保存数据（服务端不响应）
            </summary>
            <param name="value">存档数据</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IOnlyPersistenceNode`1">
            <summary>
            仅存档节点接口（用于大量数据快速存档，不修改内存数据，也不定义快照操作）
            </summary>
            <typeparam name="T">存档数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IOnlyPersistenceNode`1.SaveLoadPersistence(`0)">
            <summary>
            加载保存数据，用于扫描存档模式
            </summary>
            <param name="value">存档数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IOnlyPersistenceNode`1.Save(`0)">
            <summary>
            保存数据
            </summary>
            <param name="value">存档数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IOnlyPersistenceNode`1.SaveSendOnlyLoadPersistence(`0)">
            <summary>
            加载保存数据，用于扫描存档模式
            </summary>
            <param name="value">存档数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IOnlyPersistenceNode`1.SaveSendOnly(`0)">
            <summary>
            保存数据（服务端不响应）
            </summary>
            <param name="value">存档数据</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1">
            <summary>
            队列节点（先进先出）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.queue">
            <summary>
            队列
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.#ctor(System.Int32)">
            <summary>
            队列节点
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.GetSnapshotResult(`0[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.SetSnapshotResult(AutoCSer.LeftArray{`0}@,AutoCSer.LeftArray{`0}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.Count">
            <summary>
            获取队列数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.Contains(`0)">
            <summary>
            判断队列中是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.Enqueue(`0)">
            <summary>
            将数据添加到队列
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.TryDequeue">
            <summary>
            从队列中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.QueueNode`1.TryPeek">
            <summary>
            获取队列中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3">
            <summary>
            二叉搜索树字典节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.dictionary">
            <summary>
            二叉搜索树字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.#ctor">
            <summary>
            二叉搜索树字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.SetSnapshotResult(AutoCSer.LeftArray{`2}@,AutoCSer.LeftArray{`2}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.Count">
            <summary>
            获取节点数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.GetHeight">
            <summary>
            获取树高度，时间复杂度 O(n)
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.Clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.Set(`0,`1)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">数据</param>
            <returns>是否添加了数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.Remove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.RemoveKeys(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.GetRemove(`0)">
            <summary>
            根据关键字删除节点
            </summary>
            <param name="key">关键字</param>
            <returns>被删除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.ContainsKey(`0)">
            <summary>
            判断是否包含关键字
            </summary>
            <param name="key">关键字</param>
            <returns>是否包含关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key">关键字</param>
            <returns>目标数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.GetValueArray(`0[])">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="key">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="key">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.TryGetValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.TryGetFirstKey">
            <summary>
            获取第一个关键字数据
            </summary>
            <returns>第一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.TryGetLastKey">
            <summary>
            获取最后一个关键字数据
            </summary>
            <returns>最后一个关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.TryGetFirstValue">
            <summary>
            获取第一个数据
            </summary>
            <returns>第一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.TryGetLastValue">
            <summary>
            获取最后一个数据
            </summary>
            <returns>最后一个数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`3.GetValues(System.Int32,System.Byte)">
            <summary>
            获取范围数据集合
            </summary>
            <param name="skipCount">跳过记录数</param>
            <param name="getCount">获取记录数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2">
            <summary>
            二叉搜索树字典节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.GetSnapshotResult(AutoCSer.KeyValue{`0,`1}[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetKeyValueByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetFirstKeyValue">
            <summary>
            获取第一组数据
            </summary>
            <returns>第一组数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeDictionaryNode`2.TryGetLastKeyValue">
            <summary>
            获取最后一组数据
            </summary>
            <returns>最后一组数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1">
            <summary>
            二叉搜索树集合节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.searchTreeSet">
            <summary>
            二叉搜索树集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.#ctor">
            <summary>
            二叉搜索树集合节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetSnapshotResult(`0[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.SetSnapshotResult(AutoCSer.LeftArray{`0}@,AutoCSer.LeftArray{`0}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value">关键字</param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.AddValues(`0[])">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="values"></param>
            <returns>添加数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value">关键字</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value">关键字</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.RemoveValues(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="values"></param>
            <returns>删除数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetFrist">
            <summary>
            获取第一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetLast">
            <summary>
            获取最后一个数据
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.IndexOf(`0)">
            <summary>
            根据关键字获取一个匹配节点位置
            </summary>
            <param name="value">关键字</param>
            <returns>一个匹配节点位置,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.CountLess(`0)">
            <summary>
            根据关键字比它小的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.CountThan(`0)">
            <summary>
            根据关键字比它大的节点数量
            </summary>
            <param name="value">关键字</param>
            <returns>节点数量，失败返回 -1</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SearchTreeSetNode`1.GetByIndex(System.Int32)">
            <summary>
            根据节点位置获取数据
            </summary>
            <param name="index">节点位置</param>
            <returns>数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2">
            <summary>
            排序字典节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.dictionary">
            <summary>
            排序字典
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.#ctor">
            <summary>
            排序字典节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.GetSnapshotResult(AutoCSer.KeyValue{`0,`1}[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.SetSnapshotResult(AutoCSer.LeftArray{AutoCSer.KeyValue{`0,`1}}@,AutoCSer.LeftArray{AutoCSer.KeyValue{`0,`1}}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.RemoveKeys(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedDictionaryNode`2.GetValueArray(`0[])">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2">
            <summary>
            排序列表节点
            </summary>
            <typeparam name="KT">排序关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.list">
            <summary>
            排序列表
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.#ctor(System.Int32)">
            <summary>
            排序列表
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.GetSnapshotResult(AutoCSer.KeyValue{`0,`1}[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.SetSnapshotResult(AutoCSer.LeftArray{AutoCSer.KeyValue{`0,`1}}@,AutoCSer.LeftArray{AutoCSer.KeyValue{`0,`1}}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.SnapshotAdd(AutoCSer.KeyValue{`0,`1})">
            <summary>
            快照添加数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.GetCapacity">
            <summary>
            获取容器大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.TryAdd(`0,`1)">
            <summary>
            添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.ContainsValue(`1)">
            <summary>
            判断数据是否存在，时间复杂度 O(n) 不建议调用（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.IndexOfKey(`0)">
            <summary>
            获取关键字排序位置
            </summary>
            <param name="key"></param>
            <returns>负数表示没有找到关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.IndexOfValue(`1)">
            <summary>
            获取第一个匹配数据排序位置（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value"></param>
            <returns>负数表示没有找到匹配数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.GetRemove(`0)">
            <summary>
            删除关键字并返回被删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.TryGetValue(`0)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedListNode`2.RemoveAt(System.Int32)">
            <summary>
            删除指定排序索引位置数据
            </summary>
            <param name="index"></param>
            <returns>索引超出范围返回 false</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1">
            <summary>
            排序集合节点
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.sortedSet">
            <summary>
            排序集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.#ctor">
            <summary>
            排序集合节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.GetSnapshotResult(`0[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.SetSnapshotResult(AutoCSer.LeftArray{`0}@,AutoCSer.LeftArray{`0}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns>是否添加成功，否则表示关键字已经存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.AddValues(`0[])">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="values"></param>
            <returns>添加数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Contains(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="value"></param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.RemoveValues(`0[])">
            <summary>
            删除关键字
            </summary>
            <param name="values"></param>
            <returns>删除数据数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.GetMin">
            <summary>
            获取最小值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SortedSetNode`1.GetMax">
            <summary>
            获取最大值
            </summary>
            <returns>没有数据时返回无返回值</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1">
            <summary>
            栈节点（后进先出）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.stack">
            <summary>
            栈
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.#ctor(System.Int32)">
            <summary>
            栈节点
            </summary>
            <param name="capacity">容器初始化大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.GetSnapshotResult(`0[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.SetSnapshotResult(AutoCSer.LeftArray{`0}@,AutoCSer.LeftArray{`0}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.Count">
            <summary>
            获取数据数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.Contains(`0)">
            <summary>
            判断是否存在匹配数据（由于缓存数据是序列化的对象副本，所以判断是否对象相等的前提是实现 IEquatable{VT} ）
            </summary>
            <param name="value">匹配数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.Push(`0)">
            <summary>
            将数据添加到栈
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.TryPop">
            <summary>
            从栈中弹出一个数据
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.StackNode`1.TryPeek">
            <summary>
            获取栈中下一个弹出数据（不弹出数据仅查看）
            </summary>
            <returns>没有可弹出数据则返回无数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameterSerializer">
            <summary>
            请求参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameterSerializer.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreatingNodeInfo">
            <summary>
            创建节点信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreatingNodeInfo.nodeInfo">
            <summary>
            服务端节点信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreatingNodeInfo.Index">
            <summary>
            节点索引
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreatingNodeInfo.#ctor(System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建节点信息
            </summary>
            <param name="index"></param>
            <param name="nodeInfo"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreatingNodeInfo.Check(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            检查节点信息是否匹配
            </summary>
            <param name="nodeInfo"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese">
            <summary>
            扩展中文配置
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServerNodeCreateFailed(System.Type)">
            <summary>
            服务端节点创建失败
            </summary>
            <param name="type">服务端节点接口类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServerSnapshotNodeNotImplemented(System.Type)">
            <summary>
            服务端节点类型未实现快照接口
            </summary>
            <param name="type">服务端节点类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServiceLoaderFailed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.String,System.Int64,System.Int32)">
            <summary>
            内存数据库初始化加载数据失败
            </summary>
            <param name="state">错误状态</param>
            <param name="fileName">加载的持久化文件名称</param>
            <param name="position">当前数据块所在持久化流中的位置</param>
            <param name="bufferIndex">当前数据块内索引位置</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServiceLoaderFailed(System.String,System.Int64,System.Int32)">
            <summary>
            内存数据库初始化加载数据失败
            </summary>
            <param name="fileName">加载的持久化文件名称</param>
            <param name="position">当前数据块所在持久化流中的位置</param>
            <param name="bufferIndex">当前数据块内索引位置</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServiceLoaderExceptionPositionFileSizeUnrecognized(System.String,System.Int64)">
            <summary>
            持久化回调异常位置文件长度不可识别
            </summary>
            <param name="fileName">持久化回调异常位置文件名称</param>
            <param name="unreadSize">未读数据字节数量</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServiceLoaderExceptionPositionRebuildPositionNotMatch(System.String,System.UInt64,System.UInt64)">
            <summary>
            持久化回调异常位置文件重建索引位置与数据库文件位置不匹配
            </summary>
            <param name="fileName">持久化回调异常位置文件名称</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="databaseRebuildPosition">内存数据库持久化流重建起始位置</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServiceLoaderExceptionPositionFileHeaderNotMatch(System.String)">
            <summary>
            持久化回调异常位置文件头部识别失败
            </summary>
            <param name="fileName">持久化回调异常位置文件名称</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServiceLoaderExceptionPositionFileHeaderSizeNotMatch(System.String,System.Int32,System.Int32)">
            <summary>
            持久化回调异常位置文件头部数据不足
            </summary>
            <param name="fileName">持久化回调异常位置文件名称</param>
            <param name="unreadSize">文件未读数据字节数量</param>
            <param name="fileHeadSize">文件头部需求字节数量</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServiceLoaderFileHeaderNotMatch(System.String)">
            <summary>
            持久化文件头部识别失败
            </summary>
            <param name="fileName">持久化文件名称</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetServiceLoaderFileVersionNotSupported(System.String,System.Byte)">
            <summary>
            持久化文件头部版本号不被支持
            </summary>
            <param name="fileName">持久化文件名称</param>
            <param name="verison">内存数据库版本号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetNotFoundPersistenceFile(System.String)">
            <summary>
            持久化文件缺失
            </summary>
            <param name="fileName">持久化文件</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetNotFoundExceptionPositionFile(System.String)">
            <summary>
            持久化回调异常位置文件缺失
            </summary>
            <param name="fileName">持久化回调异常位置文件</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetClientNodeCreatorException(System.Type,System.Type)">
            <summary>
            内存数据库创建客户端节点异常信息
            </summary>
            <param name="clientType">客户端节点接口类型</param>
            <param name="serverType">服务端节点接口类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetClientNodeCreatorNotMatchType(System.Type)">
            <summary>
            客户端节点没有找到匹配的服务端节点接口类型
            </summary>
            <param name="type">客户端节点接口类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.GetClientNodeCreatorWarning(System.Type,System.String[])">
            <summary>
            节点客户端生成警告信息
            </summary>
            <param name="type">客户端节点接口类型</param>
            <param name="messages">节点构造提示信息</param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Chinese.Default">
            <summary>
            默认扩展中文配置
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration">
            <summary>
            扩展系统语言文化配置
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServerNodeCreateFailed(System.Type)">
            <summary>
            服务端节点创建失败
            </summary>
            <param name="type">服务端节点接口类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServerSnapshotNodeNotImplemented(System.Type)">
            <summary>
            服务端节点类型未实现快照接口
            </summary>
            <param name="type">服务端节点类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServiceLoaderFailed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.String,System.Int64,System.Int32)">
            <summary>
            内存数据库初始化加载数据失败
            </summary>
            <param name="state">错误状态</param>
            <param name="fileName">加载的持久化文件名称</param>
            <param name="position">当前数据块所在持久化流中的位置</param>
            <param name="bufferIndex">当前数据块内索引位置</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServiceLoaderFailed(System.String,System.Int64,System.Int32)">
            <summary>
            内存数据库初始化加载数据失败
            </summary>
            <param name="fileName">加载的持久化文件名称</param>
            <param name="position">当前数据块所在持久化流中的位置</param>
            <param name="bufferIndex">当前数据块内索引位置</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServiceLoaderExceptionPositionFileSizeUnrecognized(System.String,System.Int64)">
            <summary>
            持久化回调异常位置文件长度不可识别
            </summary>
            <param name="fileName">持久化回调异常位置文件名称</param>
            <param name="unreadSize">未读数据字节数量</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServiceLoaderExceptionPositionRebuildPositionNotMatch(System.String,System.UInt64,System.UInt64)">
            <summary>
            持久化回调异常位置文件重建索引位置与数据库文件位置不匹配
            </summary>
            <param name="fileName">持久化回调异常位置文件名称</param>
            <param name="rebuildPosition">持久化流重建起始位置</param>
            <param name="databaseRebuildPosition">内存数据库持久化流重建起始位置</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServiceLoaderExceptionPositionFileHeaderNotMatch(System.String)">
            <summary>
            持久化回调异常位置文件头部识别失败
            </summary>
            <param name="fileName">持久化回调异常位置文件名称</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServiceLoaderExceptionPositionFileHeaderSizeNotMatch(System.String,System.Int32,System.Int32)">
            <summary>
            持久化回调异常位置文件头部数据不足
            </summary>
            <param name="fileName">持久化回调异常位置文件名称</param>
            <param name="unreadSize">文件未读数据字节数量</param>
            <param name="fileHeadSize">文件头部需求字节数量</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServiceLoaderFileHeaderNotMatch(System.String)">
            <summary>
            持久化文件头部识别失败
            </summary>
            <param name="fileName">持久化文件名称</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetServiceLoaderFileVersionNotSupported(System.String,System.Byte)">
            <summary>
            持久化文件头部版本号不被支持
            </summary>
            <param name="fileName">持久化文件名称</param>
            <param name="verison">内存数据库版本号</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetNotFoundPersistenceFile(System.String)">
            <summary>
            持久化文件缺失
            </summary>
            <param name="fileName">持久化文件</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetNotFoundExceptionPositionFile(System.String)">
            <summary>
            持久化回调异常位置文件缺失
            </summary>
            <param name="fileName">持久化回调异常位置文件</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetClientNodeCreatorException(System.Type,System.Type)">
            <summary>
            内存数据库创建客户端节点异常信息
            </summary>
            <param name="clientType">客户端节点接口类型</param>
            <param name="serverType">服务端节点接口类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetClientNodeCreatorNotMatchType(System.Type)">
            <summary>
            客户端节点没有找到匹配的服务端节点接口类型
            </summary>
            <param name="type">客户端节点接口类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.GetClientNodeCreatorWarning(System.Type,System.String[])">
            <summary>
            节点客户端生成警告信息
            </summary>
            <param name="type">客户端节点接口类型</param>
            <param name="messages">节点构造提示信息</param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.Configuration.Default">
            <summary>
            默认扩展系统语言文化配置
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English">
            <summary>
            Extended English configuration
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServerNodeCreateFailed(System.Type)">
            <summary>
            Failed to create a server node
            </summary>
            <param name="type">Server node interface type</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServerSnapshotNodeNotImplemented(System.Type)">
            <summary>
            Server node type The snapshot interface is not implemented
            </summary>
            <param name="type">Server node type</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServiceLoaderFailed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.String,System.Int64,System.Int32)">
            <summary>
            Failed to load data during memory database initialization
            </summary>
            <param name="state">Error state</param>
            <param name="fileName">The name of the loaded persistent file</param>
            <param name="position">The location of the current data block in the persistent flow</param>
            <param name="bufferIndex">Index position in the current data block</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServiceLoaderFailed(System.String,System.Int64,System.Int32)">
            <summary>
            Failed to load data during memory database initialization
            </summary>
            <param name="fileName">The name of the loaded persistent file</param>
            <param name="position">The location of the current data block in the persistent flow</param>
            <param name="bufferIndex">Index position in the current data block</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServiceLoaderExceptionPositionFileSizeUnrecognized(System.String,System.Int64)">
            <summary>
            Persistent callback exception location File length unrecognized
            </summary>
            <param name="fileName">Persistent callback exception location File name</param>
            <param name="unreadSize">Number of unread data bytes</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServiceLoaderExceptionPositionRebuildPositionNotMatch(System.String,System.UInt64,System.UInt64)">
            <summary>
            Persistent callback exception location The file rebuild index location does not match the database file location
            </summary>
            <param name="fileName">Persistent callback exception location File name</param>
            <param name="rebuildPosition">The start location of the persistent stream reconstruction</param>
            <param name="databaseRebuildPosition">The start location of the in-memory database persistent stream reconstruction</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServiceLoaderExceptionPositionFileHeaderNotMatch(System.String)">
            <summary>
            Persistent callback Abnormal location File header identification failed
            </summary>
            <param name="fileName">Persistent callback exception location File name</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServiceLoaderExceptionPositionFileHeaderSizeNotMatch(System.String,System.Int32,System.Int32)">
            <summary>
            Persistent callback Abnormal location File header data is insufficient
            </summary>
            <param name="fileName">Persistent callback exception location File name</param>
            <param name="unreadSize">Number of unread bytes of the file</param>
            <param name="fileHeadSize">The required number of bytes in the file header</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServiceLoaderFileHeaderNotMatch(System.String)">
            <summary>
            Description Failed to identify the persistent file header
            </summary>
            <param name="fileName">Persistent file name</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetServiceLoaderFileVersionNotSupported(System.String,System.Byte)">
            <summary>
            Persistent file header version number is not supported
            </summary>
            <param name="fileName">Persistent file name</param>
            <param name="verison">Memory database version number</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetNotFoundPersistenceFile(System.String)">
            <summary>
            Persistent file is missing
            </summary>
            <param name="fileName">Persistent File name</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetNotFoundExceptionPositionFile(System.String)">
            <summary>
            Persistent callback exception location file is missing
            </summary>
            <param name="fileName">Persistent callback exception location File name</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetClientNodeCreatorException(System.Type,System.Type)">
            <summary>
            Memory database creation client node exception information
            </summary>
            <param name="clientType">Type of the client node interface</param>
            <param name="serverType">Server node interface type</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetClientNodeCreatorNotMatchType(System.Type)">
            <summary>
            The client node did not find a matching server node interface type
            </summary>
            <param name="type">Type of the client node interface</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.GetClientNodeCreatorWarning(System.Type,System.String[])">
            <summary>
            The node client generates a warning message
            </summary>
            <param name="type">Type of the client node interface</param>
            <param name="messages">Node construction prompts</param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Culture.English.Default">
            <summary>
            Default Extended English configuration
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Extensions.EnumerableExtension">
            <summary>
            集合相关扩展
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Extensions.EnumerableExtension.Cast``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            类型转换
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseDeserializeValue`1">
            <summary>
            反序列化对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseDeserializeValue`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseDeserializeValue`1.#ctor(`0)">
            <summary>
            反序列化对象
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseDeserializeValue`1.GetValue(System.Object)">
            <summary>
            获取反序列化对象
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.State">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.flag">
            <summary>
            服务端节点方法标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.Serializer">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.DeserializeValue">
            <summary>
            反序列化操作对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            返回参数序列化
            </summary>
            <param name="state">调用状态</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            返回参数序列化
            </summary>
            <param name="serializer">返回参数序列化</param>
            <param name="flag">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#KeepCallbackResponseParameter}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#KeepCallbackResponseParameter}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.Create``1(``0,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            创建返回参数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="flag">服务端节点方法标记</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.CreateValues``1(System.Collections.Generic.IEnumerable{``0},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            创建返回参数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <param name="flag">服务端节点方法标记</param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter.EmptyKeepCallback">
            <summary>
            空回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterBinarySerializer`1">
            <summary>
            返回参数序列化
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterBinarySerializer`1.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterBinarySerializer`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterBinarySerializer`1.Default">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterSimpleSerializer`1">
            <summary>
            返回参数序列化
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterSimpleSerializer`1.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterSimpleSerializer`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameterSimpleSerializer`1.Default">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum">
            <summary>
            服务端节点方法标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.None">
            <summary>
            无标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsPersistence">
            <summary>
            是否持久化（涉及写入操作则需要持久化）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsClientCall">
            <summary>
            是否允许客户端调用，否则为服务端内存调用方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsSimpleSerializeParamter">
            <summary>
            是否简单序列化输出数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsSimpleDeserializeParamter">
            <summary>
            是否简单反序列化输入数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsIgnorePersistenceCallbackException">
            <summary>
            是否忽略持久化回调异常，节点方法必须保证异常时还原恢复内存数据状态，必须关心 new 产生的内存不足异常，在修改数据以前应该将完成所有 new 操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum.IsWriteQueue">
            <summary>
            本地调用是否添加到写操作队列
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter.customSessionObject">
            <summary>
            自定义状态对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallMethodParameter.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter.customSessionObject">
            <summary>
            自定义状态对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceCallOutputMethodParameter.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter.customSessionObject">
            <summary>
            自定义状态对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceKeepCallbackMethodParameter.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1.customSessionObject">
            <summary>
            自定义状态对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod,`0)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BeforePersistenceMethodParameter`1.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateInputMethodParameter">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateInputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateInputMethodParameter.Clone(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            复制调用方法与参数信息
            </summary>
            <param name="index"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateInputMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns>下一个参数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateInputMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateInputMethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateInputMethodParameter.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateInputMethodParameter.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化（初始化加载持久化数据）
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter)">
            <summary>
            调用方法
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter)">
            <summary>
            初始化加载数据
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod`1">
            <summary>
            服务端节点方法
            </summary>
            <typeparam name="T">输入参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod`1.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.InputKeepCallback(AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@)">
            <summary>
            调用方法
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.enumerableCallback``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            枚举回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.EnumerableCallback``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            枚举回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodParameter"></param>
            <param name="values"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.CreateMethodKeepCallback``1">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1">
            <summary>
            调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.Parameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.Clone(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            复制调用方法与参数信息
            </summary>
            <param name="index"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化（初始化加载持久化数据）
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter`1.GetParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter{`0})">
            <summary>
            获取输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="node"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            初始化加载数据
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.EnumerableCallback``1(System.Collections.Generic.IEnumerable{``0},AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            枚举回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <param name="callback"></param>
            <param name="flag">服务端节点方法标记</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterPersistenceCallback">
            <summary>
            非持久化回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterPersistenceCallback.methodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterPersistenceCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            非持久化回调
            </summary>
            <param name="methodParameter">调用方法与参数信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterPersistenceCallback.RunTask">
            <summary>
            非持久化回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod.SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter)">
            <summary>
            调用方法
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter)">
            <summary>
            初始化加载数据
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod`1">
            <summary>
            服务端节点方法
            </summary>
            <typeparam name="T">输入参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod`1.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex">
            <summary>
            节点索引信息
            </summary>
            <summary>
            节点索引信息
            </summary>
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.FreeIdentity">
            <summary>
            空闲节点标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.Index">
            <summary>
            节点索引
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.Identity">
            <summary>
            节点标识
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.#ctor(System.Int32,System.UInt32)">
            <summary>
            节点索引信息
            </summary>
            <param name="index"></param>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            错误信息
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.GetFree">
            <summary>
            获取节点空闲标记
            </summary>
            <returns>是否空闲节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.GetState">
            <summary>
            获取调用状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.Equals(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            判断是否一致
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo">
            <summary>
            服务端节点信息 
            </summary>
            <summary>
            服务端节点信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.RemoteType">
            <summary>
            服务端节点接口类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.#ctor(System.Type)">
            <summary>
            服务端节点信息
            </summary>
            <param name="type">服务端节点接口类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo},AutoCSer.JsonSerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod">
            <summary>
            服务端节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.MethodIndexEnumTypePath">
            <summary>
            生成方法序号映射枚举类型代码相对路径
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.CallType">
            <summary>
            方法调用类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.CallState">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.#ctor(System.Type,System.Reflection.MethodInfo)">
            <summary>
            服务端节点方法信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.setCallType">
            <summary>
            设置方法调用类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.checkParameter">
            <summary>
            参数检查
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.SetError(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.String)">
            <summary>
            设置错误信息
            </summary>
            <param name="state"></param>
            <param name="error"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.Equals(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod)">
            <summary>
            判断是否相等
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.Equals(System.Object)">
            <summary>
            判断是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeMethod.GetHashCode">
            <summary>
            获取哈希值
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode">
            <summary>
            位图节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.map">
            <summary>
            位图
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.capacity">
            <summary>
            二进制位数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.#ctor(System.UInt32)">
            <summary>
            位图节点
            </summary>
            <param name="capacity">二进制位数量</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetSnapshotResult(System.Byte[][],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.SetSnapshotResult(AutoCSer.LeftArray{System.Byte[]}@,AutoCSer.LeftArray{System.Byte[]}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.SnapshotSet(System.Byte[])">
            <summary>
            快照添加数据
            </summary>
            <param name="map">位图</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetCapacity">
            <summary>
            获取二进制位数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.ClearMap">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBit(System.UInt32)">
            <summary>
            读取位
            </summary>
            <param name="index">位索引</param>
            <returns>非 0 表示二进制位为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.SetBit(System.UInt32)">
            <summary>
            设置位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitSetBit(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.ClearBit(System.UInt32)">
            <summary>
            清除位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitClearBit(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.InvertBit(System.UInt32)">
            <summary>
            状态取反
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNode.GetBitInvertBit(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptyNodeMethodEnum">
            <summary>
            空节点接口方法映射枚举（用于节点初始化绑定 MethodIndexEnumType ）
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment">
            <summary>
            自增 ID 分段
            </summary>
            <summary>
            自增 ID 分段
            </summary>
            <summary>
            自增 ID 分段
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.identity">
            <summary>
            当前分配 ID
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.Identity">
            <summary>
            当前分配 ID
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.count">
            <summary>
            剩余 ID 数量
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.Count">
            <summary>
            剩余 ID 数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.#ctor(System.Int64@,System.Int32)">
            <summary>
            自增 ID 分段
            </summary>
            <param name="identity"></param>
            <param name="count"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.Next(System.Int64@)">
            <summary>
            获取下一个自增ID
            </summary>
            <param name="identity">分配的分配 ID</param>
            <returns>返回 false 表示没有可分配 ID</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNode">
            <summary>
            64 位自增ID 节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNode.identity">
            <summary>
            当前分配 ID
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNode.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IEnumerableSnapshot{System#Int64}#SnapshotEnumerable">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNode.#ctor(System.Int64)">
            <summary>
            位图节点
            </summary>
            <param name="identity">当前分配 ID</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNode.getIdentity">
            <summary>
            获取当前分配锁操作标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNode.SnapshotSet(System.Int64)">
            <summary>
            快照添加数据
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNode.Next">
            <summary>
            获取下一个自增ID
            </summary>
            <returns>下一个自增ID，失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNode.NextFragment(System.Int32)">
            <summary>
            获取自增 ID 分段
            </summary>
            <param name="count">获取数量</param>
            <returns>自增 ID 分段</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNode">
            <summary>
            64 位自增ID 节点接口
            </summary>
            <summary>
            64 位自增ID 节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNode.SnapshotSet(System.Int64)">
            <summary>
            快照添加数据
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNode.Next">
            <summary>
            获取下一个自增ID
            </summary>
            <returns>下一个自增ID，失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNode.NextFragment(System.Int32)">
            <summary>
            获取自增 ID 分段
            </summary>
            <param name="count">获取数量</param>
            <returns>自增 ID 分段</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode">
            <summary>
            位图节点接口
            </summary>
            <summary>
            位图节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.SnapshotSet(System.Byte[])">
            <summary>
            快照添加数据
            </summary>
            <param name="map"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetCapacity">
            <summary>
            获取二进制位数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.ClearMap">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBit(System.UInt32)">
            <summary>
            读取位状态
            </summary>
            <param name="index">位索引</param>
            <returns>非 0 表示二进制位为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.SetBit(System.UInt32)">
            <summary>
            设置位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitSetBit(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.ClearBit(System.UInt32)">
            <summary>
            清除位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitClearBit(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.InvertBit(System.UInt32)">
            <summary>
            状态取反
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode.GetBitInvertBit(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1">
            <summary>
            分页数组
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.array">
            <summary>
            数据数组
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.parameter">
            <summary>
            分页查询参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.skipCount">
            <summary>
            跳过记录数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.index">
            <summary>
            当前数组写入索引位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.count">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter)">
            <summary>
            分页数组
            </summary>
            <param name="parameter">分页查询参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.Add">
            <summary>
            新增数据
            </summary>
            <returns>是否需要将数据写入数组</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.Add(`0)">
            <summary>
            将数据写入数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageArray`1.GetPageResult">
            <summary>
            获取分页数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter">
            <summary>
            分页查询参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetPageArray``1">
            <summary>
            获取分页数组
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetPageResult``1">
            <summary>
            获取空数据
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetPageResult``2(AutoCSer.LeftArray{``0},System.Func{``0,``0,System.Int32},System.Func{``0,``1})">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <typeparam name="KT">分页数据关键字类型</typeparam>
            <param name="array">待排序数组</param>
            <param name="comparer">排序比较器</param>
            <param name="getKey">获取分页数据关键字委托</param>
            <returns>已排序关键字数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetPageResult(AutoCSer.LeftArray{System.Int32})">
            <summary>
            获取分页数据
            </summary>
            <param name="array">待排序数组</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetDescPageResult(AutoCSer.LeftArray{System.Int32})">
            <summary>
            获取逆序分页数据
            </summary>
            <param name="array">待排序数组</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetPageResult``1(AutoCSer.LeftArray{``0},System.Func{``0,System.Int32})">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="T">排序关键字类型</typeparam>
            <param name="array">待排序数组</param>
            <param name="getKey">获取分页数据关键字委托</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetDescPageResult``1(AutoCSer.LeftArray{``0},System.Func{``0,System.Int32})">
            <summary>
            获取逆序分页数据
            </summary>
            <typeparam name="T">排序关键字类型</typeparam>
            <param name="array">待排序数组</param>
            <param name="getKey">获取分页数据关键字委托</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetPageResult``1(AutoCSer.LeftArray{``0},System.Func{``0,System.Int64})">
            <summary>
            获取分页数据
            </summary>
            <typeparam name="T">排序关键字类型</typeparam>
            <param name="array">待排序数组</param>
            <param name="getKey">获取分页数据关键字委托</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetDescPageResult``1(AutoCSer.LeftArray{``0},System.Func{``0,System.Int64})">
            <summary>
            获取逆序分页数据
            </summary>
            <typeparam name="T">排序关键字类型</typeparam>
            <param name="array">待排序数组</param>
            <param name="getKey">获取分页数据关键字委托</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetKeyPageResult``2(AutoCSer.SearchTree.Dictionary{``0,``1})">
            <summary>
            获取关键字分页数据
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
            <param name="dictionary">二叉搜索树字典</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetDescKeyPageResult``2(AutoCSer.SearchTree.Dictionary{``0,``1})">
            <summary>
            获取关键字逆序分页数据
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
            <param name="dictionary">二叉搜索树字典</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetPageResult``1(AutoCSer.SearchTree.Set{``0})">
            <summary>
            获取关键字分页数据
            </summary>
            <typeparam name="T">关键字类型</typeparam>
            <param name="tree">二叉搜索树集合</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetPageResult``2(AutoCSer.SearchTree.Set{``0},System.Func{``0,``1})">
            <summary>
            获取关键字分页数据
            </summary>
            <typeparam name="T">关键字类型</typeparam>
            <typeparam name="VT">返回值数据类型</typeparam>
            <param name="tree">二叉搜索树集合</param>
            <param name="getValue">数据转换委托</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetDescPageResult``1(AutoCSer.SearchTree.Set{``0})">
            <summary>
            获取关键字逆序分页数据
            </summary>
            <typeparam name="T">关键字类型</typeparam>
            <param name="tree">二叉搜索树集合</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetDescPageResult``2(AutoCSer.SearchTree.Set{``0},System.Func{``0,``1})">
            <summary>
            获取关键字逆序分页数据
            </summary>
            <typeparam name="T">关键字类型</typeparam>
            <typeparam name="VT">返回值数据类型</typeparam>
            <param name="tree">二叉搜索树集合</param>
            <param name="getValue">数据转换委托</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetKeyPageResult``2(AutoCSer.SearchTree.NodeDictionary{``0,``1})">
            <summary>
            获取关键字分页数据
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
            <param name="dictionary">二叉搜索树字典</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageParameter.GetDescKeyPageResult``2(AutoCSer.SearchTree.NodeDictionary{``0,``1})">
            <summary>
            获取关键字逆序分页数据
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
            <param name="dictionary">二叉搜索树字典</param>
            <returns>排序关键字集合</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1">
            <summary>
            分页数据
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.Values">
            <summary>
            当前分页数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.TotalCount">
            <summary>
            查询记录总数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.PageIndex">
            <summary>
            当前分页编号（从 0 开始）
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.PageIndex1">
            <summary>
            当前分页编号（从 1 开始）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.PageSize">
            <summary>
            查询分页记录数量
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.PageCount">
            <summary>
            分页总数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.ReturnType">
            <summary>
            网络客户端返回值类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.CallState">
            <summary>
            读取数据状态
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.#ctor(`0[],System.Int32,System.Int32,System.Int32)">
            <summary>
            分页数据
            </summary>
            <param name="values">当前分页数据</param>
            <param name="totalCount">查询记录总数</param>
            <param name="pageIndex">当前分页编号（从 0 开始）</param>
            <param name="pageSize">查询分页记录数量</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.#ctor(AutoCSer.Net.CommandClientReturnTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            错误分页数据
            </summary>
            <param name="returnType"></param>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.#ctor(AutoCSer.Net.CommandClientReturnTypeEnum)">
            <summary>
            错误分页数据
            </summary>
            <param name="returnType"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.Cast``1(``0[])">
            <summary>
            转换分页数据类型
            </summary>
            <typeparam name="VT">数据类型</typeparam>
            <param name="values">当前分页数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult`1.Cast``1">
            <summary>
            错误数据转换
            </summary>
            <typeparam name="VT"></typeparam>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult">
            <summary>
            重建持久化文件调用结果
            </summary>
            <summary>
            重建持久化文件调用结果
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.CallState">
            <summary>
            调用返回状态，Success 表示提交成功正在处理中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.LoadExceptionNodeState">
            <summary>
            初始化加载执行异常节点状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.LoadExceptionNodeKey">
            <summary>
            初始化加载执行异常节点名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.LoadExceptionNodeType">
            <summary>
            初始化加载执行异常节点接口类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            重建持久化文件调用结果
            </summary>
            <param name="callState"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            重建持久化文件调用结果
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RebuildResult.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NullResponseParameterSerializer">
            <summary>
            默认空返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NullResponseParameterSerializer.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NullResponseParameterSerializer.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NullResponseParameterSerializer.Null">
            <summary>
            默认空返回参数序列化
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.Index">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.methodIndex">
            <summary>
            调用方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.CallState">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.serializer">
            <summary>
            序列化委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.MethodParameter">
            <summary>
            调用方法信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameterSerializer)">
            <summary>
            请求参数序列化
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="serializer">序列化委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#RequestParameter}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#RequestParameter}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.State">
            <summary>
            调用状态
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.IsCompleted">
            <summary>
            完成状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.#ctor">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            返回参数序列化
            </summary>
            <param name="state">调用状态</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ResponseParameter}#Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.AutoCSer#BinarySerialize#ICustomSerialize{AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ResponseParameter}#Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.CreateKeepCallback">
            <summary>
            创建持续回调返回参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.Create``1(``0,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            创建返回参数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="flag">服务端节点方法标记</param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter.CallStates">
            <summary>
            调用状态返回参数集合
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter`1">
            <summary>
            返回参数
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter`1.#ctor">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter`1.#ctor(`0)">
            <summary>
            返回参数
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod.CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter)">
            <summary>
            调用方法
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter)">
            <summary>
            初始化加载数据
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod`1">
            <summary>
            服务端节点方法
            </summary>
            <typeparam name="T">输入参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod`1.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.SendOnly">
            <summary>
            调用方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1">
            <summary>
            调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.Parameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.Clone(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            复制调用方法与参数信息
            </summary>
            <param name="index"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化（初始化加载持久化数据）
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter`1.GetParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter{`0})">
            <summary>
            获取输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.CallInput(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            调用方法
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.SuccessCallback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter)">
            <summary>
            调用回调
            </summary>
            <param name="methodParameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1">
            <summary>
            调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.Parameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.Clone(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            复制调用方法与参数信息
            </summary>
            <param name="index"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化（初始化加载持久化数据）
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter`1.GetParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter{`0})">
            <summary>
            获取输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            调用方法
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            持久化之前检查参数
            </summary>
            <param name="parameter"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.CallBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            持久化之前检查参数
            </summary>
            <param name="parameter"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            初始化加载数据
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod`1">
            <summary>
            服务端节点方法
            </summary>
            <typeparam name="T">输入参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod`1.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod`1.CreateParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.CallInputOutput(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@)">
            <summary>
            调用方法
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.SuccessCallback``1(``0)">
            <summary>
            调用回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter,``0)">
            <summary>
            调用回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodParameter"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.SuccessCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            调用回调
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.CallbackResponseParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            调用回调
            </summary>
            <param name="methodParameter"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.GetBeforePersistenceResponseParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{``0})">
            <summary>
            获取持久化检查方法返回值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodParameter"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.CreateMethodCallback``1">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1">
            <summary>
            调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.Parameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,`0@,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod,`0)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.Clone(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            复制调用方法与参数信息
            </summary>
            <param name="index"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化（初始化加载持久化数据）
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.CreateBeforePersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod)">
            <summary>
            创建持久化检查方法调用参数
            </summary>
            <param name="beforePersistenceMethod"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter`1.GetParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter{`0})">
            <summary>
            获取输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="node"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            初始化加载数据
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            调用回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.CallbackDelegate">
            <summary>
            调用回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="node"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            持久化之前检查参数
            </summary>
            <param name="node"></param>
            <returns>无返回值表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.CallBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            持久化之前检查参数
            </summary>
            <param name="node"></param>
            <returns>返回 true 表示需要继续调用持久化方法</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.LoadCall(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            初始化加载数据
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback``1(``0,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            调用回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="callback"></param>
            <param name="flag">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.CallbackResponseParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@)">
            <summary>
            调用回调
            </summary>
            <param name="value"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.GetBeforePersistenceResponseParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{``0},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            获取持久化检查方法返回值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="flag">服务端节点方法标记</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.callback">
            <summary>
            调用回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="method"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.Int32)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum">
            <summary>
            方法调用类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.Call">
            <summary>
            无输入无返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.CallInput">
            <summary>
            有输入无返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.CallOutput">
            <summary>
            无输入有返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.CallInputOutput">
            <summary>
            有输入有返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.SendOnly">
            <summary>
            有输入无返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.KeepCallback">
            <summary>
            无输入有返回（持续回调）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.InputKeepCallback">
            <summary>
            有输入有返回（持续回调）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.Callback">
            <summary>
            无输入有返回（服务端调用类型，客户端对应 CallOutput）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.InputCallback">
            <summary>
            有输入有返回（服务端调用类型，客户端对应 CallInputOutput） 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.Enumerable">
            <summary>
            无输入有返回（持续回调）（服务端调用类型，客户端对应 KeepCallback）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.InputEnumerable">
            <summary>
            有输入有返回（持续回调）（服务端调用类型，客户端对应 InputKeepCallback）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum.Unknown">
            <summary>
            未知，定义不合法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1">
            <summary>
            返回参数序列化
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.#ctor">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.#ctor(`0)">
            <summary>
            返回参数序列化
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterBinarySerializer`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1">
            <summary>
            返回参数序列化
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.#ctor">
            <summary>
            返回参数序列化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.#ctor(`0)">
            <summary>
            返回参数序列化
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.Serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSimpleSerializer`1.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
            <returns>目标对象</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.BeforePersistenceMethodParameter">
            <summary>
            持久化之前检查参数的调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.clearClone">
            <summary>
            清除信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.Clone(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32)">
            <summary>
            复制调用方法与参数信息
            </summary>
            <param name="index"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.Deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.Deserialize(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输入参数反序列化（初始化加载持久化数据）
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.PersistenceSerialize``1(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,``0@)">
            <summary>
            持久化序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializer"></param>
            <param name="method"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.Deserialize``1(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,``0@)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="method"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputMethodParameter.Deserialize``1(AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte}@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,``0@)">
            <summary>
            输入参数反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="buffer"></param>
            <param name="method"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode">
            <summary>
            服务基础操作接口方法映射枚举
            </summary>
            <summary>
            服务基础操作接口方法映射枚举
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.RemoveNodeByKey(System.String)">
            <summary>
            删除节点
            </summary>
            <param name="key">节点全局关键字</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.CreateManyHashBitMapClientFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="size">位图大小（位数量）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.CreateManyHashBitMapFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="size">位图大小（位数量）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.CreateIdentityGeneratorNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int64)">
            <summary>
            创建 64 位自增ID 节点 IdentityGeneratorNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="identity">起始分配 ID</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode.CreateBitmapNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.UInt32)">
            <summary>
            创建位图节点 BitmapNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="capacity">二进制位数量</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1">
            <summary>
            获取快照对象之前检查快照对象
            </summary>
            <typeparam name="T">快照对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1.value">
            <summary>
            快照数据对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1.#ctor(`0)">
            <summary>
            获取快照对象之前检查快照对象
            </summary>
            <param name="value">快照数据对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1.Get">
            <summary>
            获取快照对象之前检查快照对象
            </summary>
            <returns>快照数据对象</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1.GetNotNull">
            <summary>
            获取快照对象之前检查快照对象
            </summary>
            <returns>快照数据对象</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1.NoCheck">
            <summary>
            获取快照对象不检查快照对象状态，强制获取数据对象，仅用于创建快照对象集合与非持久化 API 逻辑，持久化 API 逻辑中应该使用 Get 方法）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1.NoCheckNotNull">
            <summary>
            获取快照对象不检查快照对象状态，强制获取数据对象，仅用于创建快照对象集合与非持久化 API 逻辑，持久化 API 逻辑中应该使用 Get 方法）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject{`0}">
            <summary>
            隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject`1.op_Implicit(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject{`0})~`0">
            <summary>
            隐式转换（获取快照对象之前检查快照对象）
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1.nodeIndex">
            <summary>
            请求节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1.parameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1.serverCallback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1.callback">
            <summary>
            客户端回调委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}})">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="parameter">调用方法与参数信息</param>
            <param name="callback">客户端回调委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            队列节点回调设置结果
            </summary>
            <param name="responseParameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode.Create``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,``1,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{``0}})">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="PT"></typeparam>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用参数</param>
            <param name="callback">客户端回调委托</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNodeCallback`1">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNodeCallback`1.node">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNodeCallback`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode{`0})">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="node">本地服务调用节点方法队列节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNodeCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNodeCallback`1.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            同步回调
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.nodeIndex">
            <summary>
            请求节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.parameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.serverCallback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.callback">
            <summary>
            客户端回调委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult})">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="parameter">调用方法与参数信息</param>
            <param name="callback">客户端回调委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            队列节点回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode.Create``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,``0,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult})">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用参数</param>
            <param name="callback">客户端回调委托</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNodeCallback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNodeCallback.node">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNodeCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode)">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="node">本地服务调用节点方法队列节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNodeCallback.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNodeCallback.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            同步回调
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.methodIndex">
            <summary>
            调用方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.nodeIndex">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.serverCallback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.callback">
            <summary>
            客户端回调委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}})">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">客户端回调委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            队列节点回调设置结果
            </summary>
            <param name="responseParameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}},System.Boolean)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">客户端回调委托</param>
            <param name="isWriteQueue"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNodeCallback`1">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNodeCallback`1.node">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNodeCallback`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode{`0})">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="node">本地服务调用节点方法队列节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNodeCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNodeCallback`1.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            同步回调
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.methodIndex">
            <summary>
            调用方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.nodeIndex">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.serverCallback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.callback">
            <summary>
            客户端回调委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult})">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">客户端回调委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            队列节点回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult},System.Boolean)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">客户端回调委托</param>
            <param name="isWriteQueue"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNodeCallback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNodeCallback.node">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNodeCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode)">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="node">本地服务调用节点方法队列节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNodeCallback.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNodeCallback.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            同步回调
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode`1">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode`1.parameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode`1.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode`1.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}})">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="parameter">调用方法与参数信息</param>
            <param name="callback">回调委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}})">
            <summary>
            调用状态错误
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="result"></param>
            <param name="callback">回调委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode`1.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode.Create``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,``1,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{``0}})">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="PT"></typeparam>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用参数</param>
            <param name="callback">回调委托</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNode`1">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNode`1.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNode`1.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNode`1.methodIndex">
            <summary>
            调用方法编号
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}},System.Boolean)">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">回调委托</param>
            <param name="isWriteQueue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNode`1.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNode`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}},System.Boolean)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">回调委托</param>
            <param name="isWriteQueue"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.callback">
            <summary>
            回调委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.isSynchronousCallback">
            <summary>
            是否 IO 线程同步回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.#ctor(System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}},System.Boolean)">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="callback">回调委托</param>
            <param name="isSynchronousCallback">是否 IO 线程同步回调</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.CancelKeep(AutoCSer.Net.CommandClientReturnTypeEnum,System.Exception)">
            <summary>
            取消保持回调命令
            </summary>
            <param name="returnType"></param>
            <param name="exception"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.callbackResult(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0})">
            <summary>
            回调操作
            </summary>
            <param name="reuslt"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.callbackTask(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0})">
            <summary>
            回调任务操作
            </summary>
            <param name="reuslt"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.callbackResponseParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter@)">
            <summary>
            返回值回调
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.VirtualCallbackCancelKeep(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter)">
            <summary>
            返回值回调并结束回调
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.VirtualCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter)">
            <summary>
            返回值回调
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.Callback(System.Collections.Generic.IEnumerable{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter},System.Boolean)">
            <summary>
            返回数据集合
            </summary>
            <param name="values"></param>
            <param name="isCancel">回调完成之后是否关闭</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackNodeCallback`1.callbackTask(System.Collections.Generic.IEnumerable{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            回调任务操作
            </summary>
            <param name="values"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod">
            <summary>
            生成服务端节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod.Methods">
            <summary>
            节点方法集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod.NodeMethods">
            <summary>
            节点方法信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod.SnapshotMethods">
            <summary>
            快照方法集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[])">
            <summary>
            生成服务端节点方法信息
            </summary>
            <param name="methods">节点方法集合</param>
            <param name="nodeMethods">节点方法信息集合</param>
            <param name="snapshotTypes">快照数据类型集合</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo">
            <summary>
            节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo.LoadPersistenceMethodIndex">
            <summary>
            冷启动加载持久化方法编号
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo.#ctor(System.Int32)">
            <summary>
            节点方法信息
            </summary>
            <param name="loadPersistenceMethodIndex">冷启动加载持久化方法编号</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo">
            <summary>
            生成服务端节点快照方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo.MethodArrayIndex">
            <summary>
            方法数组索引位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo.SnapshotType">
            <summary>
            快照数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo.SerializeDelegate">
            <summary>
            快照序列化委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo.#ctor(System.Int32,System.Type,System.Delegate)">
            <summary>
            生成服务端节点快照方法信息
            </summary>
            <param name="methodArrayIndex"></param>
            <param name="snapshotType"></param>
            <param name="serializeDelegate"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodInfo">
            <summary>
            快照方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodInfo.Type">
            <summary>
            快照数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodInfo.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodInfo.SerializeDelegate">
            <summary>
            快照序列化委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodInfo.#ctor(System.Type,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,System.Delegate)">
            <summary>
            快照方法信息
            </summary>
            <param name="type">快照数据类型</param>
            <param name="method">服务端节点方法</param>
            <param name="serializeDelegate">快照序列化委托</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile">
            <summary>
            持久化文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile.RebuildPosition">
            <summary>
            持久化流重建起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile.FileInfo">
            <summary>
            持久化文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile.CallbackExceptionPositionFileInfo">
            <summary>
            持久化回调异常位置文件信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile.comparer(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile)">
            <summary>
            文件排序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile.Comparer">
            <summary>
            文件排序
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceTypeEnum">
            <summary>
            持久化类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceTypeEnum.MemoryDatabase">
            <summary>
            常规模式，数据库冷启动时加载历史数据恢复内存数据状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceTypeEnum.ScanPersistence">
            <summary>
            扫描存档模式，按照时间顺序加载所有历史数据，用于快速存档模式（主体数据不设置快照持久化的场景）的离线数据的迁移等操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ScanPersistenceServiceLoader">
            <summary>
            扫描存档模式数据加载
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ScanPersistenceServiceLoader.persistenceFileInfo">
            <summary>
            持久化文件信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ScanPersistenceServiceLoader.persistenceFileName">
            <summary>
            日志流持久化文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ScanPersistenceServiceLoader.persistenceCallbackExceptionPositionFileInfo">
            <summary>
            持久化回调异常位置文件信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ScanPersistenceServiceLoader.persistenceCallbackExceptionPositionFileName">
            <summary>
            持久化回调异常位置文件名称
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ScanPersistenceServiceLoader.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            日志流持久化内存数据库服务端数据加载
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ScanPersistenceServiceLoader.Load(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            加载数据
            </summary>
            <param name="persistenceFileInfo"></param>
            <param name="persistenceCallbackExceptionPositionFileInfo"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeTypeAttribute">
            <summary>
            服务端节点类型配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeTypeAttribute.MethodParameterCreatorMethodName">
            <summary>
            创建调用方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeTypeAttribute.GetServerNodeCreatorMethodName">
            <summary>
            获取生成服务端节点方法信息方法名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeTypeAttribute.MethodIndexEnumType">
            <summary>
            方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeTypeAttribute.MethodParameterCreatorType">
            <summary>
            创建调用方法与参数信息类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeTypeAttribute.IsMethodParameterCreator">
            <summary>
            是否创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeTypeAttribute.#ctor(System.Type,System.Type,System.Boolean)">
            <summary>
            服务端节点类型配置
            </summary>
            <param name="methodIndexEnumType">方法序号映射枚举类型</param>
            <param name="methodParameterCreatorType">创建调用方法与参数信息类型</param>
            <param name="isMethodParameterCreator">是否创建调用方法与参数信息</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1">
            <summary>
            支持快照接口的服务端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1.snapshots">
            <summary>
            快照接口集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,`0,System.Boolean)">
            <summary>
            支持快照接口的服务端节点
            </summary>
            <param name="service"></param>
            <param name="index"></param>
            <param name="key">节点全局关键字</param>
            <param name="target"></param>
            <param name="isPersistence">默认为 true 表示持久化为数据库，设置为 false 为纯内存模式在重启服务时数据将丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1.getSnapshots(`0)">
            <summary>
            获取快照接口集合
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1.checkNewTarget(`0)">
            <summary>
            检查操作节点对象是否实现快照接口
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1.CloseRebuild">
            <summary>
            关闭重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1.GetSnapshotArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerSnapshotNode`1.Rebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder)">
            <summary>
            持久化重建
            </summary>
            <param name="rebuilder"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallbackTypeEnum">
            <summary>
            内存数据库回调类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallbackTypeEnum.Load">
            <summary>
            初始化加载数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallbackTypeEnum.NodeDispose">
            <summary>
            释放节点资源
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptySnapshot`1">
            <summary>
            空快照
            </summary>
            <typeparam name="T">快照数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptySnapshot`1.#ctor">
            <summary>
            空快照
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptySnapshot`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptySnapshot`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptySnapshot`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptySnapshot`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptySnapshot`1.Empty">
            <summary>
            空快照
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSetEnumerable256`1">
            <summary>
            256 基分片 快照哈希表快照集合
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSetEnumerable256`1.hashSet">
            <summary>
            256 基分片 快照哈希表
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSetEnumerable256`1.snapshotArray">
            <summary>
            快照哈希表节点数组集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSetEnumerable256`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256{`0})">
            <summary>
            256 基分片 快照哈希表快照集合
            </summary>
            <param name="hashSet">256 基分片 快照哈希表</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSetEnumerable256`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSetEnumerable256`1.GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSetEnumerable256`1.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSetEnumerable256`1.CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1">
            <summary>
            256 基分片 快照哈希表
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.HashSets">
            <summary>
            哈希表
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.Count">
            <summary>
            数据数量
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.Values">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.GetSnapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.Clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.ClearCount">
            <summary>
            清除计数位置信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.Add(`0)">
            <summary>
            添加数据
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.Contains(`0)">
            <summary>
            判断数据是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotHashSet256`1.Remove(`0)">
            <summary>
            删除数据
            </summary>
            <param name="value"></param>
            <returns>是否存在数据</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2">
            <summary>
            256 基分片 快照字典
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="VT"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Dictionarys">
            <summary>
            字典
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Count">
            <summary>
            数据数量
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Item(`0)">
            <summary>
            获取或者设置数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.KeyValues">
            <summary>
            键值对集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Keys">
            <summary>
            关键字集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Values">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.GetKeyValueSnapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.GetBinarySerializeKeyValueSnapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.GetValueSnapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Clear">
            <summary>
            清除数据（保留分片数组）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.ClearCount">
            <summary>
            清除计数位置信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.ClearArray">
            <summary>
            清除分片数组（用于解决数据量较大的情况下 Clear 调用性能低下的问题）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.TryAdd(`0,`1)">
            <summary>
            如果关键字不存在则添加数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否添加数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Set(`0,`1,`1@)">
            <summary>
            设置数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="removeValue">被删除数据</param>
            <returns>是否存在替换的被删除数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.ContainsKey(`0)">
            <summary>
            判断关键字是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.Remove(`0,`1@)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.RemoveKeys(`0[])">
            <summary>
            根据关键字集合删除匹配数据
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.TryGetValue(`0,`1@)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.TryGetValue(`0,`1@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary{`0,`1}@)">
            <summary>
            根据关键字获取数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256`2.GetValueArray(`0[])">
            <summary>
            根据关键字集合获取匹配数据数组
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2">
            <summary>
            256 基分片 快照字典快照集合
            </summary>
            <typeparam name="KT"></typeparam>
            <typeparam name="VT"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.dictionary">
            <summary>
            256 基分片 快照字典
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.snapshotArray">
            <summary>
            快照字典节点数组集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256{`0,`1})">
            <summary>
            256 基分片 快照字典快照集合
            </summary>
            <param name="dictionary">256 基分片 快照字典</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{AutoCSer#BinarySerializeKeyValue{KT,VT}}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{AutoCSer#KeyValue{KT,VT}}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{VT}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`2.CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`1">
            <summary>
            256 基分片 快照字典快照集合
            </summary>
            <typeparam name="VT"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`1.dictionary">
            <summary>
            256 基分片 快照字典
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`1.snapshotArray">
            <summary>
            快照字典节点数组集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionary256{AutoCSer.Memory.HashBytes,`0})">
            <summary>
            256 基分片 快照字典快照集合
            </summary>
            <param name="dictionary">256 基分片 快照字典</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{AutoCSer#BinarySerializeKeyValue{System#Byte[],VT}}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`1.GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`1.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.FragmentSnapshotDictionaryEnumerable256`1.CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IEnumerableSnapshot`1">
            <summary>
            节点快照功能接口
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IEnumerableSnapshot`1.SnapshotEnumerable">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable`1">
            <summary>
            快照集合
            </summary>
            <typeparam name="T">快照对象类星体</typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable`1.SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable`1.GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable`1.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable`1.CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode">
            <summary>
            创建快照克隆接口节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode.Create``1(System.Object)">
            <summary>
            创建快照克隆接口节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode.ReflectionMethodName``1(System.Object)">
            <summary>
            代码生成模板
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode.CreateMethod">
            <summary>
            创建快照克隆接口节点方法信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode`1">
            <summary>
            快照克隆接口节点
            </summary>
            <typeparam name="T">快照数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshot{`0})">
            <summary>
            快照克隆接口节点
            </summary>
            <param name="target">操作节点对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode`1.GetResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode`1.Rebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder,System.Boolean)">
            <summary>
            持久化重建
            </summary>
            <param name="rebuilder"></param>
            <param name="isCreateNode"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneObject`1">
            <summary>
            支持快照数据对象在持久化 API 中手动触发克隆操作的快照数据
            </summary>
            <typeparam name="T">快照对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneObject`1.SnapshotValue">
            <summary>
            快照对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneObject`1.SnapshotClone">
            <summary>
            创建快照对象，默认为 MemberwiseClone 浅克隆，复杂对象需自行定义克隆行为
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneObject`1.CheckSnapshotValue">
            <summary>
            读取对象成员数据或者修改对象成员数据之前检查快照对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneObject`1.checkSnapshotValue">
            <summary>
            读取对象成员数据或者修改对象成员数据之前检查快照对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneObject`1.CancelSnapshotValue">
            <summary>
            取消快照操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneObject`1.GetSnapshotResult(`0[],System.Collections.Generic.ICollection{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject{`0}})">
            <summary>
            获取快照数据信息
            </summary>
            <param name="snapshotArray">预申请快照数据容器</param>
            <param name="values">快照数据集合</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneObject`1.GetSnapshotResult(`0[],System.Collections.Generic.IEnumerable{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject{`0}},System.Int32)">
            <summary>
            获取快照数据信息
            </summary>
            <param name="snapshotArray">预申请快照数据容器</param>
            <param name="values">快照数据集合</param>
            <param name="count">快照数据总数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2">
            <summary>
            快照数据类型转换
            </summary>
            <typeparam name="ST">数据类型</typeparam>
            <typeparam name="T">持久化类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.snapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.getValue">
            <summary>
            数据类型转换委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.getIsSnapshot">
            <summary>
            判断快照是否有效
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.isSnapshot">
            <summary>
            快照是否有效
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable{`0},System.Func{`0,`1},System.Func{System.Boolean})">
            <summary>
            快照数据类型转换
            </summary>
            <param name="snapshot">快照集合</param>
            <param name="getValue">持久化类型</param>
            <param name="getIsSnapshot">持久化类型</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.getSnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCastEmpty`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetEnumerable`1">
            <summary>
            获取快照集合
            </summary>
            <typeparam name="T">快照数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetEnumerable`1.#ctor(System.Func{System.Collections.Generic.IEnumerable{`0}})">
            <summary>
            单值快照
            </summary>
            <param name="getValue">快照数据</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetEnumerable`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValue`1">
            <summary>
            单值快照
            </summary>
            <typeparam name="T">快照数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValue`1.getValue">
            <summary>
            获取快照数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValue`1.value">
            <summary>
            快照数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValue`1.#ctor(System.Func{`0})">
            <summary>
            单值快照
            </summary>
            <param name="getValue">快照数据</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValue`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValue`1.GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValue`1.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValue`1.CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValueEmpty`1">
            <summary>
            单值快照
            </summary>
            <typeparam name="T">快照数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValueEmpty`1.#ctor(System.Func{AutoCSer.KeyValue{System.Boolean,`0}})">
            <summary>
            单值快照
            </summary>
            <param name="getValue">快照数据</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotGetValueEmpty`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotValue`1">
            <summary>
            固定值快照
            </summary>
            <typeparam name="T">快照数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotValue`1.value">
            <summary>
            快照数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotValue`1.#ctor(`0)">
            <summary>
            固定值快照
            </summary>
            <param name="value">快照数据</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotValue`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotValue`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotValue`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotValue`1.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCast`2">
            <summary>
            快照数据类型转换
            </summary>
            <typeparam name="ST">数据类型</typeparam>
            <typeparam name="T">持久化类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCast`2.snapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCast`2.getValue">
            <summary>
            数据类型转换委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCast`2.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable{`0},System.Func{`0,`1})">
            <summary>
            快照数据类型转换
            </summary>
            <param name="snapshot">快照集合</param>
            <param name="getValue">持久化类型</param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCast`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCast`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCast`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotEnumerableCast`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{T}#CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1">
            <summary>
            快照哈希表
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Nodes">
            <summary>
            快照哈希表节点数组
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.ValueSnapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Values">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.#ctor(System.Int32,AutoCSer.ReusableDictionaryGroupTypeEnum)">
            <summary>
            快照哈希表
            </summary>
            <param name="capacity">容器初始化大小</param>
            <param name="groupType">可重用字典重组操作类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.ClearArray">
            <summary>
            清理数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.changeIndex(System.Int32)">
            <summary>
            尝试修改访问节点索引位置
            </summary>
            <param name="nodeIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Contains(`0,System.Boolean)">
            <summary>
            判断是否存在关键字
            </summary>
            <param name="key">关键字</param>
            <param name="isRoll">是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Contains(`0,System.UInt32,System.Boolean)">
            <summary>
            判断是否存在关键字
            </summary>
            <param name="key">关键字</param>
            <param name="hashCode"></param>
            <param name="isRoll">是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Add(`0,System.Boolean)">
            <summary>
            添加数据
            </summary>
            <param name="key">关键字</param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否添加数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Add(`0,System.UInt32,System.Boolean)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="hashCode"></param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否新增数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.resize">
            <summary>
            重组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.Remove(`0,System.UInt32)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <param name="hashCode"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.remove(System.Int32,System.Int32)">
            <summary>
            删除节点
            </summary>
            <param name="nodeIndex"></param>
            <param name="hashIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.RemoveRoll">
            <summary>
            删除滚动索引位置数据
            </summary>
            <returns>是否存在数据，非 Roll 类型也返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet`1.RemoveKeys(`0[])">
            <summary>
            根据关键字集合删除匹配数据
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`1">
            <summary>
            快照字典
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`1.#ctor(System.Int32,AutoCSer.ReusableDictionaryGroupTypeEnum)">
            <summary>
            快照字典
            </summary>
            <param name="capacity">容器初始化大小</param>
            <param name="groupType">可重用字典重组操作类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`1.change(System.Int32,System.Int32,AutoCSer.ReusableHashNode{`0}[])">
            <summary>
            交换节点位置
            </summary>
            <param name="nodeIndex"></param>
            <param name="changeIndex"></param>
            <param name="nodeArray"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`1.resizeHashIndex(AutoCSer.ReusableHashNode{`0}[],AutoCSer.ReusableHashNode{`0}[])">
            <summary>
            重组数据
            </summary>
            <param name="nodes"></param>
            <param name="nodeArray"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`1.resizeHashIndexSort(AutoCSer.ReusableHashNode{`0}[],AutoCSer.ReusableHashNode{`0}[])">
            <summary>
            重组数据
            </summary>
            <param name="nodes"></param>
            <param name="nodeArray"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`1.resizeRoll(AutoCSer.ReusableHashNode{`0}[],System.Int32,AutoCSer.ReusableHashNode{`0}[])">
            <summary>
            重组数据
            </summary>
            <param name="nodes"></param>
            <param name="rollIndex"></param>
            <param name="nodeArray"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`1.add(System.UInt32,`0,AutoCSer.ReusableHashNode{`0}[])">
            <summary>
            新增数据
            </summary>
            <param name="hashCode"></param>
            <param name="value"></param>
            <param name="nodeArray"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2">
            <summary>
            快照字典
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型，必须是只读类型（不允许存在成员变更操作）</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Nodes">
            <summary>
            快照字典节点数组
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.KeyValueSnapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.BinarySerializeKeyValueSnapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.ValueSnapshot">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.KeyValues">
            <summary>
            键值对集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Keys">
            <summary>
            关键字集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Values">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Item(`0)">
            <summary>
            获取或者设置数据
            </summary>
            <param name="key">关键字</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.#ctor(System.Int32,AutoCSer.ReusableDictionaryGroupTypeEnum)">
            <summary>
            快照字典
            </summary>
            <param name="capacity">容器初始化大小</param>
            <param name="groupType">可重用字典重组操作类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Renew(System.Int32)">
            <summary>
            清除所有数据并重建容器
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.ClearArray">
            <summary>
            清理数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.changeIndex(System.Int32)">
            <summary>
            尝试修改访问节点索引位置
            </summary>
            <param name="nodeIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.TryGetValue(`0,`1@,System.Boolean)">
            <summary>
            尝试获取数据
            </summary>
            <param name="key">关键字</param>
            <param name="value">目标数据</param>
            <param name="isRoll">是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否获取成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.TryGetValue(`0,System.UInt32,`1@,System.Boolean)">
            <summary>
            尝试获取数据
            </summary>
            <param name="key">关键字</param>
            <param name="hashCode">哈希值</param>
            <param name="value">目标数据</param>
            <param name="isRoll">是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否获取成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Add(System.UInt32,AutoCSer.BinarySerializeKeyValue{`0,`1})">
            <summary>
            添加数据
            </summary>
            <param name="hashCode">哈希值</param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Set(`0,`1,System.Boolean)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="value"></param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否新增数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Set(`0,System.UInt32,`1,System.Boolean)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="hashCode">哈希值</param>
            <param name="value"></param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否新增数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Set(AutoCSer.BinarySerializeKeyValue{`0,`1}@,System.Boolean)">
            <summary>
            设置数据
            </summary>
            <param name="keyValue"></param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否新增数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Set(AutoCSer.KeyValue{`0,`1}@,System.Boolean)">
            <summary>
            设置数据
            </summary>
            <param name="keyValue"></param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否新增数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.TryAdd(`0,`1,System.Boolean)">
            <summary>
            添加数据
            </summary>
            <param name="key">关键字</param>
            <param name="value"></param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否添加数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.TryAdd(`0,System.UInt32,`1,System.Boolean)">
            <summary>
            添加数据
            </summary>
            <param name="key">关键字</param>
            <param name="value"></param>
            <param name="hashCode">哈希值</param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否添加数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.set(`0,System.UInt32,`1,System.Boolean,System.Boolean)">
            <summary>
            设置数据
            </summary>
            <param name="key">关键字</param>
            <param name="value"></param>
            <param name="hashCode">哈希值</param>
            <param name="isRoll">更新时是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <param name="isAdd"></param>
            <returns>是否新增数据</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.resize">
            <summary>
            重组数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.ContainsKey(`0,System.Boolean)">
            <summary>
            判断是否存在关键字
            </summary>
            <param name="key">关键字</param>
            <param name="isRoll">是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.ContainsKey(`0,System.UInt32,System.Boolean)">
            <summary>
            判断是否存在关键字
            </summary>
            <param name="key">关键字</param>
            <param name="hashCode">哈希值</param>
            <param name="isRoll">是否尝试修改索引位置（用于优先级淘汰策略）</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Remove(`0,System.UInt32)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <param name="hashCode">哈希值</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Remove(`0,`1@)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <param name="value">被删除数据</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.Remove(`0,System.UInt32,`1@)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <param name="hashCode">哈希值</param>
            <param name="value">被删除数据</param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.remove(System.Int32,System.Int32)">
            <summary>
            删除节点
            </summary>
            <param name="nodeIndex"></param>
            <param name="hashIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.RemoveRoll">
            <summary>
            删除滚动索引位置数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.RemoveRoll(AutoCSer.BinarySerializeKeyValue{`0,`1}@)">
            <summary>
            删除滚动索引位置数据
            </summary>
            <param name="value">被删除数据</param>
            <returns>是否存在数据，非 Roll 类型也返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.RemoveRoll(`1@)">
            <summary>
            删除滚动索引位置数据
            </summary>
            <param name="value">被删除数据</param>
            <returns>是否存在数据，非 Roll 类型也返回 false</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.GetValueArray(`0[])">
            <summary>
            根据关键字集合获取匹配数据数组
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary`2.RemoveKeys(`0[])">
            <summary>
            根据关键字集合删除匹配数据
            </summary>
            <param name="keys"></param>
            <returns>删除关键字数量</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1">
            <summary>
            快照哈希表节点数组
            </summary>
            <typeparam name="T">关键字类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.hashSet">
            <summary>
            快照哈希表
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.Nodes">
            <summary>
            快照哈希表节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.snapshotNodes">
            <summary>
            快照数据集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.newSnapshotNodes">
            <summary>
            超预申请快照数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.snapshotCount">
            <summary>
            快照数据数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSet{`0},System.Int32)">
            <summary>
            快照哈希表节点数组
            </summary>
            <param name="dictionary"></param>
            <param name="capacity"></param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.TrySetSnapshotValue(System.Int32)">
            <summary>
            设置快照数据
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotHashSetNodeArray`1.ClearArray">
            <summary>
            清理数组
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2">
            <summary>
            快照字典节点数组
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.dictionary">
            <summary>
            快照字典
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.Nodes">
            <summary>
            快照字典节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.snapshotNodes">
            <summary>
            快照数据集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.newSnapshotNodes">
            <summary>
            超预申请快照数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.snapshotCount">
            <summary>
            快照数据数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionary{`0,`1},System.Int32)">
            <summary>
            快照字典节点数组
            </summary>
            <param name="dictionary"></param>
            <param name="capacity"></param>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{AutoCSer#KeyValue{KT,VT}}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{AutoCSer#BinarySerializeKeyValue{KT,VT}}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#ISnapshotEnumerable{VT}#SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.SetValue(System.Int32,`1)">
            <summary>
            设置数据
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.TrySetSnapshotKeyValue(System.Int32)">
            <summary>
            设置快照数据
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`2.ClearArray">
            <summary>
            清理数组
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`1">
            <summary>
            快照字典节点数组
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`1.array">
            <summary>
            快照字典节点数组
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`1.SnapshotValues">
            <summary>
            获取快照对象集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable{AutoCSer.BinarySerializeKeyValue{AutoCSer.Memory.HashBytes,`0}})">
            <summary>
            快照字典节点数组
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`1.GetSnapshotValueArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`1.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionaryNodeArray`1.CloseSnapshot">
            <summary>
            关闭快照操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode">
            <summary>
            快照接口节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create``1(System.Object)">
            <summary>
            快照接口节点
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.CreateMethod">
            <summary>
            创建快照接口节点方法信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode`1">
            <summary>
            快照接口节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode`1.target">
            <summary>
            操作节点对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode`1.values">
            <summary>
            快照集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IEnumerableSnapshot{`0})">
            <summary>
            快照接口节点
            </summary>
            <param name="target">操作节点对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode`1.Close">
            <summary>
            关闭重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode`1.GetArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode`1.GetResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode`1.Rebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder,System.Boolean)">
            <summary>
            持久化重建
            </summary>
            <param name="rebuilder"></param>
            <param name="isCreateNode"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotArrayNode`1">
            <summary>
            快照节点
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotArrayNode`1.Value">
            <summary>
            关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotArrayNode`1.IsSnapshot">
            <summary>
            是否存在快照数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotArrayNode`1.TrySet(`0)">
            <summary>
            设置快照数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionarySnapshotNode`2">
            <summary>
            快照字典节点
            </summary>
            <typeparam name="KT">关键字类型</typeparam>
            <typeparam name="VT">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionarySnapshotNode`2.key">
            <summary>
            关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionarySnapshotNode`2.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionarySnapshotNode`2.BinarySerializeKeyValue">
            <summary>
            键值对
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionarySnapshotNode`2.KeyValue">
            <summary>
            键值对
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionarySnapshotNode`2.IsSnapshot">
            <summary>
            是否存在快照数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionarySnapshotNode`2.TrySet(`0,`1)">
            <summary>
            设置快照数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotDictionarySnapshotNode`2.TrySet(AutoCSer.BinarySerializeKeyValue{`0,`1}@)">
            <summary>
            设置快照数据
            </summary>
            <param name="keyValue"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethod">
            <summary>
            快照方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethod.Type">
            <summary>
            快照数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethod.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethod.NodeMethod">
            <summary>
            服务端节点方法信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethod.#ctor(System.Type,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod)">
            <summary>
            快照方法信息
            </summary>
            <param name="type">快照数据类型</param>
            <param name="method">服务端节点方法</param>
            <param name="nodeMethod">服务端节点方法信息</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode">
            <summary>
            快照接口节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.customObject">
            <summary>
            自定义对象，用于预生成辅助数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.#ctor">
            <summary>
            快照接口节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Close">
            <summary>
            关闭重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.GetArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.GetResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Rebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder,System.Boolean)">
            <summary>
            持久化重建
            </summary>
            <param name="rebuilder"></param>
            <param name="isCreateNode"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Check(System.Type)">
            <summary>
            检查类型是否存在快照功能接口
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create``1(System.Object)">
            <summary>
            快照接口节点
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.CreateMethod">
            <summary>
            创建快照接口节点方法信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1">
            <summary>
            快照接口节点
            </summary>
            <typeparam name="T">快照数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.target">
            <summary>
            操作节点对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.array">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.result">
            <summary>
            快照数据信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshot{`0})">
            <summary>
            快照接口节点
            </summary>
            <param name="target">操作节点对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.Close">
            <summary>
            关闭重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.GetArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.GetResult">
            <summary>
            获取快照数据集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.rebuild(AutoCSer.LeftArray{`0}@,AutoCSer.LeftArray{`0}@)">
            <summary>
            获取持久化重建数据
            </summary>
            <param name="array"></param>
            <param name="newArray"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode`1.Rebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder,System.Boolean)">
            <summary>
            持久化重建
            </summary>
            <param name="rebuilder"></param>
            <param name="isCreateNode"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1">
            <summary>
            快照数据信息
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.Count">
            <summary>
            预申请快照数据容器真实数据数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.Array">
            <summary>
            超预申请快照数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.#ctor(System.Int32)">
            <summary>
            快照数据信息
            </summary>
            <param name="count">预申请快照数据容器真实数据数量</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.#ctor(`0[],`0)">
            <summary>
            快照数据信息
            </summary>
            <param name="snapshotArray">预申请快照数据容器</param>
            <param name="value">快照数据集合</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.#ctor(System.Int32,System.Int32)">
            <summary>
            快照数据信息
            </summary>
            <param name="valueCount">数据数量</param>
            <param name="snapshotArrayLength">预申请快照数据容器大小</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.#ctor(System.Int32,`0[])">
            <summary>
            快照数据信息
            </summary>
            <param name="count">预申请快照数据容器真实数据数量</param>
            <param name="array">超预申请快照数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.#ctor(`0[],System.Collections.Generic.ICollection{`0})">
            <summary>
            快照数据信息
            </summary>
            <param name="snapshotArray">预申请快照数据容器</param>
            <param name="values">快照数据集合</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.#ctor(`0[],System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            快照数据信息
            </summary>
            <param name="snapshotArray">预申请快照数据容器</param>
            <param name="values">快照数据集合</param>
            <param name="count">快照数据总数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.Add(`0[],System.Collections.Generic.IEnumerable{`0})">
            <summary>
            添加快照数据集合
            </summary>
            <param name="snapshotArray"></param>
            <param name="values"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotResult`1.Add(`0[],`0)">
            <summary>
            添加快照数据
            </summary>
            <param name="snapshotArray">预申请快照数据容器</param>
            <param name="value">快照数据</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1">
            <summary>
            服务端节点上下文
            </summary>
            <typeparam name="T">服务节点类型</typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseService">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseNode">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseCallQueue">
            <summary>
            服务端执行队列
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseNodeIsRemoved">
            <summary>
            判断节点是否已经被移除或者数据库服务是否已经释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.SetContext(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            服务端节点上下文
            </summary>
            <param name="node">服务端节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseServiceLoaded">
            <summary>
            初始化加载完毕处理
            </summary>
            <returns>加载完毕替换的新节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseServiceNodeOnRemoved">
            <summary>
            节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.StreamPersistenceMemoryDatabaseServiceDisposable">
            <summary>
            数据库服务关闭操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`1.getServerNode(System.String,System.Boolean)">
            <summary>
            根据节点全局关键字获取服务端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="isSnapshotTransaction">默认为 true 表示需要建立快照事务关系，比如在持久化 API 中同步更新其它节点状态</param>
            <returns>服务端节点，失败返回 null</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`2">
            <summary>
            服务端节点上下文
            </summary>
            <typeparam name="T">服务节点类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ContextNode`2.SetSnapshotResult(AutoCSer.LeftArray{`1}@,AutoCSer.LeftArray{`1}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptyCommandServerCallback`1">
            <summary>
            空回调
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptyCommandServerCallback`1.Callback(`0)">
            <summary>
            空回调
            </summary>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptyCommandServerCallback`1.SynchronousCallback(`0)">
            <summary>
            同步回调
            </summary>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EmptyCommandServerCallback`1.Default">
            <summary>
            空回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode">
            <summary>
            服务端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode.StreamPersistenceMemoryDatabaseServiceNodeOnRemoved">
            <summary>
            节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode.StreamPersistenceMemoryDatabaseServiceDisposable">
            <summary>
            数据库服务关闭操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode`1">
            <summary>
            服务端节点接口
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode`1.SetContext(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            设置节点上下文
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode`1.StreamPersistenceMemoryDatabaseServiceLoaded">
            <summary>
            初始化加载完毕处理
            </summary>
            <returns>加载完毕替换的新节点</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshot`1">
            <summary>
            节点快照功能接口
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshot`1.GetSnapshotCapacity(System.Object@)">
            <summary>
            获取快照数据集合容器大小，用于预申请快照数据容器
            </summary>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据集合容器大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshot`1.GetSnapshotResult(`0[],System.Object)">
            <summary>
            获取快照数据集合，如果数据对象可能被修改则应该返回克隆数据对象防止建立快照期间数据被修改
            </summary>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <param name="customObject">自定义对象，用于预生成辅助数据</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshot`1.SetSnapshotResult(AutoCSer.LeftArray{`0}@,AutoCSer.LeftArray{`0}@)">
            <summary>
            持久化之前重组快照数据
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method">
            <summary>
            服务端节点方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.Index">
            <summary>
            方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.BeforePersistenceMethodIndex">
            <summary>
            持久化之前参数检查方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.CallType">
            <summary>
            方法调用类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.Flags">
            <summary>
            服务端节点方法标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsPersistence">
            <summary>
            是否持久化（涉及写入操作则需要持久化）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsClientCall">
            <summary>
            是否允许客户端调用，否则为服务端内存调用方法
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsSimpleDeserializeParamter">
            <summary>
            是否简单反序列化输入数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.IsIgnorePersistenceCallbackException">
            <summary>
            是否忽略持久化回调异常，节点方法必须保证异常时还原恢复内存数据状态，必须关心 new 产生的内存不足异常，在修改数据以前应该将完成所有 new 操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method.#ctor(System.Int32,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            服务端节点方法
            </summary>
            <param name="index">方法编号</param>
            <param name="beforePersistenceMethodIndex">持久化之前参数检查方法编号</param>
            <param name="callType">方法调用类型</param>
            <param name="flags">服务端节点方法标记</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService">
            <summary>
            日志流持久化内存数据库本地服务
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode})">
            <summary>
            日志流持久化内存数据库本地服务
            </summary>
            <param name="config">日志流持久化内存数据库服务端配置</param>
            <param name="createServiceNode">创建服务基础操作节点委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode},System.Int32)">
            <summary>
            日志流持久化内存数据库本地服务（支持并发读取操作）
            </summary>
            <param name="config">日志流持久化内存数据库服务端配置</param>
            <param name="createServiceNode">创建服务基础操作节点委托</param>
            <param name="maxConcurrency">最大读取操作并发数量，小于等于 0 表示处理器数量减去设置值（比如处理器数量为 4，并发数量设置为 -1，则读取并发数量为 4 - 1 = 3）</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService.CreateClient``1">
            <summary>
            创建日志流持久化内存数据库本地服务客户端
            </summary>
            <typeparam name="T">服务基础操作客户端接口类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService.CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService.CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService.InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService.AppendQueueNode``1(System.Func{``0})">
            <summary>
            添加非持久化队列任务（不修改内存数据状态）
            </summary>
            <typeparam name="T">获取结果数据类型</typeparam>
            <param name="getResult">获取结果数据委托</param>
            <returns>队列节点</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCustomQueueNode`1">
            <summary>
            日志流持久化内存数据库本地服务队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCustomQueueNode`1.getResult">
            <summary>
            获取结果数据委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCustomQueueNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService,System.Func{`0},AutoCSer.Net.CommandServer.ReadWriteNodeTypeEnum)">
            <summary>
            日志流持久化内存数据库本地服务队列节点
            </summary>
            <param name="service"></param>
            <param name="getResult">获取结果数据委托</param>
            <param name="queueNodeType"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCustomQueueNode`1.RunTask">
            <summary>
            获取结果数据
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceRebuild">
            <summary>
            本地服务重建持久化文件
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceRebuild.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService)">
            <summary>
            本地服务重建持久化文件
            </summary>
            <param name="service">日志流持久化内存数据库本地服务</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceRebuild.RunTask">
            <summary>
            重建持久化文件
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode`1">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode`1.parameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode`1.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode`1.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter)">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="parameter">调用方法与参数信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            调用状态错误
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="result"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode`1.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode.Create``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,``1)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="PT"></typeparam>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode`1">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode`1.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode`1.methodIndex">
            <summary>
            调用方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode`1.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Boolean)">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="isWriteQueue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode`1.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Boolean)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="isWriteQueue"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback`1">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback`1.Response">
            <summary>
            本地服务调用节点方法队列节点回调输出
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback`1.#ctor(System.Boolean)">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="isSynchronousCallback">是否 IO 线程同步回调</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback`1.CancelKeep(AutoCSer.Net.CommandClientReturnTypeEnum,System.Exception)">
            <summary>
            取消保持回调命令
            </summary>
            <param name="returnType"></param>
            <param name="exception"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback`1.callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter@)">
            <summary>
            返回值回调
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback`1.VirtualCallbackCancelKeep(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter)">
            <summary>
            返回值回调并结束回调
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback`1.VirtualCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter)">
            <summary>
            返回值回调
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNodeCallback`1.Callback(System.Collections.Generic.IEnumerable{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter},System.Boolean)">
            <summary>
            返回数据集合
            </summary>
            <param name="values"></param>
            <param name="isCancel">回调完成之后是否关闭</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode.parameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter)">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="parameter">调用方法与参数信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode.Create``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,``0)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.nodeIndex">
            <summary>
            请求节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.parameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter)">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="parameter">调用方法与参数信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            调用状态错误
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="result"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            队列节点回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode.Create``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,``0)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNodeCallback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNodeCallback.node">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNodeCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode)">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="node">本地服务调用节点方法队列节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNodeCallback.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNodeCallback.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            同步回调
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1.nodeIndex">
            <summary>
            请求节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1.parameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="parameter">调用方法与参数信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            调用状态错误
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="result"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            队列节点回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode.Create``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,``1)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="PT"></typeparam>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="parameter">调用参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1.methodIndex">
            <summary>
            调用方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1.nodeIndex">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Boolean)">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="isWriteQueue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            队列节点回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Boolean)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="isWriteQueue"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode.clientNode">
            <summary>
            本地服务客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode.methodIndex">
            <summary>
            调用方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode.nodeIndex">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode.callback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Boolean)">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="isWriteQueue"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode.RunTask">
            <summary>
            调用节点方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            队列节点回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode,System.Int32,System.Boolean)">
            <summary>
            创建本地服务调用节点方法队列节点
            </summary>
            <param name="clientNode">本地服务客户端节点</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="isWriteQueue"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNodeCallback`1">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNodeCallback`1.node">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNodeCallback`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode{`0})">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="node">本地服务调用节点方法队列节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNodeCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNodeCallback`1.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            同步回调
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNodeCallback`1">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNodeCallback`1.node">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNodeCallback`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode{`0})">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="node">本地服务调用节点方法队列节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNodeCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNodeCallback`1.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            同步回调
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNodeCallback">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNodeCallback.node">
            <summary>
            本地服务调用节点方法队列节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNodeCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode)">
            <summary>
            本地服务调用节点方法队列节点回调对象
            </summary>
            <param name="node">本地服务调用节点方法队列节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNodeCallback.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            回调设置结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNodeCallback.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            同步回调
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig">
            <summary>
            日志流持久化内存数据库本地服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig.OnlyLocalService">
            <summary>
            默认为 true 表示仅支持本地服务，否则为混合服务模式
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig.QueueTimeoutSeconds">
            <summary>
            同步队列任务执行超时检查秒数，默认为 0 表示不检查，用于检查队列任务是否存在长时间阻塞或者死锁问题
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig.Create">
            <summary>
            创建默认日志流持久化内存数据库服务端（主服务节点）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig.Create``1(System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService,``0})">
            <summary>
            日志流持久化内存数据库服务端（主服务节点）
            </summary>
            <typeparam name="T">节点服务接口类型</typeparam>
            <param name="createServiceNode"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig.Create(System.Int32)">
            <summary>
            创建默认日志流持久化内存数据库服务端（支持并发读取操作）
            </summary>
            <param name="maxConcurrency">最大读取操作并发数量，小于等于 0 表示处理器数量减去设置值（比如处理器数量为 4，并发数量设置为 -1，则读取并发数量为 4 - 1 = 3）</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceConfig.Create``1(System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService,``0},System.Int32)">
            <summary>
            日志流持久化内存数据库服务端（支持并发读取操作）
            </summary>
            <typeparam name="T">节点服务接口类型</typeparam>
            <param name="createServiceNode"></param>
            <param name="maxConcurrency">最大读取操作并发数量，小于等于 0 表示处理器数量减去设置值（比如处理器数量为 4，并发数量设置为 -1，则读取并发数量为 4 - 1 = 3）</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceGetNodeIndex">
            <summary>
            本地服务获取节点标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceGetNodeIndex.key">
            <summary>
            节点全局关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceGetNodeIndex.nodeInfo">
            <summary>
            节点信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceGetNodeIndex.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            本地服务获取节点标识
            </summary>
            <param name="service">日志流持久化内存数据库本地服务</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceGetNodeIndex.RunTask">
            <summary>
            获取节点标识
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1">
            <summary>
            日志流持久化内存数据库本地服务队列节点 await T
            </summary>
            <typeparam name="T">返回结果类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.service">
            <summary>
            日志流持久化内存数据库本地服务
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.continuation">
            <summary>
            异步回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.IsCompleted">
            <summary>
            完成状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalService)">
            <summary>
            本地服务获取节点标识
            </summary>
            <param name="service">日志流持久化内存数据库本地服务</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.completed(System.Boolean)">
            <summary>
            完成处理
            </summary>
            <param name="isSynchronousCallback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.completed">
            <summary>
            完成处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.System#Runtime#CompilerServices#INotifyCompletion#OnCompleted(System.Action)">
            <summary>
            设置异步回调
            </summary>
            <param name="continuation"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.GetAwaiter">
            <summary>
            获取 await
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.AppendWrite">
            <summary>
            添加到队列
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.GetResult">
            <summary>
            获取命令调用结果
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode`1.Wait">
            <summary>
            await 支持
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile">
            <summary>
            删除历史持久化文件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.persistenceFileName">
            <summary>
            持久化文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.directory">
            <summary>
            持久化文件目录
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.switchDirectory">
            <summary>
            重建持久化文件切换目录
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase)">
            <summary>
            删除历史持久化文件
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.Remove(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase)">
            <summary>
            删除文件
            </summary>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.remove(System.IO.DirectoryInfo,System.DateTime)">
            <summary>
            删除文件
            </summary>
            <param name="directory"></param>
            <param name="removeTime"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.Remove(AutoCSer.Threading.TaskRunTimer)">
            <summary>
            定时删除文件
            </summary>
            <param name="runTimer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile.Cancel">
            <summary>
            取消任务
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute">
            <summary>
            服务端节点方法自定义属性
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.MethodIndex">
            <summary>
            自定义方法序号，用于客户端识别服务端 API 的路由，同一个节点接口中不允许重复，默认小于 0 表示采用自动匹配模式，自动匹配模式不能保证服务端修改升级以后旧的客户端调用路由能与新的服务端路由匹配。存在自定义需求时不要使用巨大的数据，建议从 0 开始，因为它会是某个数组的大小。
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.SnapshotMethodSort">
            <summary>
            快照数据恢复方法执行顺序，默认为 0 表示非快照数据恢复方法，每一个快照接口类型仅允许定义一个 SnapshotMethodSort 不为 0 的 API 方法作为快照数据恢复的 API 方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsWriteQueue">
            <summary>
            默认为 false 表示非持久化 API 调用读操作队列；设置为 true 则强制调用写操作队列（比如设置回调等仅修改非持久化内存数据的场景）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsPersistence">
            <summary>
            默认为 true 表示调用需要持久化，如果调用不涉及数据变更操作则应该手动设置为 false 避免垃圾数据被持久化（只有在节点支持快照的场景下才有效，不支持快照的节点不支持持久化，即使设置为 true 也无效）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsClientCall">
            <summary>
            默认为 true 表示允许客户端调用，否则为服务端内存调用方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsSendOnly">
            <summary>
            默认为 false 表示服务端应答客户端请求，设置为 true 表示服务端仅接收请求不做应答操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsCallbackClient">
            <summary>
            默认为 false 表示生成 await 客户端 API，设置为 true 则生成委托回调客户端 API
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.IsIgnorePersistenceCallbackException">
            <summary>
            默认为 false 表示持久化回调异常时将节点设置为不可用状态，设置为 true 则在 Node.IsPersistenceCallbackChanged 为 false 时避免该问题，但是节点方法必须保证异常时还原恢复内存数据状态，必须关心 new 产生的内存不足异常，在修改数据以前应该将完成所有 new 操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute.Default">
            <summary>
            默认节点方法自定义属性
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1">
            <summary>
            方法调用回调包装
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.callback">
            <summary>
            服务接口回调委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Reserve">
            <summary>
            保留
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.flag">
            <summary>
            服务端节点方法标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.isResponseParameter">
            <summary>
            返回值类型是否 ResponseParameter
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.isCallback">
            <summary>
            是否已经回调操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.#ctor">
            <summary>
            无回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.#ctor(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            方法调用回调包装
            </summary>
            <param name="callback">服务接口回调委托</param>
            <param name="flag">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter)">
            <summary>
            成功回调
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Callback(`0)">
            <summary>
            成功回调
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.SynchronousCallback(`0)">
            <summary>
            成功回调
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            失败回调
            </summary>
            <param name="state">失败状态</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.SynchronousCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            失败回调
            </summary>
            <param name="state">失败状态</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.GetCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback{`0})">
            <summary>
            获取服务接口回调委托
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.CreateDelegate">
            <summary>
            创建方法调用回调包装对象委托类型
            </summary>
            <param name="callback"></param>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Create(AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <param name="callback"></param>
            <param name="flag">服务端节点方法标记</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter)">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <param name="methodParameter"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback`1.NullCallback">
            <summary>
            无回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter">
            <summary>
            调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceStartIndex">
            <summary>
            持久化输出流起始位置，用于记录当前输出数据长度
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.EncodePersistenceStartIndex">
            <summary>
            编码持久化输出流起始位置，用于记录编码后的数据长度
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.Node">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.persistenceCallbackExceptionPosition">
            <summary>
            持久化异常位置信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.IsPersistenceCallback">
            <summary>
            持久化回调是否成功
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.Clone">
            <summary>
            复制调用方法与参数信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceCallback">
            <summary>
            持久化回调
            </summary>
            <returns>下一个参数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceCallbackIgnoreException(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化异常回调
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer,System.Int64)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <param name="persistenceCallbackExceptionPosition"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.PersistenceSerialize(AutoCSer.BinarySerializer)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.persistenceSerialize(AutoCSer.BinarySerializer,System.Int64)">
            <summary>
            持久化序列化
            </summary>
            <param name="serializer"></param>
            <param name="methodIndex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.SetBeforePersistenceCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject">自定义状态对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetBeforePersistenceCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            获取服务端节点
            </summary>
            <param name="methodParameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1">
            <summary>
            方法调用回调包装
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.callback">
            <summary>
            服务接口回调委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.flag">
            <summary>
            服务端节点方法标记
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.isResponseParameter">
            <summary>
            返回值类型是否 ResponseParameterSerializer
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Reserve">
            <summary>
            保留
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.IsCancelKeepCallback">
            <summary>
            是否已经取消保持回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.#ctor">
            <summary>
            无回调
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.#ctor(AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            方法调用回调包装
            </summary>
            <param name="callback">服务接口回调委托</param>
            <param name="flag">服务端节点方法标记</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterSerializer)">
            <summary>
            成功回调
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Callback(`0)">
            <summary>
            成功回调
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.CallbackCancelKeep(`0)">
            <summary>
            成功回调并取消保持回调命令
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Callback(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            成功回调
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.CallbackCancelKeep(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            失败回调
            </summary>
            <param name="state">失败状态</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.CancelKeep">
            <summary>
            取消保持回调命令
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.CreateDelegate">
            <summary>
            创建方法调用回调包装对象委托类型
            </summary>
            <param name="callback"></param>
            <param name="flag">服务端节点方法标记</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Create(AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <param name="callback"></param>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter)">
            <summary>
            创建方法调用回调包装对象
            </summary>
            <param name="methodParameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.Callback(AutoCSer.LeftArray{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{`0}}@,`0)">
            <summary>
            回调并移除失败回调对象
            </summary>
            <param name="callbacks"></param>
            <param name="value"></param>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback`1.NullCallback">
            <summary>
            无回调
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.node">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.pushPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            添加到持久化队列
            </summary>
            <param name="methodParameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallMethodParameter(System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="creator"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallOutputMethodParameter(System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="creator"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallOutputMethodParameter(System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="methodIndex"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputCallbackMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallInputMethodParameter``1(System.Int32,``0@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallInputOutputMethodParameter``1(System.Int32,``0@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createCallInputOutputMethodParameter``1(System.Int32,``0@,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputCallbackMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createSendOnlyMethodParameter``1(System.Int32,``0@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateSendOnlyMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createKeepCallbackMethodParameter(System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateKeepCallbackMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="creator"></param>
            <param name="methodIndex"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.createInputKeepCallbackMethodParameter``1(System.Int32,``0@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateInputKeepCallbackMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator,System.Int32,``0)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <param name="methodIndex"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.MethodParameterCreatorCallMethodName(System.Object[])">
            <summary>
            代码生成模板
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator`1">
            <summary>
            创建调用方法与参数信息，用于服务端自定义持久化调用，调用接口方法会添加到持久化队列
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator`1.Creator">
            <summary>
            创建调用方法与参数信息，用于服务端自定义持久化调用，调用接口方法会添加到持久化队列
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`1">
            <summary>
            创建调用方法与参数信息节点
            </summary>
            <typeparam name="T">服务节点类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`1.methodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`1.StreamPersistenceMemoryDatabaseMethodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`1.SetContext(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            服务端节点上下文
            </summary>
            <param name="node">服务端节点</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`2">
            <summary>
            创建调用方法与参数信息节点
            </summary>
            <typeparam name="T">服务节点类型</typeparam>
            <typeparam name="ST">快照数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`2.methodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`2.StreamPersistenceMemoryDatabaseMethodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreatorNode`2.SetContext(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            服务端节点上下文
            </summary>
            <param name="node">服务端节点</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Index">
            <summary>
            节点索引信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.NodeCreator">
            <summary>
            生成服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Key">
            <summary>
            节点全局关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CreateNodeMethodParameter">
            <summary>
            创建节点参数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SnapshotTransactionNodes">
            <summary>
            快照事务关系节点集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SnapshotTransactionNodeCount">
            <summary>
            快照事务关系节点数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsPersistence">
            <summary>
            是否持久化，设置为 false 为纯内存模式在重启服务时数据将丢失
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.callState">
            <summary>
            节点调用状态
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CallState">
            <summary>
            节点调用状态
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Rebuilding">
            <summary>
            是否重建中，设置为 true 表示忽略持久化回调参数，设置为 false 则需要将回调参数复制添加到待持久化队列中
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsLoadException">
            <summary>
            是否初始化加载执行异常节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsPersistenceCallbackChanged">
            <summary>
            持久化回调是否存在数据更新，节点数据更新以后应该将该状态修改为 true
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.IsRemoved">
            <summary>
            当前节点是否已被移除
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,System.Boolean)">
            <summary>
            服务端节点
            </summary>
            <param name="nodeCreator"></param>
            <param name="index"></param>
            <param name="key">节点全局关键字</param>
            <param name="isPersistence">是否持久化，设置为 false 为纯内存模式在重启服务时数据将丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Loaded">
            <summary>
            初始化加载完毕处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.NodeDispose">
            <summary>
            释放节点资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.OnRemoved">
            <summary>
            服务端节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotTransactionNode(System.String)">
            <summary>
            根据节点全局关键字获取服务端节点
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.AppendSnapshotTransaction(System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            添加快照事务关系节点
            </summary>
            <param name="key"></param>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.appendSnapshotTransaction(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            添加快照事务关系节点
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SetPersistenceCallbackException">
            <summary>
            设置持久化回调错误
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SetLoadException">
            <summary>
            设置初始化加载持久化数据执行异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CreateInputMethodParameter(System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum@)">
            <summary>
            创建方法调用参数信息
            </summary>
            <param name="methodIndex"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Call(System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="methodIndex"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CallOutput(System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="methodIndex"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.KeepCallback(System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter}@)">
            <summary>
            调用节点方法
            </summary>
            <param name="methodIndex"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CloseRebuild">
            <summary>
            关闭重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.CheckSnapshot">
            <summary>
            检查快照重建状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotResult">
            <summary>
            获取快照数据集合
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.Rebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder)">
            <summary>
            持久化重建
            </summary>
            <param name="rebuilder"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotResult``2(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{``0,``1}},AutoCSer.KeyValue{``0,``1}[])">
            <summary>
            获取快照数据集合
            </summary>
            <param name="values"></param>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotResult``2(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{``0,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject{``1}}},AutoCSer.KeyValue{``0,``1}[])">
            <summary>
            获取快照数据集合
            </summary>
            <param name="values"></param>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.GetSnapshotResult``1(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{AutoCSer.Memory.HashBytes,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CheckSnapshotCloneObject{``0}}},AutoCSer.KeyValue{System.Byte[],``0}[])">
            <summary>
            获取快照数据集合
            </summary>
            <param name="values"></param>
            <param name="snapshotArray">预申请的快照数据容器</param>
            <returns>快照数据信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.SetSearchTreeSnapshotResult``1(AutoCSer.LeftArray{``0}@,AutoCSer.LeftArray{``0}@)">
            <summary>
            获取二叉搜索树快照数据集合
            </summary>
            <param name="array">预申请快照容器数组</param>
            <param name="newArray">超预申请快照数据</param>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.DefaultAttribute">
            <summary>
            默认节点接口配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode.DefaultNodeTypeAttribute">
            <summary>
            默认节点接口配置
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1">
            <summary>
            服务端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.target">
            <summary>
            操作节点对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.Target">
            <summary>
            操作节点对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,`0,System.Boolean)">
            <summary>
            服务端节点
            </summary>
            <param name="service"></param>
            <param name="index"></param>
            <param name="key">节点全局关键字</param>
            <param name="target"></param>
            <param name="isPersistence">是否持久化，设置为 false 为纯内存模式在重启服务时数据将丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,`0)">
            <summary>
            服务端节点（除了 服务基础操作节点 以外，该调用不支持节点持久化，只有支持快照的节点才支持持久化）
            </summary>
            <param name="service"></param>
            <param name="index"></param>
            <param name="key">节点全局关键字</param>
            <param name="target"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.Loaded">
            <summary>
            初始化加载完毕处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.loaded(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.INode{`0})">
            <summary>
            初始化加载完毕处理
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.checkNewTarget(`0)">
            <summary>
            检查操作节点对象是否合法
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.NodeDispose">
            <summary>
            释放节点资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.OnRemoved">
            <summary>
            服务端节点移除后处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.CreateMethodParameterCreator">
            <summary>
            创建调用方法与参数信息，派生自类型 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator
            </summary>
            <returns>创建调用方法与参数信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode`1.GetTarget(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode{`0})">
            <summary>
            获取操作节点对象
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator">
            <summary>
            生成服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Type">
            <summary>
            节点接口类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.methodLock">
            <summary>
            节点方法集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.Methods">
            <summary>
            节点方法集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.NodeMethods">
            <summary>
            节点方法信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.SnapshotMethods">
            <summary>
            快照方法集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.State">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase,System.Type,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[],AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodInfo[])">
            <summary>
            生成服务端节点
            </summary>
            <param name="service"></param>
            <param name="type">节点接口类型</param>
            <param name="methods">节点方法集合</param>
            <param name="nodeMethods">节点方法信息集合</param>
            <param name="snapshotMethods">快照方法集合</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.GetSnapshotMethod(System.Type)">
            <summary>
            获取快照方法索引
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.CheckSnapshotNode(System.Type)">
            <summary>
            快照节点检查
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator.GetSnapshotMethod(System.Type,System.Delegate@)">
            <summary>
            获取快照方法索引
            </summary>
            <param name="type"></param>
            <param name="serializeDelegate"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1">
            <summary>
            生成服务端节点
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.creatorException">
            <summary>
            节点生成错误
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.creatorMessages">
            <summary>
            节点生成提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.methods">
            <summary>
            节点方法集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.nodeMethods">
            <summary>
            节点方法信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.snapshotMethods">
            <summary>
            快照方法集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.Create(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase)">
            <summary>
            生成服务端节点
            </summary>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator`1.MethodParameterCreator">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity">
            <summary>
            节点信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.Node">
            <summary>
            服务端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.Identity">
            <summary>
            节点标识
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.Get(System.UInt32)">
            <summary>
            获取服务端节点
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.CheckGet(System.UInt32)">
            <summary>
            获取服务端节点
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.UInt32)">
            <summary>
            设置节点
            </summary>
            <param name="node"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.GetRemove(System.UInt32)">
            <summary>
            移除节点
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.GetFreeIdentity">
            <summary>
            设置空闲节点标识，用于创建节点预申请
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.GetCreateIdentity">
            <summary>
            设置空闲节点标识，用于创建节点预申请
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.CheckFreeIdentity(System.UInt32@)">
            <summary>
            判断空闲节点标识是否匹配
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.FreeIdentity(System.UInt32)">
            <summary>
            释放空闲节点
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIdentity.SetFreeIdentity(System.UInt32)">
            <summary>
            初始化创建节点设置节点标识
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeAttribute">
            <summary>
            节点接口配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeAttribute.IsClient">
            <summary>
            默认为 true 表示生成远程客户端接口代码
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeAttribute.IsLocalClient">
            <summary>
            默认为 false 表示不生成本地客户端接口代码
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeAttribute.LocalClientTypeName">
            <summary>
            生成本地客户端节点名称
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod">
            <summary>
            服务端节点方法信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.MinCustomServiceNodeMethodIndex">
            <summary>
            自定义基础服务节点方法最小方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.LoadPersistenceMethodNameSuffix">
            <summary>
            数据库冷启动加载历史持久化请求方法的名称后缀
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.BeforePersistenceMethodNameSuffix">
            <summary>
            持久化之前检查参数方法的名称后缀
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.MethodAttribute">
            <summary>
            节点方法自定义属性
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.PersistenceMethodName">
            <summary>
            持久化方法名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.PersistenceMethodReturnType">
            <summary>
            持久化方法返回数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.BeforePersistenceMethodIndex">
            <summary>
            持久化之前参数检查方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.LoadPersistenceMethodIndex">
            <summary>
            冷启动加载持久化方法编号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.QueueNodeType">
            <summary>
            队列节点类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.IsPersistence">
            <summary>
            默认为 true 表示调用需要持久化，如果调用不涉及数据变更操作则应该手动设置为 false 避免垃圾数据被持久化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.IsClientCall">
            <summary>
            默认为 true 表示允许客户端调用，否则为服务端内存调用方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.IsLoadPersistenceMethod">
            <summary>
            是否冷启动加载持久化方法
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.IsBeforePersistenceMethod">
            <summary>
            是否持久化之前检查参数方法
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.#ctor(System.Type,System.Reflection.MethodInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerMethodAttribute)">
            <summary>
            服务端节点方法信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
            <param name="methodAttribute"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.CheckLoadPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod,System.String@)">
            <summary>
            冷启动持久化方法匹配
            </summary>
            <param name="loadPersistenceMethod"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.CheckBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod,System.String@)">
            <summary>
            持久化检查方法匹配
            </summary>
            <param name="beforePersistenceMethod"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.setIsPersistenceMethod">
            <summary>
            设置持久化检查方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.GetMethodFlags">
            <summary>
            获取服务端节点方法标记
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.CheckCustomServiceNode">
            <summary>
            自定义基础服务节点方法检查
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.GetMethod(System.Type,AutoCSer.LeftArray{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod}@)">
            <summary>
            获取服务端接口方法集合
            </summary>
            <param name="type"></param>
            <param name="methods"></param>
            <returns>错误信息</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod.Compare(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethod)">
            <summary>
            服务端接口方法排序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType">
            <summary>
            服务端节点类型信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.NodeAttribute">
            <summary>
            节点接口配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.ServerNodeTypeAttribute">
            <summary>
            节点方法序号映射枚举类型配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.Methods">
            <summary>
            服务端接口方法信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.Messages">
            <summary>
            提示信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.#ctor(System.Type)">
            <summary>
            服务端节点类型信息
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.GetClientMethods(System.Type,System.Exception@,System.String[]@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNodeMethod[]@,System.Boolean)">
            <summary>
            获取客户端方法集合
            </summary>
            <param name="type"></param>
            <param name="creatorException"></param>
            <param name="creatorMessages"></param>
            <param name="methods"></param>
            <param name="isLocalClient"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.GetMethodGroup">
            <summary>
            获取方法分组
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.CheckType(System.Type)">
            <summary>
            接口类型检查
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeType.CheckType(System.Type,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeAttribute@,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeTypeAttribute@)">
            <summary>
            检查节点接口类型
            </summary>
            <param name="type"></param>
            <param name="nodeAttribute"></param>
            <param name="serverNodeTypeAttribute"></param>
            <returns>错误信息</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer">
            <summary>
            日志流持久化缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.OutputBuffer">
            <summary>
            输出数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.outputCopyBuffer">
            <summary>
            临时复制数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.outputEncodeBuffer">
            <summary>
            编码数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.SendBufferMaxSize">
            <summary>
            数据缓冲区最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.OutputStream">
            <summary>
            输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.start">
            <summary>
            输出数据缓冲区起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.bufferLength">
            <summary>
            输出数据缓冲区大小
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.Count">
            <summary>
            当前已经创建输出数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.currentIndex">
            <summary>
            当前缓冲区已确认输出位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.isNewBuffer">
            <summary>
            是否创建了新的缓冲区
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            日志流持久化缓冲区
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.GetBufferLength">
            <summary>
            获取输出数据缓冲区大小
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.Free">
            <summary>
            释放缓冲区
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.SetStart(System.Byte*)">
            <summary>
            设置输出数据缓冲区起始位置
            </summary>
            <param name="dataFixed"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.Reset">
            <summary>
            重置状态数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.RestoreCurrentIndex">
            <summary>
            还原当前缓冲区已确认输出位置
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.TrySetCurrentIndex">
            <summary>
            输出数量不为 0 时设置当前缓冲区已确认输出位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.CheckResizeError">
            <summary>
            检查输出流是否已经超限
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.CheckDataStart">
            <summary>
            输出数据缓冲区未更新时设置输出计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.CheckNewBuffer">
            <summary>
            检查数据缓冲区是否被新建
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.GetData">
            <summary>
            获取输出数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceBuffer.encode(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            数据编码
            </summary>
            <param name="outputData"></param>
            <returns>数据是否编码</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder">
            <summary>
            日志流持久化文件重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceFileInfo">
            <summary>
            持久化文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceCallbackExceptionPositionFileInfo">
            <summary>
            持久化回调异常位置文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceDataPositionBuffer">
            <summary>
            持久化回调异常位置输出缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.nodes">
            <summary>
            服务端节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.snapshotTransactionNodes">
            <summary>
            快照事务关系节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.LoadExceptionNode">
            <summary>
            初始化加载执行异常节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.node">
            <summary>
            当前持久化节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceQueue">
            <summary>
            调用持久化链表
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.rebuildPosition">
            <summary>
            持久化流重建起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistencePosition">
            <summary>
            持久化流已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistenceCallbackExceptionFilePosition">
            <summary>
            持久化回调异常位置文件已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.rebuildSnapshotPosition">
            <summary>
            重建快照结束位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.snapshotTransactionNodeVersion">
            <summary>
            快照事务关系节点版本
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.isSnapshotTransactionNodeVersionRebuild">
            <summary>
            快照事务关系节点版本重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.nodeCount">
            <summary>
            服务端节点数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.isClosed">
            <summary>
            是否已关闭
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.isClosedOrServiceDisposed">
            <summary>
            是否已关闭
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            日志流持久化文件重建
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.appendSnapshotTransactionNode(System.Collections.Generic.KeyValuePair{System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode})">
            <summary>
            添加快照事务关系节点
            </summary>
            <param name="serverNode"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Close(System.Boolean)">
            <summary>
            关闭重建操作
            </summary>
            <param name="isNodeLog"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.CloseLog">
            <summary>
            关闭重建操作（输出失败日志）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.createFile">
            <summary>
            创建重建文件
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.checkSnapshotTransactionNodeVersion">
            <summary>
            检查快照事务关系节点版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.CloseVersion">
            <summary>
            关闭版本重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.NextNode">
            <summary>
            持久化下一个节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.getSnapshotArray">
            <summary>
            预申请快照容器数组
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.GetSnapshotResult">
            <summary>
            获取节点快照数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.nodePersistence">
            <summary>
            当前节点持久化操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.checkPersistencePosition(System.IO.FileStream)">
            <summary>
            检查持久化流已写入位置是否匹配
            </summary>
            <param name="persistenceStream"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Rebuild">
            <summary>
            当前节点持久化操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Rebuild``1(System.Boolean,AutoCSer.LeftArray{``0}@,AutoCSer.LeftArray{``0}@)">
            <summary>
            当前节点持久化操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="isCreateNode"></param>
            <param name="array"></param>
            <param name="newArray"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.RebuildSnapshotClone``1(System.Boolean,AutoCSer.LeftArray{``0}@,AutoCSer.LeftArray{``0}@)">
            <summary>
            当前节点持久化操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="isCreateNode"></param>
            <param name="array"></param>
            <param name="newArray"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.Rebuild``1(System.Boolean,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable{``0})">
            <summary>
            当前节点持久化操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="isCreateNode"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.PushQueue(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            添加调用队列
            </summary>
            <param name="methodParameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.CheckQueue">
            <summary>
            检查调用队列
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.queuePersistence">
            <summary>
            调用队列持久化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.persistence">
            <summary>
            调用队列持久化
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder.QueuePersistence">
            <summary>
            未完成调用队列持久化
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback">
            <summary>
            日志流持久化文件重建队列回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback.rebuilder">
            <summary>
            日志流持久化文件重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback.type">
            <summary>
            日志流持久化文件重建队列回调任务类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilder,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum)">
            <summary>
            日志流持久化文件重建队列回调
            </summary>
            <param name="rebuilder">日志流持久化文件重建</param>
            <param name="type">日志流持久化文件重建队列回调任务类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallback.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum">
            <summary>
            日志流持久化文件重建队列回调任务类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.NextNode">
            <summary>
            持久化下一个节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.GetSnapshotResult">
            <summary>
            获取节点快照数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.CheckQueue">
            <summary>
            检查调用队列
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.Close">
            <summary>
            关闭重建操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.CloseLog">
            <summary>
            关闭重建操作（输出失败日志）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceRebuilderCallbackTypeEnum.CloseVersion">
            <summary>
            关闭版本重建
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallback">
            <summary>
            内存数据库回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallback.service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallback.type">
            <summary>
            内存数据库回调类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallbackTypeEnum)">
            <summary>
            加载数据
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
            <param name="type">内存数据库回调类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceCallback.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback">
            <summary>
            日志流持久化内存数据库回调操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.PersistencePosition">
            <summary>
            持久化流已写入位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.head">
            <summary>
            持久化回调头节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.end">
            <summary>
            持久化回调尾节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.CheckRebuild">
            <summary>
            持久化文件是否需要重建
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            日志流持久化内存数据库回调操作
            </summary>
            <param name="head">持久化回调头节点</param>
            <param name="end">持久化回调尾节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceCallback.RunTask">
            <summary>
            回调操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader">
            <summary>
            日志流持久化内存数据库服务端数据加载
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.FileVersion">
            <summary>
            文件版本号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.FieHead">
            <summary>
            文件头部前 4 个字节，头部版本号为 1
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.FileHeadSize">
            <summary>
            文件头部字节大小 [版本号]+[持久化流重建起始位置]+[快照结束位置]
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.ExceptionPositionFileVersion">
            <summary>
            持久化回调异常位置文件版本号
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.PersistenceCallbackExceptionPositionFileHead">
            <summary>
            持久化回调异常位置文件头部前 4 个字节，头部版本号为 0
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.ExceptionPositionFileHeadSize">
            <summary>
            持久化回调异常位置文件头部字节大小 [版本号]+[持久化流重建起始位置]
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.persistenceCallbackExceptionFilePosition">
            <summary>
            持久化异常位置文件读取位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.deserializer">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.persistenceCallbackExceptionPositions">
            <summary>
            持久化回调异常位置集合
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.persistenceFileName">
            <summary>
            日志流持久化文件名称
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.readBufferSize">
            <summary>
            读取文件缓冲区大小，最小为 4KB
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.persistenceCallbackExceptionPositionFileName">
            <summary>
            持久化回调异常位置文件名称
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            日志流持久化内存数据库服务端数据加载
            </summary>
            <param name="service">日志流持久化内存数据库服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.Load">
            <summary>
            开始加载数据
            </summary>
            <returns>加载请求数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.Decode(AutoCSer.SubArray{System.Byte}@,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            数据解码
            </summary>
            <param name="transferData">编码后的数据</param>
            <param name="outputData">等待写入的原始数据缓冲区</param>
            <returns>是否解码成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.loadHead(AutoCSer.SubArray{System.Byte})">
            <summary>
            加载文件头部数据
            </summary>
            <param name="data">读取文件数据</param>
            <returns>文件头部大小</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.loadPersistenceCallbackExceptionPositionVersion0">
            <summary>
            加载持久化回调异常位置集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.loadBuffer">
            <summary>
            初始化加载数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.load(AutoCSer.SubArray{System.Byte},System.Int64)">
            <summary>
            加载数据
            </summary>
            <param name="data">当前加载数据缓冲区</param>
            <param name="position">当前数据所在持久化流中的位置</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceLoader.GetPersistenceFileHeadVersion(System.Byte[],System.UInt64@)">
            <summary>
            获取持久化文件头部版本信息
            </summary>
            <param name="buffer"></param>
            <param name="rebuildPosition"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode">
            <summary>
            服务基础操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.ServiceNodeIndex">
            <summary>
            创建服务基础操作节点标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.Service">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.isCheckRemoveType">
            <summary>
            是否通过 AutoCSer.Common.Config.CheckRemoteType 检查远程类型的合法性
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            服务基础操作
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.RemoveNodeByKey(System.String)">
            <summary>
            删除节点
            </summary>
            <param name="key">节点全局关键字</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateNode``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Func{``0},System.Boolean)">
            <summary>
            创建服务端节点（不支持持久化，只有支持快照的节点才支持持久化）
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="getNode">获取节点操作对象</param>
            <param name="isPersistence">默认为 false 为纯内存模式在重启服务时数据将丢失</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateNodeBeforePersistence``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建服务端节点（不支持持久化，只有支持快照的节点才支持持久化）
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateNode``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Func{``0})">
            <summary>
            创建服务端节点（不支持持久化，只有支持快照的节点才支持持久化）
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="createNodeIndex">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="getNode">获取节点操作对象</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateSnapshotNode``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Func{``0})">
            <summary>
            创建支持快照接口的服务端节点（必须保证操作节点对象实现快照接口）
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="getNode">获取节点操作对象（必须保证操作节点对象实现快照接口）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateSnapshotNodeBeforePersistence``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator@)">
            <summary>
            创建支持快照接口的服务端节点（必须保证操作节点对象实现快照接口）
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="nodeCreator">生成服务端节点</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateSnapshotNode``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CreateNodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreator,System.Func{``0})">
            <summary>
            创建支持快照接口的服务端节点（必须保证操作节点对象实现快照接口）
            </summary>
            <typeparam name="T">节点接口类型</typeparam>
            <param name="createNodeIndex">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="nodeCreator">生成服务端节点</param>
            <param name="getNode">获取节点操作对象（必须保证操作节点对象实现快照接口）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateManyHashBitMapClientFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="size">位图大小（位数量）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateManyHashBitMapFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="size">位图大小（位数量）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateIdentityGeneratorNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int64)">
            <summary>
            创建 64 位自增ID 节点 IdentityGeneratorNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="identity">起始分配 ID</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateBitmapNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.UInt32)">
            <summary>
            创建位图节点 BitmapNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="capacity">二进制位数量</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNode.CreateServiceNode``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,``0)">
            <summary>
            创建服务基础操作节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer`1">
            <summary>
            快照方法序列化调用
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer`1.serializer">
            <summary>
            二进制序列化
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer`1.nodeIndex">
            <summary>
            节点标识
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer`1.serializeDelegate">
            <summary>
            序列化委托
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer`1.methodIndex">
            <summary>
            方法编号
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer`1.#ctor(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode)">
            <summary>
            快照方法序列化调用
            </summary>
            <param name="serializer">二进制序列化</param>
            <param name="node">节点信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodSerializer`1.Serialize(`0)">
            <summary>
            参数序列化
            </summary>
            <param name="parameter"></param>
            <returns>是否序列化成功</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1">
            <summary>
            返回参数
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.#ctor">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.#ctor(`0)">
            <summary>
            返回参数
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.serialize(AutoCSer.BinarySerializer)">
            <summary>
            序列化
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.deserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            反序列化
            </summary>
            <param name="deserializer"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SimpleSerializeResponseParameter`1.CreateKeepCallback">
            <summary>
            创建持续回调返回参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1">
            <summary>
            返回数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.Value">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.IsValue">
            <summary>
            是否存在返回数据，false 表示输入参数非法或者无返回值
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.#ctor(`0)">
            <summary>
            返回数据
            </summary>
            <param name="value">返回数据</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.op_Implicit(`0)~AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{`0}">
            <summary>
            隐式转换
            </summary>
            <param name="value"></param>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult`1.NullEnumerable">
            <summary>
            空集合
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode">
            <summary>
            位图节点接口 本地客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.ClearBit(System.UInt32)">
            <summary>
            清除位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.ClearMap">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.GetBit(System.UInt32)">
            <summary>
            读取位状态
            </summary>
            <param name="index">位索引</param>
            <returns>非 0 表示二进制位为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.GetBitClearBit(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.GetBitInvertBit(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.GetBitSetBit(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.GetCapacity">
            <summary>
            获取二进制位数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.InvertBit(System.UInt32)">
            <summary>
            状态取反
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeLocalClientNode.SetBit(System.UInt32)">
            <summary>
            设置位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient">
            <summary>
            位图节点接口 本地客户端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            本地客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip0__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip0__@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip0__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip0__.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip0__@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip0__.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip0__.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip9__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip9__@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip9__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip9__.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip9__@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip9__.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.__ip9__.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#ClearBit(System.UInt32)">
            <summary>
            清除位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#ClearMap">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#GetBit(System.UInt32)">
            <summary>
            读取位状态
            </summary>
            <param name="index">位索引</param>
            <returns>非 0 表示二进制位为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#GetBitClearBit(System.UInt32)">
            <summary>
            清除位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#GetBitInvertBit(System.UInt32)">
            <summary>
            状态取反并返回操作之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#GetBitSetBit(System.UInt32)">
            <summary>
            设置位状态并返回设置之前的状态
            </summary>
            <param name="index">位索引</param>
            <returns>设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#GetCapacity">
            <summary>
            获取二进制位数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#InvertBit(System.UInt32)">
            <summary>
            状态取反
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IBitmapNodeLocalClientNode#SetBit(System.UInt32)">
            <summary>
            设置位状态
            </summary>
            <param name="index">位索引</param>
            <returns>是否设置成功，失败表示索引超出范围</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeLocalClient.LocalClientNode">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNodeLocalClientNode">
            <summary>
            64 位自增ID 节点接口 本地客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNodeLocalClientNode.Next">
            <summary>
            获取下一个自增ID
            </summary>
            <returns>下一个自增ID，失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNodeLocalClientNode.NextFragment(System.Int32)">
            <summary>
            获取自增 ID 分段
            </summary>
            <param name="count">获取数量</param>
            <returns>自增 ID 分段</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient">
            <summary>
            64 位自增ID 节点接口 本地客户端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            本地客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip1__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip1__@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip1__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip1__.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip1__@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip1__.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip1__.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip2__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip2__@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip2__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip2__.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip2__@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip2__.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.__ip2__.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IIdentityGeneratorNodeLocalClientNode#Next">
            <summary>
            获取下一个自增ID
            </summary>
            <returns>下一个自增ID，失败返回负数</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IIdentityGeneratorNodeLocalClientNode#NextFragment(System.Int32)">
            <summary>
            获取自增 ID 分段
            </summary>
            <param name="count">获取数量</param>
            <returns>自增 ID 分段</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeLocalClient.LocalClientNode">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeLocalClientNode">
            <summary>
            多哈希位图客户端同步过滤节点接口（类似布隆过滤器，适合小容器） 本地客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeLocalClientNode.GetBit(System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{System.Int32}})">
            <summary>
            获取设置新位操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeLocalClientNode.GetData">
            <summary>
            获取当前位图数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeLocalClientNode.GetSize">
            <summary>
            获取位图大小（位数量）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeLocalClientNode.SetBit(System.Int32)">
            <summary>
            设置位
            </summary>
            <param name="bit">位置</param>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient">
            <summary>
            多哈希位图客户端同步过滤节点接口（类似布隆过滤器，适合小容器） 本地客户端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            本地客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip3__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip3__@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip3__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip3__.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip3__@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip3__.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip3__.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.__ip5__.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IManyHashBitMapClientFilterNodeLocalClientNode#GetBit(System.Action{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{System.Int32}})">
            <summary>
            获取设置新位操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IManyHashBitMapClientFilterNodeLocalClientNode#GetData">
            <summary>
            获取当前位图数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IManyHashBitMapClientFilterNodeLocalClientNode#GetSize">
            <summary>
            获取位图大小（位数量）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IManyHashBitMapClientFilterNodeLocalClientNode#SetBit(System.Int32)">
            <summary>
            设置位
            </summary>
            <param name="bit">位置</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeLocalClient.LocalClientNode">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeLocalClientNode">
            <summary>
            多哈希位图过滤节点接口（类似布隆过滤器） 本地客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeLocalClientNode.CheckBits(System.Int32,System.UInt32[])">
            <summary>
            检查位图数据
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示数据不存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeLocalClientNode.GetSize">
            <summary>
            获取位图大小（位数量）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeLocalClientNode.SetBits(System.Int32,System.UInt32[])">
            <summary>
            设置位
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示位图大小不匹配</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient">
            <summary>
            多哈希位图过滤节点接口（类似布隆过滤器） 本地客户端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            本地客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip0__.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.__ip4__.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IManyHashBitMapFilterNodeLocalClientNode#CheckBits(System.Int32,System.UInt32[])">
            <summary>
            检查位图数据
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示数据不存在</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IManyHashBitMapFilterNodeLocalClientNode#GetSize">
            <summary>
            获取位图大小（位数量）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IManyHashBitMapFilterNodeLocalClientNode#SetBits(System.Int32,System.UInt32[])">
            <summary>
            设置位
            </summary>
            <param name="size">位图大小（位数量）</param>
            <param name="bits">位置集合</param>
            <returns>返回 false 表示位图大小不匹配</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeLocalClient.LocalClientNode">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode">
            <summary>
            服务基础操作接口方法映射枚举 本地客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode.CreateBitmapNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.UInt32)">
            <summary>
            创建位图节点 BitmapNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="capacity">二进制位数量</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode.CreateIdentityGeneratorNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int64)">
            <summary>
            创建 64 位自增ID 节点 IdentityGeneratorNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="identity">起始分配 ID</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode.RemoveNodeByKey(System.String)">
            <summary>
            删除节点
            </summary>
            <param name="key">节点全局关键字</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode.CreateManyHashBitMapClientFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="size">位图大小（位数量）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode.CreateManyHashBitMapFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="size">位图大小（位数量）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient">
            <summary>
            服务基础操作接口方法映射枚举 本地客户端节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.#ctor(System.String,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}}},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Boolean)">
            <summary>
            本地客户端节点
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="creator">创建节点操作对象委托</param>
            <param name="client">日志流持久化内存数据库客户端</param>
            <param name="index">节点索引信息</param>
            <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip0__.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip1__.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip2__.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip3__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip3__@)">
            <summary>
            简单序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip3__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            简单序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip3__.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip3__@,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip3__.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            简单反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip3__.SimpleSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__.BinarySerializeMemberTypes">
            <summary>
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.__ip4__.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IServiceNodeLocalClientNode#CreateBitmapNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.UInt32)">
            <summary>
            创建位图节点 BitmapNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="capacity">二进制位数量</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IServiceNodeLocalClientNode#CreateIdentityGeneratorNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int64)">
            <summary>
            创建 64 位自增ID 节点 IdentityGeneratorNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="identity">起始分配 ID</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IServiceNodeLocalClientNode#RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IServiceNodeLocalClientNode#RemoveNodeByKey(System.String)">
            <summary>
            删除节点
            </summary>
            <param name="key">节点全局关键字</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IServiceNodeLocalClientNode#CreateManyHashBitMapClientFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="size">位图大小（位数量）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.AutoCSer#CommandService#StreamPersistenceMemoryDatabase#IServiceNodeLocalClientNode#CreateManyHashBitMapFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="size">位图大小（位数量）</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeLocalClient.LocalClientNode">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum">
            <summary>
            位图节点接口 节点方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.ClearBit">
            <summary>
            [0] 清除位状态
            uint index 位索引
            返回值 bool 是否设置成功，失败表示索引超出范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.ClearMap">
            <summary>
            [1] 清除所有数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.GetBit">
            <summary>
            [2] 读取位状态
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 非 0 表示二进制位为已设置状态，索引超出则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.GetBitClearBit">
            <summary>
            [3] 清除位状态并返回设置之前的状态
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 清除操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.GetBitInvertBit">
            <summary>
            [4] 状态取反并返回操作之前的状态
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 取反操作之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.GetBitSetBit">
            <summary>
            [5] 设置位状态并返回设置之前的状态
            uint index 位索引
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 设置之前的状态，非 0 表示二进制位之前为已设置状态，索引超出则无返回值
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.GetCapacity">
            <summary>
            [6] 获取二进制位数量
            返回值 uint 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.InvertBit">
            <summary>
            [7] 状态取反
            uint index 位索引
            返回值 bool 是否设置成功，失败表示索引超出范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.SetBit">
            <summary>
            [8] 设置位状态
            uint index 位索引
            返回值 bool 是否设置成功，失败表示索引超出范围
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNodeMethodEnum.SnapshotSet">
            <summary>
            [9] 快照添加数据
            byte[] map 
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_ClearBit_0">
            <summary>
            清除位状态 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_ClearMap_1">
            <summary>
            清除所有数据 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_GetBit_2">
            <summary>
            读取位状态 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_GetBitClearBit_3">
            <summary>
            清除位状态并返回设置之前的状态 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_GetBitInvertBit_4">
            <summary>
            状态取反并返回操作之前的状态 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_GetBitSetBit_5">
            <summary>
            设置位状态并返回设置之前的状态 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_GetCapacity_6">
            <summary>
            获取二进制位数量 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_InvertBit_7">
            <summary>
            状态取反 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_SetBit_8">
            <summary>
            设置位状态 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IBitmapNode_SnapshotSet_9">
            <summary>
            快照添加数据 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodParameterCreator">
            <summary>
            位图节点接口 创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.BitmapNodeMethodParameterCreator.GetServerNodeCreatorMethod">
            <summary>
            获取生成服务端节点方法信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNodeMethodEnum">
            <summary>
            64 位自增ID 节点接口 节点方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNodeMethodEnum.Next">
            <summary>
            [0] 获取下一个自增ID
            返回值 long 下一个自增ID，失败返回负数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNodeMethodEnum.NextFragment">
            <summary>
            [1] 获取自增 ID 分段
            int count 获取数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityFragment 自增 ID 分段
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNodeMethodEnum.SnapshotSet">
            <summary>
            [2] 快照添加数据
            long identity 
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNode_Next_0">
            <summary>
            获取下一个自增ID 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNode_NextFragment_1">
            <summary>
            获取自增 ID 分段 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IIdentityGeneratorNode_SnapshotSet_2">
            <summary>
            快照添加数据 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeMethodParameterCreator">
            <summary>
            64 位自增ID 节点接口 创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IdentityGeneratorNodeMethodParameterCreator.GetServerNodeCreatorMethod">
            <summary>
            获取生成服务端节点方法信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeMethodEnum">
            <summary>
            多哈希位图客户端同步过滤节点接口（类似布隆过滤器，适合小容器） 节点方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeMethodEnum.GetBit">
            <summary>
            [0] 获取设置新位操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeMethodEnum.GetData">
            <summary>
            [1] 获取当前位图数据
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeMethodEnum.GetSize">
            <summary>
            [2] 获取位图大小（位数量）
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeMethodEnum.SetBit">
            <summary>
            [3] 设置位
            int bit 位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeMethodEnum.SetBitBeforePersistence">
            <summary>
            [4] 设置位 持久化前检查
            int bit 位置
            返回值 bool 是否继续持久化操作
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNodeMethodEnum.SnapshotSet">
            <summary>
            [5] 快照添加数据
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap map 多哈希位图数据
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode_GetBit_0">
            <summary>
            获取设置新位操作 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode_GetData_1">
            <summary>
            获取当前位图数据 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode_GetSize_2">
            <summary>
            获取位图大小（位数量） 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode_SetBit_3">
            <summary>
            设置位 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode_SetBitBeforePersistence_4">
            <summary>
            设置位 持久化前检查 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapClientFilterNode_SnapshotSet_5">
            <summary>
            快照添加数据 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeMethodParameterCreator">
            <summary>
            多哈希位图客户端同步过滤节点接口（类似布隆过滤器，适合小容器） 创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapClientFilterNodeMethodParameterCreator.GetServerNodeCreatorMethod">
            <summary>
            获取生成服务端节点方法信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeMethodEnum">
            <summary>
            多哈希位图过滤节点接口（类似布隆过滤器） 节点方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeMethodEnum.CheckBits">
            <summary>
            [0] 检查位图数据
            int size 位图大小（位数量）
            uint[] bits 位置集合
            返回值 AutoCSer.NullableBoolEnum 返回 false 表示数据不存在
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeMethodEnum.GetSize">
            <summary>
            [1] 获取位图大小（位数量）
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeMethodEnum.SetBits">
            <summary>
            [2] 设置位
            int size 位图大小（位数量）
            uint[] bits 位置集合
            返回值 bool 返回 false 表示位图大小不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeMethodEnum.SetBitsBeforePersistence">
            <summary>
            [3] 设置位 持久化前检查
            int size 位图大小（位数量）
            uint[] bits 位置集合
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{bool} 返回 false 表示位图大小不匹配
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNodeMethodEnum.SnapshotSet">
            <summary>
            [4] 快照添加数据
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMap map 多哈希位图数据
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode_CheckBits_0">
            <summary>
            检查位图数据 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode_GetSize_1">
            <summary>
            获取位图大小（位数量） 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode_SetBits_2">
            <summary>
            设置位 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode_SetBitsBeforePersistence_3">
            <summary>
            设置位 持久化前检查 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IManyHashBitMapFilterNode_SnapshotSet_4">
            <summary>
            快照添加数据 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeMethodParameterCreator">
            <summary>
            多哈希位图过滤节点接口（类似布隆过滤器） 创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ManyHashBitMapFilterNodeMethodParameterCreator.GetServerNodeCreatorMethod">
            <summary>
            获取生成服务端节点方法信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeMethodEnum">
            <summary>
            服务基础操作接口方法映射枚举 节点方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeMethodEnum.CreateBitmapNode">
            <summary>
            [0] 创建位图节点 BitmapNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            uint capacity 二进制位数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeMethodEnum.CreateIdentityGeneratorNode">
            <summary>
            [1] 创建 64 位自增ID 节点 IdentityGeneratorNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            long identity 起始分配 ID
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeMethodEnum.RemoveNode">
            <summary>
            [2] 删除节点
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            返回值 bool 是否成功删除节点，否则表示没有找到节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeMethodEnum.RemoveNodeByKey">
            <summary>
            [3] 删除节点
            string key 节点全局关键字
            返回值 bool 是否成功删除节点，否则表示没有找到节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeMethodEnum.CreateManyHashBitMapClientFilterNode">
            <summary>
            [4] 多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int size 位图大小（位数量）
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeMethodEnum.CreateManyHashBitMapFilterNode">
            <summary>
            [5] 创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int size 位图大小（位数量）
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode_CreateBitmapNode_0">
            <summary>
            创建位图节点 BitmapNode 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode_CreateIdentityGeneratorNode_1">
            <summary>
            创建 64 位自增ID 节点 IdentityGeneratorNode 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode_RemoveNode_2">
            <summary>
            删除节点 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode_RemoveNodeByKey_3">
            <summary>
            删除节点 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode_CreateManyHashBitMapClientFilterNode_4">
            <summary>
            多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNode_CreateManyHashBitMapFilterNode_5">
            <summary>
            创建多哈希位图过滤节点 IManyHashBitMapFilterNode 服务端节点方法
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeMethodParameterCreator">
            <summary>
            服务基础操作接口方法映射枚举 创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServiceNodeMethodParameterCreator.GetServerNodeCreatorMethod">
            <summary>
            获取生成服务端节点方法信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.AotMethod">
            <summary>
            触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.AotMethod.Call">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabase.AotMethod.binaryDeserializeMemberTypes">
            <summary>
            二进制反序列化成员类型代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`1">
            <summary>
            日志流持久化内存数据库客户端节点缓存，用于客户端单例
            </summary>
            <typeparam name="T">客户端节点类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`1.nodeTask">
            <summary>
            客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`1.synchronousNodeTask">
            <summary>
            IO 线程同步回调客户端节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`1.nodeLock">
            <summary>
            客户端节点访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`1.GetNode">
            <summary>
            获取客户端节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`1.getNode">
            <summary>
            获取客户端节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`1.GetSynchronousNode">
            <summary>
            获取 IO 线程同步回调客户端节点，节点调用 await 后续操作不允许存在同步阻塞逻辑或者长时间占用 CPU 运算
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`1.getSynchronousNode">
            <summary>
            获取 IO 线程同步回调客户端节点
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`2">
            <summary>
            日志流持久化内存数据库客户端节点缓存，用于客户端单例
            </summary>
            <typeparam name="NT">客户端节点类型</typeparam>
            <typeparam name="ST">服务基础操作客户端接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`2.client">
            <summary>
            日志流持久化内存数据库客户端缓存，用于客户端单例
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`2.getNodeTask">
            <summary>
            获取客户端节点委托
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`2.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient{`1},System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient{`1},System.Threading.Tasks.Task{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult{`0}}})">
            <summary>
            日志流持久化内存数据库客户端节点缓存，用于客户端单例
            </summary>
            <param name="client">日志流持久化内存数据库客户端缓存</param>
            <param name="getNode">获取客户端节点委托</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache`2.getNode">
            <summary>
            获取客户端节点
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.Config">
            <summary>
            日志流持久化内存数据库服务端配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.CommandServerCallQueue">
            <summary>
            服务端执行队列
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceDirectory">
            <summary>
            持久化文件主目录
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceFileInfo">
            <summary>
            持久化文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceCallbackExceptionPositionFileInfo">
            <summary>
            持久化回调异常位置文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceSwitchFileInfo">
            <summary>
            重建持久化文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceCallbackExceptionPositionSwitchFileInfo">
            <summary>
            重建持久化回调异常位置文件信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.removeHistoryFile">
            <summary>
            删除历史持久化文件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.nodeCreators">
            <summary>
            生成服务端节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.nodeCreatorLock">
            <summary>
            生成服务端节点集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceDataPositionBuffer">
            <summary>
            持久化回调异常位置写入缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.nodeDictionary">
            <summary>
            根节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.CreateNodes">
            <summary>
            正在创建节点的关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.serviceCallbackWait">
            <summary>
            持久化回调完成等待
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.Nodes">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.CurrentMethodParameter">
            <summary>
            当前执行的调用方法与参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceQueue">
            <summary>
            调用持久化链表
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceWaitHandle">
            <summary>
            等待事件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.Rebuilder">
            <summary>
            日志流持久化文件重建
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.RebuildPosition">
            <summary>
            持久化流重建起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistencePosition">
            <summary>
            持久化流已写入位置
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.RebuildPersistenceEndPosition">
            <summary>
            持久化流重建绝对结束位置 RebuildPosition + PersistencePosition
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceCallbackExceptionFilePosition">
            <summary>
            持久化回调异常位置文件已写入位置
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.RebuildSnapshotPosition">
            <summary>
            重建快照结束位置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.NodeIndex">
            <summary>
            当前分配节点索引
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.serviceCallbackCount">
            <summary>
            未完成持久化回调次数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.SnapshotTransactionNodeVersion">
            <summary>
            快照事务关系节点版本
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.IsMaster">
            <summary>
            是否主节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.IsBackup">
            <summary>
            是否备份客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.CurrentCallIsPersistence">
            <summary>
            当前调用是否持久化
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.IsLoaded">
            <summary>
            是否已经加载完数据
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.IsDisposed">
            <summary>
            是否已经释放资源
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceType">
            <summary>
            持久化类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig,System.Boolean)">
            <summary>
            服务端会话绑定日志流持久化内存数据库服务
            </summary>
            <param name="config">日志流持久化内存数据库服务端配置</param>
            <param name="isMaster">是否主节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.NodeDispose">
            <summary>
            释放节点资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.GetNode(System.String)">
            <summary>
            根据关键字获取节点信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.Set(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RemoveHistoryFile)">
            <summary>
            设置删除历史持久化文件
            </summary>
            <param name="removeHistoryFile"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.SwitchPersistenceFileInfo">
            <summary>
            切换持久化文件信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.GetPersistencePosition">
            <summary>
            获取持久化流已写入位置
            </summary>
            <returns>持久化流已写入位置</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.GetRebuildSnapshotPosition">
            <summary>
            获取重建快照结束位置
            </summary>
            <returns>重建快照结束位置</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.AppendNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,System.String)">
            <summary>
            添加新节点
            </summary>
            <param name="node"></param>
            <param name="key"></param>
            <returns>当前执行的持久化回调</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PushPersistenceMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            添加持久化调用方法与参数信息
            </summary>
            <param name="methodParameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PushPersistenceMethodParameter``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,``0@)">
            <summary>
            添加持久化调用方法与参数信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodParameter"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.SetCurrentMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter)">
            <summary>
            设置当前执行的调用方法与参数信息
            </summary>
            <param name="methodParameter"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,System.Int64,System.Boolean)">
            <summary>
            持久化回调
            </summary>
            <param name="head"></param>
            <param name="end"></param>
            <param name="persistencePosition"></param>
            <param name="checkRebuild"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.CheckRebuild">
            <summary>
            重建持久化文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.PersistenceException(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum)">
            <summary>
            持久化结束释放队列
            </summary>
            <param name="head"></param>
            <param name="end"></param>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.WritePersistenceCallbackExceptionPosition(System.Int64)">
            <summary>
            写入持久化回调异常数据位置
            </summary>
            <param name="persistenceCallbackExceptionPosition">持久化异常位置信息</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceBase.GetNodeCreator``1">
            <summary>
            获取生成服务端节点
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.PersistenceBufferPool">
            <summary>
            持久化缓冲区池
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.persistenceHead">
            <summary>
            未处理持久化队列首节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.persistenceEnd">
            <summary>
            未处理持久化队列尾节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.PersistenceFileHeadVersion">
            <summary>
            持久化文件头部版本信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.PersistenceCallbackExceptionPositionFileHeadVersion">
            <summary>
            持久化回调异常位置文件头部版本信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.freeIndexs">
            <summary>
            空闲索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.rebuildLoadExceptionNode">
            <summary>
            持久化重建加载异常节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.isRebuilderPersistenceWaitting">
            <summary>
            重建持久化是否正在等待操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.#ctor(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig,System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode},System.Boolean)">
            <summary>
            日志流持久化内存数据库服务端
            </summary>
            <param name="config">日志流持久化内存数据库服务端配置</param>
            <param name="createServiceNode">创建服务基础操作节点委托</param>
            <param name="isMaster">是否主节点</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Load">
            <summary>
            加载数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.getPersistenceFile(System.IO.FileInfo[],System.String,System.String,System.Collections.Generic.Dictionary{System.UInt64,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PersistenceFile},System.Byte*)">
            <summary>
            获取持久化文件信息
            </summary>
            <param name="files"></param>
            <param name="persistenceFileName"></param>
            <param name="exceptionPositionFileName"></param>
            <param name="persistenceFiles"></param>
            <param name="bufferFixed"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.nodeLoaded">
            <summary>
            初始化加载完毕处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.load(AutoCSer.LeftArray{System.Threading.Tasks.Task})">
            <summary>
            等待加载数据
            </summary>
            <param name="tasks"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetUtcNow">
            <summary>
            获取服务端 UTC 时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodes">
            <summary>
            获取所有有效节点集合（不包括基础操作节点）
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.createInputMethodParameter">
            <summary>
            创建调用方法与参数信息
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CreateInputMethodParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum@)">
            <summary>
            创建调用方法与参数信息
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.AutoCSer#Net#ICommandServerBindController#Bind(AutoCSer.Net.CommandServerController)">
            <summary>
            绑定命令服务控制器
            </summary>
            <param name="controller"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetServerNode(System.String)">
            <summary>
            根据节点全局关键字获取服务端节点
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetPersistencePosition(System.Int64,System.Int64)">
            <summary>
            设置持久化文件写入位置
            </summary>
            <param name="persistencePosition"></param>
            <param name="persistenceCallbackExceptionFilePosition"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodeIndex(System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Boolean)">
            <summary>
            获取节点标识
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="isCreate">关键字不存在时创建空闲节点标识</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodeIndexBeforePersistence(System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Boolean)">
            <summary>
            获取节点标识
            </summary>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="isCreate">关键字不存在时创建空闲节点标识</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CreateNodeIndex">
            <summary>
            创建节点标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodeIndex(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Boolean)">
            <summary>
            获取节点标识
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="isCreate">关键字不存在时创建空闲节点标识</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodeIndex(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Boolean)">
            <summary>
            获取节点标识
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="isCreate">关键字不存在时创建空闲节点标识</param>
            <returns>关键字不存在时返回一个空闲节点标识用于创建节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.check(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            检查节点信息是否匹配
            </summary>
            <param name="node"></param>
            <param name="nodeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CheckCreateNodeIndex(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建节点之前检查节点标识是否匹配
            </summary>
            <param name="index"></param>
            <param name="key"></param>
            <param name="nodeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.LoadCreateNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            初始化加载数据创建节点
            </summary>
            <param name="index"></param>
            <param name="key"></param>
            <param name="nodeInfo"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            删除节点
            </summary>
            <param name="index">节点索引信息</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RemoveNode(System.String)">
            <summary>
            删除节点
            </summary>
            <param name="key">节点全局关键字</param>
            <returns>是否成功删除节点，否则表示没有找到节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetFreeIndex">
            <summary>
            获取节点索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RemoveFreeIndex(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex)">
            <summary>
            释放空闲节点
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodeKeys(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.Net.CommandServerKeepCallbackCount{System.String})">
            <summary>
            获取所有匹配节点的全局关键字
            </summary>
            <param name="nodeInfo">匹配服务端节点信息</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodeIndexs(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.Net.CommandServerKeepCallbackCount{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex})">
            <summary>
            获取所有匹配节点的节点索引信息
            </summary>
            <param name="nodeInfo">匹配服务端节点信息</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetNodeKeyIndexs(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,AutoCSer.Net.CommandServerKeepCallbackCount{AutoCSer.BinarySerializeKeyValue{System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex}})">
            <summary>
            获取所有匹配节点的全局关键字与节点索引信息
            </summary>
            <param name="nodeInfo">匹配服务端节点信息</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Call(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Call(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallOutput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallOutput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallOutputWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallOutputWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter@,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInputWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInputWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter@,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInputOutput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInputOutput(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInputOutputWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CallInputOutputWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SendOnly(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SendOnly(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SendOnlyWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SendOnlyWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter)">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.KeepCallback(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.KeepCallback(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.KeepCallbackWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.KeepCallbackWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="index">节点索引信息</param>
            <param name="methodIndex">调用方法编号</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter@,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="parameter"></param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.InputKeepCallback(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.InputKeepCallback(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallReadQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.InputKeepCallbackWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.InputKeepCallbackWrite(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.RequestParameter,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter})">
            <summary>
            调用节点方法
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="parameter">请求参数</param>
            <param name="callback">返回参数</param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetBeforePersistenceMethodParameterCustomSessionObject(System.Object)">
            <summary>
            设置自定义状态对象
            </summary>
            <param name="sessionObject"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.GetBeforePersistenceMethodParameterCustomSessionObject">
            <summary>
            获取自定义状态对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.persistence">
            <summary>
            持久化
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Load(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.Int32,AutoCSer.BinaryDeserializer,AutoCSer.SubArray{System.Byte},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode@)">
            <summary>
            初始化加载数据
            </summary>
            <param name="index"></param>
            <param name="methodIndex"></param>
            <param name="deserializer"></param>
            <param name="data"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetRebuild(System.Int64,System.Int64,System.Int64)">
            <summary>
            设置重建文件位置信息
            </summary>
            <param name="persistencePosition"></param>
            <param name="persistenceCallbackExceptionFilePosition"></param>
            <param name="rebuildSnapshotPosition"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Rebuild">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Rebuild(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallConcurrencyReadWriteQueue)">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.Rebuild(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallWriteQueue)">
            <summary>
            重建持久化文件（清除无效数据），注意不支持快照的节点将被抛弃
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.CheckRebuild">
            <summary>
            重建持久化文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.RebuildError">
            <summary>
            持久化文件重建异常并已关闭
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetPersistenceFileHeadVersion(System.UInt32,System.UInt64,System.Int64)">
            <summary>
            设置持久化文件头部版本信息
            </summary>
            <param name="persistenceFileHeadVersion"></param>
            <param name="rebuildPosition"></param>
            <param name="rebuildSnapshotPosition"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService.SetRebuilderPersistenceWaitting">
            <summary>
            设置重建持久化等待操作
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig">
            <summary>
            Log stream persistence in memory database server configuration
            日志流持久化内存数据库服务端配置
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceExtensionName">
            <summary>
            持久化数据库文件扩展名 AutoCSer Memory Database
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceCallbackExceptionPositionExtensionName">
            <summary>
            持久化回调异常位置文件扩展名 Callback Exception Position
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.DefaultPersistenceFileName">
            <summary>
            默认持久化文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistencePath">
            <summary>
            持久化文件路径，建议使用绝对路径（为了最优化冷启动读取速度，应该使用一个正常格式化的空白磁盘）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceSwitchPath">
            <summary>
            重建持久化文件路径，建议使用绝对路径（为了最优化冷启动读取速度与文件重建速度，应该另外使用一个正常格式化的空白磁盘，也就是说需要两个正常格式化的空白磁盘切换）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceFileName">
            <summary>
            持久化文件名称
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.GetPersistenceFileInfo">
            <summary>
            获取持久化文件信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.GetPersistenceSwitchFileInfo">
            <summary>
            获取重建持久化文件信息
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.RepairNodeMethodDirectoryName">
            <summary>
            修复节点方法保存目录名称，默认为 RepairNodeMethod
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.RepairNodeMethodAssemblyFileName">
            <summary>
            修复节点方法程序集保存文件名称，默认为 assembly.dll
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.RepairNodeMethodNameFileName">
            <summary>
            修复节点方法指定静态方法名称信息文件名称，默认为 method.json
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.BufferMaxSize">
            <summary>
            持久化数据缓冲区最大字节数，默认为 1MB，最小值为 4KB
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.BufferSizeBits">
            <summary>
            持久化数据缓存区池字节大小二进制位数量，默认为 17 表示 128KB，最小值为 12 表示 4KB
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceType">
            <summary>
            持久化类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.IsSerializeCopyString">
            <summary>
            默认为 true 表示字符串序列化直接复制内存数据，设置为 false 则对 ASCII 进行编码可以降低空间占用
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.GetBackupFileNameSuffix">
            <summary>
            获取备份文件时间后缀
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.GetRemoveHistoryFileTime">
            <summary>
            Obtain the Utc time for deleting persistent files. By default, the maximum time indicates that the files are not deleted
            获取删除历史持久化文件 Utc 时间，默认为时间最大值表示不删除
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.RemoveHistoryFile(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            The task of deleting persistent files is started. By default, files are not deleted
            启动删除历史持久化文件任务，默认不删除文件
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.CheckRebuild(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService)">
            <summary>
            Determine whether persistent files need to be rebuilt (the default value is more than 100MB and the size of the snapshot version is doubled). Determine the size of the reconstructed file based on actual requirements to avoid frequent reconstruction operations
            判断持久化文件是否需要重建（默认为超过 100MB 并且相对上次重建的快照版本增加一倍大小以后触发），要根据实际需求确定重建文件大小避免频繁触发重建操作
            </summary>
            <param name="service"></param>
            <returns>Whether the persistent file needs to be rebuilt
            持久化文件是否需要重建</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceEncode(System.Byte[],System.Int32,System.Int32,AutoCSer.Memory.ByteArrayBuffer@,AutoCSer.SubArray{System.Byte}@,System.Int32,System.Int32)">
            <summary>
            持久化数据编码
            </summary>
            <param name="data">原始数据</param>
            <param name="startIndex">原始数据起始位置</param>
            <param name="dataSize">原始数据字节数</param>
            <param name="buffer">输出数据缓冲区</param>
            <param name="outputData">输出数据</param>
            <param name="outputSeek">输出数据起始位置</param>
            <param name="outputHeadSize">输出数据多余头部大小</param>
            <returns>持久化数据是否编码</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.PersistenceDecode(AutoCSer.SubArray{System.Byte}@,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            持久化数据解码
            </summary>
            <param name="transferData">编码后的数据</param>
            <param name="outputData">等待写入的原始数据缓冲区</param>
            <returns>是否解码成功</returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.Create">
            <summary>
            创建默认日志流持久化内存数据库服务端（主服务节点）
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.StreamPersistenceMemoryDatabaseServiceConfig.Create``1(System.Func{AutoCSer.CommandService.StreamPersistenceMemoryDatabaseService,``0})">
            <summary>
            日志流持久化内存数据库服务端（主服务节点）
            </summary>
            <typeparam name="T">节点服务接口类型</typeparam>
            <param name="createServiceNode"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.SnapshotEnumerableExtension">
            <summary>
            快照集合扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.SnapshotEnumerableExtension.Cast``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable{``0},System.Func{``0,``1})">
            <summary>
            快照数据类型转换
            </summary>
            <typeparam name="ST">数据类型</typeparam>
            <typeparam name="T">持久化类型</typeparam>
            <param name="snapshot">快照集合</param>
            <param name="getValue">持久化类型</param>
            <returns>快照集合</returns>
        </member>
        <member name="M:AutoCSer.Extensions.SnapshotEnumerableExtension.Cast``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ISnapshotEnumerable{``0},System.Func{``0,``1},System.Func{System.Boolean})">
            <summary>
            快照数据类型转换
            </summary>
            <typeparam name="ST">数据类型</typeparam>
            <typeparam name="T">持久化类型</typeparam>
            <param name="snapshot">快照集合</param>
            <param name="getValue">持久化类型</param>
            <param name="getIsSnapshot">持久化类型</param>
            <returns>快照集合</returns>
        </member>
        <member name="T:AutoCSer.Extensions.LocalKeepCallbackExtension">
            <summary>
            保持回调输出扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.LocalKeepCallbackExtension.GetLeftArray``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{``0}},System.Int32)">
            <summary>
            获取数组
            </summary>
            <param name="response"></param>
            <param name="capacity">容器初始化大小</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.LocalKeepCallbackExtension.GetLeftArray``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback{``0},System.Int32)">
            <summary>
            获取数组
            </summary>
            <param name="response"></param>
            <param name="capacity">容器初始化大小</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.LocalKeepCallbackExtension.GetLeftArray``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{``0}},System.Func{``0,``1},System.Int32)">
            <summary>
            获取数组
            </summary>
            <param name="response"></param>
            <param name="getValue">数据转换委托</param>
            <param name="capacity">容器初始化大小</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Extensions.LocalKeepCallbackExtension.GetLeftArray``2(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback{``0},System.Func{``0,``1},System.Int32)">
            <summary>
            获取数组
            </summary>
            <param name="response"></param>
            <param name="getValue">数据转换委托</param>
            <param name="capacity">容器初始化大小</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Extensions.MethodKeepCallbackExtension">
            <summary>
            方法调用回调包装扩展操作
            </summary>
        </member>
        <member name="M:AutoCSer.Extensions.MethodKeepCallbackExtension.Callback``1(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback{``0},``0,``0)">
            <summary>
            返回数据链表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="methodCallback"></param>
            <param name="head">开始节点</param>
            <param name="end">结束节点</param>
            <returns></returns>
        </member>
    </members>
</doc>
