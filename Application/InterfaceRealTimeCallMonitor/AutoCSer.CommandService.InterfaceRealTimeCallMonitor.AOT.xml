<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.CommandService.InterfaceRealTimeCallMonitor.AOT</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData">
            <summary>
            实时调用信息序列化数据
            </summary>
            <summary>
            实时调用信息序列化数据
            </summary>
            <summary>
            实时调用信息序列化数据
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.CallType">
            <summary>
            调用接口类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.CallName">
            <summary>
            调用接口方法名称
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.StartTimestamp">
            <summary>
            开始调用时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.TimeoutTimestamp">
            <summary>
            调用超时时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.CompletedTimestamp">
            <summary>
            调用完成时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.StepTimestamp">
            <summary>
            最后一次设置自定义调用步骤时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.Step">
            <summary>
            最后一次设置的自定义调用步骤
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.Type">
            <summary>
            调用类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.IsException">
            <summary>
            接口是否执行异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.isTimeout">
            <summary>
            是否已经触发超时操作
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.#ctor">
            <summary>
            实时调用信息序列化数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.#ctor(System.String,System.String,System.Int32,System.UInt16)">
            <summary>
            实时调用信息
            </summary>
            <param name="callType">Call interface type
            调用接口类型</param>
            <param name="callName">调用接口方法名称</param>
            <param name="timeoutMilliseconds">调用超时毫秒数</param>
            <param name="type">调用类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.Completed(System.Boolean)">
            <summary>
            调用完成
            </summary>
            <param name="isException">接口是否执行异常</param>
            <returns>是否需要新增超时调用</returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.checkTimeout(System.Int64)">
            <summary>
            检查是否需要新增超时调用
            </summary>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.SetStep(System.Int32)">
            <summary>
            设置自定义调用步骤
            </summary>
            <param name="step">自定义调用步骤</param>
            <returns>是否需要新增超时调用</returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.CheckTimeout(System.Int64)">
            <summary>
            检查调用是否超时
            </summary>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.CheckTimeout">
            <summary>
            检查是否需要新增超时调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData@)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.BinarySerializeMemberTypes">
            <summary>
            Get the binary serialization type information
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.DefaultConstructor">
            <summary>
            Call the default constructor
            调用默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallData.DefaultConstructorReflection">
            <summary>
            AOT code generation call activation reflection
            AOT 代码生成调用激活反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp">
            <summary>
            实时调用时间戳信息
            </summary>
            <summary>
            实时调用时间戳信息
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp.ServerTimestamp">
            <summary>
            服务端时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp.CallData">
            <summary>
            实时调用信息序列化数据
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp@)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp.BinarySerializeMemberTypes">
            <summary>
            Get the binary serialization type information
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.IInterfaceRealTimeCallMonitorClientSocketEvent">
            <summary>
            接口实时调用监视服务客户端接口
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.IInterfaceRealTimeCallMonitorClientSocketEvent.InterfaceRealTimeCallMonitor">
            <summary>
            接口实时调用监视服务接口
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.AotMethod">
            <summary>
            触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.AotMethod.Call">
            <summary>
            AOT code generation call activation reflection
            AOT 代码生成调用激活反射
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitor.AotMethod.binaryDeserializeMemberTypes">
            <summary>
            Binary deserialization member type activation reflection
            二进制反序列化成员类型激活反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService">
            <summary>
            接口实时调用监视服务接口
            </summary>
            <summary>
            接口实时调用监视服务接口
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.GetCount">
            <summary>
            获取未完成调用数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.Check(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.Net.CommandServerKeepCallback)">
            <summary>
            接口监视服务在线检查
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="callback">在线检查回调</param>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.GetTimeout(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp})">
            <summary>
            获取超时调用数据
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="callback">实时调用时间戳信息回调</param>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.GetException(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp})">
            <summary>
            获取异常调用数据
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="callback">实时调用时间戳信息回调</param>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.Start(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,System.String,System.String,System.Int32,System.UInt16)">
            <summary>
            新增一个实时调用信息
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="callIdentity">调用标识</param>
            <param name="callType">Call interface type
            调用接口类型</param>
            <param name="callName">The name of the interface method to be called
            调用接口方法名称</param>
            <param name="timeoutMilliseconds">超时毫秒数</param>
            <param name="type">调用类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.Completed(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,System.Boolean)">
            <summary>
            调用完成
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="callIdentity">调用标识</param>
            <param name="isException">接口是否执行异常</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.SetStep(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,System.Int32)">
            <summary>
            设置自定义调用步骤
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="callIdentity">调用标识</param>
            <param name="step">自定义调用步骤</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.GetTimeoutCount(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue)">
            <summary>
            获取超时调用数量
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <returns>超时调用数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorService.GetTimeoutCalls(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int32,AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp})">
            <summary>
            获取指定数量的超时调用
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="count">Get the quantity of data
            获取数据数量</param>
            <param name="callback">超时调用回调</param>
        </member>
        <member name="T:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController">
            <summary>
            接口实时调用监视服务接口 客户端接口
            </summary>
            <summary>
            
            </summary>
            <summary>
            接口实时调用监视服务接口 client interface
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.Check(System.Action{AutoCSer.Net.CommandClientReturnValue,AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            接口监视服务在线检查
            </summary>
            <param name="callback">在线检查回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.GetException(System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取异常调用数据
            </summary>
            <param name="callback">实时调用时间戳信息回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.GetTimeout(System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取超时调用数据
            </summary>
            <param name="callback">实时调用时间戳信息回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.Check">
            <summary>
            接口监视服务在线检查
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.Completed(System.Int64,System.Boolean)">
            <summary>
            调用完成
            </summary>
            <param name="callIdentity">调用标识</param>
            <param name="isException">接口是否执行异常</param>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.GetCount">
            <summary>
            获取未完成调用数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.GetException">
            <summary>
            获取异常调用数据
            </summary>
            <returns>实时调用时间戳信息回调</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.GetTimeout">
            <summary>
            获取超时调用数据
            </summary>
            <returns>实时调用时间戳信息回调</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.GetTimeoutCalls(System.Int32)">
            <summary>
            获取指定数量的超时调用
            </summary>
            <param name="count">Get the quantity of data 
                       获取数据数量</param>
            <returns>超时调用回调</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.GetTimeoutCount">
            <summary>
            获取超时调用数量
            </summary>
            <returns>超时调用数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.SetStep(System.Int64,System.Int32)">
            <summary>
            设置自定义调用步骤
            </summary>
            <param name="callIdentity">调用标识</param>
            <param name="step">自定义调用步骤</param>
        </member>
        <member name="M:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceClientController.Start(System.Int64,System.String,System.String,System.Int32,System.UInt16)">
            <summary>
            新增一个实时调用信息
            </summary>
            <param name="callIdentity">调用标识</param>
            <param name="callType">Call interface type 
                       调用接口类型</param>
            <param name="callName">The name of the interface method to be called 
                       调用接口方法名称</param>
            <param name="timeoutMilliseconds">超时毫秒数</param>
            <param name="type">调用类型</param>
        </member>
        <member name="T:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController">
            <summary>
            接口实时调用监视服务接口 客户端接口 client controller
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op3__.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op3__@)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op3__.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op3__.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            Binary deserialization
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op3__.BinarySerializeMemberTypes">
            <summary>
            Get the binary serialization type information
            获取二进制序列化类型信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op3__.BinarySerialize">
            <summary>
            二进制序列化代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip1__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip1__@)">
            <summary>
            Simple binary serialization
            简单二进制序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip1__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            Simple binary serialization
            简单二进制序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip1__.SimpleSerialize">
            <summary>
            AOT code generation call activation reflection
            AOT 代码生成调用激活反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op2__.SimpleDeserialize(System.Byte*,AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op2__@,System.Byte*)">
            <summary>
            Simple binary deserialization
            简单二进制反序列化
            </summary>
            <param name="start"></param>
            <param name="value"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op2__.simpleDeserialize(System.Byte*,System.Byte*)">
            <summary>
            Simple binary deserialization
            简单二进制反序列化
            </summary>
            <param name="__start__"></param>
            <param name="__end__"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__op2__.SimpleSerialize">
            <summary>
            AOT code generation call activation reflection
            AOT 代码生成调用激活反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip5__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip5__@)">
            <summary>
            Simple binary serialization
            简单二进制序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip5__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            Simple binary serialization
            简单二进制序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip5__.SimpleSerialize">
            <summary>
            AOT code generation call activation reflection
            AOT 代码生成调用激活反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip7__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip7__@)">
            <summary>
            Simple binary serialization
            简单二进制序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip7__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            Simple binary serialization
            简单二进制序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip7__.SimpleSerialize">
            <summary>
            AOT code generation call activation reflection
            AOT 代码生成调用激活反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip8__.SimpleSerialize(AutoCSer.Memory.UnmanagedStream,AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip8__@)">
            <summary>
            Simple binary serialization
            简单二进制序列化
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip8__.simpleSerialize(AutoCSer.Memory.UnmanagedStream)">
            <summary>
            Simple binary serialization
            简单二进制序列化
            </summary>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__ip8__.SimpleSerialize">
            <summary>
            AOT code generation call activation reflection
            AOT 代码生成调用激活反射
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#Check(System.Action{AutoCSer.Net.CommandClientReturnValue,AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            接口监视服务在线检查
            </summary>
            <param name="callback">在线检查回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#GetException(System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取异常调用数据
            </summary>
            <param name="callback">实时调用时间戳信息回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#GetTimeout(System.Action{AutoCSer.Net.CommandClientReturnValue{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp},AutoCSer.Net.KeepCallbackCommand})">
            <summary>
            获取超时调用数据
            </summary>
            <param name="callback">实时调用时间戳信息回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#Check">
            <summary>
            接口监视服务在线检查
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#Completed(System.Int64,System.Boolean)">
            <summary>
            调用完成
            </summary>
            <param name="callIdentity">调用标识</param>
            <param name="isException">接口是否执行异常</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#GetCount">
            <summary>
            获取未完成调用数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#GetException">
            <summary>
            获取异常调用数据
            </summary>
            <returns>实时调用时间戳信息回调</returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#GetTimeout">
            <summary>
            获取超时调用数据
            </summary>
            <returns>实时调用时间戳信息回调</returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#GetTimeoutCalls(System.Int32)">
            <summary>
            获取指定数量的超时调用
            </summary>
            <param name="count">Get the quantity of data  
                                  获取数据数量</param>
            <returns>超时调用回调</returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#GetTimeoutCount">
            <summary>
            获取超时调用数量
            </summary>
            <returns>超时调用数量</returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#SetStep(System.Int64,System.Int32)">
            <summary>
            设置自定义调用步骤
            </summary>
            <param name="callIdentity">调用标识</param>
            <param name="step">自定义调用步骤</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.AutoCSer#CommandService#IInterfaceRealTimeCallMonitorServiceClientController#Start(System.Int64,System.String,System.String,System.Int32,System.UInt16)">
            <summary>
            新增一个实时调用信息
            </summary>
            <param name="callIdentity">调用标识</param>
            <param name="callType">Call interface type  
                                  调用接口类型</param>
            <param name="callName">The name of the interface method to be called  
                                  调用接口方法名称</param>
            <param name="timeoutMilliseconds">超时毫秒数</param>
            <param name="type">调用类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__CommandClientControllerMethods__">
            <summary>
            获取客户端接口方法信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.InterfaceRealTimeCallMonitorServiceClientController.__CommandClientControllerConstructor__">
            <summary>
            AOT code generation call activation reflection
            AOT 代码生成调用激活反射
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum">
            <summary>
            接口实时调用监视服务接口 (The method sequence number maps the enumeration type)
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.Check">
            <summary>
            [0] 接口监视服务在线检查
            AutoCSer.Net.CommandServerSocket socket 
            AutoCSer.Net.CommandServerCallQueue queue 
            AutoCSer.Net.CommandServerKeepCallback callback 在线检查回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.Completed">
            <summary>
            [1] 调用完成
            AutoCSer.Net.CommandServerSocket socket 
            AutoCSer.Net.CommandServerCallQueue queue 
            long callIdentity 调用标识
            bool isException 接口是否执行异常
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.GetCount">
            <summary>
            [2] 获取未完成调用数量
            返回值 int 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.GetException">
            <summary>
            [3] 获取异常调用数据
            AutoCSer.Net.CommandServerSocket socket 
            AutoCSer.Net.CommandServerCallQueue queue 
            AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp} callback 实时调用时间戳信息回调
            返回值 AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.GetTimeout">
            <summary>
            [4] 获取超时调用数据
            AutoCSer.Net.CommandServerSocket socket 
            AutoCSer.Net.CommandServerCallQueue queue 
            AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp} callback 实时调用时间戳信息回调
            返回值 AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.GetTimeoutCalls">
            <summary>
            [5] 获取指定数量的超时调用
            AutoCSer.Net.CommandServerSocket socket 
            AutoCSer.Net.CommandServerCallQueue queue 
            int count Get the quantity of data 
                       获取数据数量
            AutoCSer.Net.CommandServerKeepCallback{AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp} callback 超时调用回调
            返回值 AutoCSer.CommandService.InterfaceRealTimeCallMonitor.CallTimestamp 
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.GetTimeoutCount">
            <summary>
            [6] 获取超时调用数量
            AutoCSer.Net.CommandServerSocket socket 
            AutoCSer.Net.CommandServerCallQueue queue 
            返回值 int 超时调用数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.SetStep">
            <summary>
            [7] 设置自定义调用步骤
            AutoCSer.Net.CommandServerSocket socket 
            AutoCSer.Net.CommandServerCallQueue queue 
            long callIdentity 调用标识
            int step 自定义调用步骤
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.IInterfaceRealTimeCallMonitorServiceMethodEnum.Start">
            <summary>
            [8] 新增一个实时调用信息
            AutoCSer.Net.CommandServerSocket socket 
            AutoCSer.Net.CommandServerCallQueue queue 
            long callIdentity 调用标识
            string callType Call interface type 
                       调用接口类型
            string callName The name of the interface method to be called 
                       调用接口方法名称
            int timeoutMilliseconds 超时毫秒数
            ushort type 调用类型
            </summary>
        </member>
    </members>
</doc>
