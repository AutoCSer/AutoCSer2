<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.CommandService.DistributedLock</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount">
            <summary>
            异步可重入锁计数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.reentrantLockManager">
            <summary>
            分布式锁管理器
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.key">
            <summary>
            可重入锁关键字
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.isLock">
            <summary>
            锁客户端状态是否有效
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.#ctor(AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockManager,AutoCSer.CommandService.DistributedLock.ReentrantKey)">
            <summary>
            异步可重入锁计数
            </summary>
            <param name="reentrantLockManager">分布式锁管理器</param>
            <param name="key">可重入锁关键字</param>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.count">
            <summary>
            锁重入计数
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.Enter(AutoCSer.CommandService.DistributedLock.ReentrantKey@,System.Boolean@)">
            <summary>
            申请锁
            </summary>
            <param name="key"></param>
            <param name="isKey"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.Enter">
            <summary>
            申请锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.enter">
            <summary>
            申请锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.Release">
            <summary>
            释放锁
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.release">
            <summary>
            释放锁对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.ReleaseAsync">
            <summary>
            释放锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount.releaseAsync">
            <summary>
            释放锁请求保持心跳对象，用于该接口在 Standard 2.0 版本下存在同步调用，调用方请调用 ConfigureAwait(false)
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount`1">
            <summary>
            异步可重入锁计数
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount`1.request">
            <summary>
            锁请求保持心跳对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount`1.isLock">
            <summary>
            锁客户端状态是否有效
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount`1.#ctor(AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockManager,AutoCSer.CommandService.DistributedLock.ReentrantKey,AutoCSer.CommandService.DistributedLockKeepRequest{`0})">
            <summary>
            异步可重入锁计数
            </summary>
            <param name="reentrantLockManager">分布式锁管理器</param>
            <param name="key">可重入锁关键字</param>
            <param name="request">锁请求保持心跳对象</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount`1.release">
            <summary>
            释放锁对象
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount`1.releaseAsync">
            <summary>
            释放锁对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1">
            <summary>
            分段字典锁管理器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.controller">
            <summary>
            分布式锁服务端
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.#ctor(AutoCSer.CommandService.DistributedLockController)">
            <summary>
            分段字典锁管理器
            </summary>
            <param name="controller">分布式锁服务端</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.createManager(`0)">
            <summary>
            创建分布式锁管理器
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.get(`0)">
            <summary>
            根据关键字获取锁管理器
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.Enter(`0,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识，失败返回 0</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.TryEnter(`0,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.TryEnter(`0,System.Int32,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="callback">锁请求标识，失败返回 0</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.EnterAgain(System.Int64,`0,System.Int32)">
            <summary>
            锁请求断线重连
            </summary>
            <param name="requestID">锁请求标识</param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.Keep(`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.FragmentDictionaryManager`1.Release(`0,System.Int64)">
            <summary>
            释放锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock.ReentrantKey">
            <summary>
            可重入锁缓存关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.ReentrantKey.keyType">
            <summary>
            关键字类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.ReentrantKey.key">
            <summary>
            关键字
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.ReentrantKey.#ctor(System.Type,System.Object)">
            <summary>
            可重入锁缓存关键字
            </summary>
            <param name="keyType"></param>
            <param name="key"></param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.ReentrantKey.Equals(AutoCSer.CommandService.DistributedLock.ReentrantKey)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.ReentrantKey.Equals(AutoCSer.CommandService.DistributedLock.ReentrantKey@)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.ReentrantKey.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.ReentrantKey.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockManager">
            <summary>
            异步可重入锁管理器（非线程安全，不支持多线程并发操作同一个异步上下文）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockManager.manager">
            <summary>
            异步可重入锁管理器
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockManager.Get">
            <summary>
            获取异步可重入锁管理器，第一次（最外层）调用该方法的调用点为当前异步可重入锁的异步上下文，对于上层异步调用无效
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockManager.Locks">
            <summary>
            异步可重入锁计数集合
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockManager.Get(AutoCSer.CommandService.DistributedLock.ReentrantKey)">
            <summary>
            获取异步可重入锁计数
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockManager.CreateAsync``1(AutoCSer.CommandService.DistributedLock.ReentrantKey,AutoCSer.CommandService.DistributedLockKeepRequest{``0})">
            <summary>
            创建可重入锁对象，用于该接口在 Standard 2.0 版本下存在同步调用，调用方请调用 ConfigureAwait(false)
            </summary>
            <param name="key"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock.Request">
            <summary>
            分布式锁请求
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.controller">
            <summary>
            分布式锁服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.LockManager">
            <summary>
            分布式锁管理器
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.callback">
            <summary>
            锁请求回调
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.releaseSeconds">
            <summary>
            自动释放锁超时秒数，用于客户端掉线没有释放锁的情况
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.isTimeout">
            <summary>
            是否已经超时
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.isLock">
            <summary>
            是否已经申请到锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.RequestID">
            <summary>
            请求标识ID
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.keepTimeoutSeconds">
            <summary>
            心跳设置超时秒计数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.Request.WaitNext">
            <summary>
            等待链表下一个请求
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.#ctor(AutoCSer.CommandService.DistributedLockController,AutoCSer.CommandService.DistributedLockManager,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="controller">分布式锁服务端</param>
            <param name="lockManager">分布式锁管理器</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.#ctor(AutoCSer.CommandService.DistributedLockController,AutoCSer.CommandService.DistributedLockManager,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="controller">分布式锁服务端</param>
            <param name="lockManager">分布式锁管理器</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识，失败返回 0</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.Callback">
            <summary>
            锁请求回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.GetRequestID">
            <summary>
            添加超时任务并返回请求标识ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.SetRequestID(System.Int64)">
            <summary>
            断线重连
            </summary>
            <param name="requestID"></param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.getNextTimeoutSeconds">
            <summary>
            获取下一个超时秒计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.OnTimer">
            <summary>
            释放锁
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.WaitTimeout">
            <summary>
            等待超时处理
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.Timeout(AutoCSer.CommandService.DistributedLock.RequestTimeoutType)">
            <summary>
            超时处理
            </summary>
            <param name="type">请求超时处理类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.WaitCallback">
            <summary>
            等待锁请求回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.Request.Keep">
            <summary>
            保持心跳
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock.RequestLinkNode">
            <summary>
            锁请求链表节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.RequestLinkNode.PreviousRequest">
            <summary>
            上一个请求节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.RequestLinkNode.NextRequest">
            <summary>
            下一个请求节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.RequestLinkNode.RemoveEnd">
            <summary>
            从链表中删除当前尾节点并返回下一个尾节点
            </summary>
            <returns>下一个尾节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.RequestLinkNode.Remove">
            <summary>
            从链表中删除当前节点
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock.RequestTimeout">
            <summary>
            分布式锁请求超时释放处理
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.RequestTimeout.request">
            <summary>
            分布式锁请求
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.RequestTimeout.type">
            <summary>
            请求超时处理类型
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.RequestTimeout.#ctor(AutoCSer.CommandService.DistributedLock.Request,AutoCSer.CommandService.DistributedLock.RequestTimeoutType)">
            <summary>
            分布式锁请求超时释放处理
            </summary>
            <param name="request">分布式锁请求</param>
            <param name="type">请求超时处理类型</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock.RequestTimeout.RunTask">
            <summary>
            分布式锁请求超时释放处理
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock.RequestTimeoutType">
            <summary>
            请求超时处理类型
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.RequestTimeoutType.Release">
            <summary>
            释放锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock.RequestTimeoutType.Wait">
            <summary>
            等待锁
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLock`1">
            <summary>
            分布式锁服务端
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLock`1.manager">
            <summary>
            分布式锁管理器
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock`1.#ctor(AutoCSer.Threading.DistributedMillisecondIdentityGenerator,AutoCSer.CommandService.IDistributedLockManager{`0})">
            <summary>
            分布式锁服务端
            </summary>
            <param name="identityGenerator">请求标识生成器</param>
            <param name="manager">分布式锁管理器</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock`1.Enter(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock`1.TryEnter(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock`1.TryEnter(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int32,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="callback">锁请求标识，失败返回 0</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock`1.EnterAgain(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,`0,System.Int32)">
            <summary>
            锁请求断线重连
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="requestID">锁请求标识</param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock`1.Keep(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock`1.AutoCSer#CommandService#IDistributedLock{T}#TryKeep(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLock`1.Release(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int64)">
            <summary>
            释放锁
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockAsynchronousReentrant">
            <summary>
            异步可重入锁释放对象（非线程安全，不支持多线程并发操作同一个异步上下文）
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockAsynchronousReentrant.reentrantLockCount">
            <summary>
            异步可重入锁计数
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockAsynchronousReentrant.isRelease">
            <summary>
            是否释放锁
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockAsynchronousReentrant.#ctor(AutoCSer.CommandService.DistributedLock.AsynchronousReentrantLockCount)">
            <summary>
            异步可重入锁释放对象
            </summary>
            <param name="reentrantLockCount"></param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockAsynchronousReentrant.Dispose">
            <summary>
            释放锁
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockAsynchronousReentrant.ReleaseAsync">
            <summary>
            释放锁
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockAsynchronousReentrantClient`1">
            <summary>
            异步可重入锁客户端（非线程安全，不支持多线程并发操作同一个异步上下文）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockAsynchronousReentrantClient`1.client">
            <summary>
            分布式锁客户端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockAsynchronousReentrantClient`1.reentrantLockManager">
            <summary>
            异步可重入锁管理器
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockAsynchronousReentrantClient`1.#ctor(AutoCSer.CommandService.DistributedLockClient{`0})">
            <summary>
            异步可重入锁客户端，注意调用点要在第一次申请锁之前的异步上下文，不允许向外层异步上下文传递此参数
            </summary>
            <param name="client">分布式锁客户端</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockAsynchronousReentrantClient`1.EnterAsync(`0,System.Int32,System.Int32)">
            <summary>
            请求可重入锁（非线程安全，不支持多线程并发操作同一个异步上下文）
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>异步可重入锁释放对象</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockAsynchronousReentrantClient`1.TryEnterAsync(`0,System.Int32,System.Int32)">
            <summary>
            尝试请求可重入锁（非线程安全，不支持多线程并发操作同一个异步上下文）
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>异步可重入锁释放对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockAsynchronousReentrantClient`1.TryEnterAsync(`0,System.Int32,System.Int32,System.Int32)">
            <summary>
            尝试请求可重入锁（非线程安全，不支持多线程并发操作同一个异步上下文）
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>异步可重入锁释放对象，失败返回 null</returns>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockClient`1">
            <summary>
            分布式锁客户端
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockClient`1.client">
            <summary>
            分布式锁客户端套接字事件
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.#ctor(AutoCSer.CommandService.IDistributedLockClientSocketEvent{`0})">
            <summary>
            分布式锁客户端
            </summary>
            <param name="client">分布式锁客户端套接字事件</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.createAsync(`0,System.Int64,System.Int32,System.Int32)">
            <summary>
            创建锁请求保持心跳对象
            </summary>
            <param name="key"></param>
            <param name="requestID"></param>
            <param name="releaseSeconds"></param>
            <param name="keepSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.EnterAsync(`0,System.Int32,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>锁请求保持心跳对象</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.create(`0,System.Int64,System.Int32,System.Int32)">
            <summary>
            创建锁请求保持心跳对象
            </summary>
            <param name="key"></param>
            <param name="requestID"></param>
            <param name="releaseSeconds"></param>
            <param name="keepSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.Enter(`0,System.Int32,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>锁请求保持心跳对象</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.createAsync(`0,System.Int64,System.Int32)">
            <summary>
            锁请求对象
            </summary>
            <param name="key"></param>
            <param name="requestID"></param>
            <param name="releaseSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.EnterAsync(`0,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求对象</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.create(`0,System.Int64,System.Int32)">
            <summary>
            锁请求对象
            </summary>
            <param name="key"></param>
            <param name="requestID"></param>
            <param name="releaseSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.Enter(`0,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求对象</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.TryEnterAsync(`0,System.Int32,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>锁请求保持心跳对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.TryEnter(`0,System.Int32,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>锁请求保持心跳对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.TryEnterAsync(`0,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.TryEnter(`0,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.TryEnterTimeoutAsync(`0,System.Int32,System.Int32,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>锁请求保持心跳对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.TryEnterTimeout(`0,System.Int32,System.Int32,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="keepSeconds">心跳间隔秒数</param>
            <returns>锁请求保持心跳对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.TryEnterTimeoutAsync(`0,System.Int32,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <returns>锁请求对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.TryEnterTimeout(`0,System.Int32,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <returns>锁请求对象，失败返回 null</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockClient`1.GetAsynchronousReentrant">
            <summary>
            获取异步可重入锁客户端，注意调用点要在第一次申请锁之前的异步上下文，不允许向外层异步上下文传递此参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockController">
            <summary>
            分布式锁服务端
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockController.IdentityGenerator">
            <summary>
            请求标识生成器
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockController.#ctor(AutoCSer.Threading.DistributedMillisecondIdentityGenerator)">
            <summary>
            分布式锁服务端
            </summary>
            <param name="identityGenerator">请求标识生成器</param>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockKeepRequest`1">
            <summary>
            锁请求保持心跳对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockKeepRequest`1.requestID">
            <summary>
            锁标识ID
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockKeepRequest`1.client">
            <summary>
            分布式锁客户端套接字事件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockKeepRequest`1.key">
            <summary>
            锁关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockKeepRequest`1.releaseSeconds">
            <summary>
            自动释放锁超时秒数，用于客户端掉线没有释放锁的情况
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.#ctor(AutoCSer.CommandService.IDistributedLockClientSocketEvent{`0},`0,System.Int64,System.Int32,System.Int32)">
            <summary>
            锁请求对象
            </summary>
            <param name="client">分布式锁客户端套接字事件</param>
            <param name="key">锁关键字</param>
            <param name="requestID">锁标识ID</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="keepSeconds">心跳间隔秒数</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.StartKeepAsync">
            <summary>
            启动心跳
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.StartKeep">
            <summary>
            启动心跳
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.getNextTimeoutSeconds">
            <summary>
            获取下一个超时秒计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.OnTimerAsync">
            <summary>
            定时心跳
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.Dispose">
            <summary>
            释放锁
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.ReleaseAsync">
            <summary>
            释放锁
            </summary>
            <returns></returns>
        </member>
        <member name="P:AutoCSer.CommandService.DistributedLockKeepRequest`1.IsLock">
            <summary>
            锁客户端状态是否有效
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockKeepRequest`1.linkNode">
            <summary>
            锁请求队列节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.DistributedLockKeepRequest`1.AutoCSer#CommandService#IDistributedLockRequest#PreviousRequest">
            <summary>
            上一个请求节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.DistributedLockKeepRequest`1.AutoCSer#CommandService#IDistributedLockRequest#NextRequest">
            <summary>
            下一个请求节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.AutoCSer#CommandService#IDistributedLockRequest#Remove">
            <summary>
            从链表中删除当前节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.AutoCSer#CommandService#IDistributedLockRequest#RemoveEnd">
            <summary>
            从链表中删除当前尾节点并返回下一个尾节点
            </summary>
            <returns>下一个尾节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.AutoCSer#CommandService#IDistributedLockRequest#RemoveAgain(AutoCSer.LeftArray{AutoCSer.CommandService.IDistributedLockRequest}@)">
            <summary>
            从链表中删除当前尾节点并返回下一个尾节点
            </summary>
            <param name="requests">需要短线重连的锁请求集合</param>
            <returns>下一个尾节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.AutoCSer#CommandService#IDistributedLockRequest#EnterAgain">
            <summary>
            断线重连
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockKeepRequest`1.onEnterAgain(AutoCSer.Net.CommandClientReturnValue{System.Int64})">
            <summary>
            断线重连回调
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockManager">
            <summary>
            分布式锁管理器
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockManager.concurrent">
            <summary>
            当前允许并发数量
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockManager.request">
            <summary>
            当前锁请求
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockManager.requests">
            <summary>
            锁请求集合
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockManager.waitRequestHead">
            <summary>
            等待锁请求首节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockManager.waitRequestEnd">
            <summary>
            等待锁请求尾节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.#ctor(System.Byte)">
            <summary>
            分布式锁管理器
            </summary>
            <param name="concurrent">允许并发数量</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.IsRequest(AutoCSer.CommandService.DistributedLock.Request)">
            <summary>
            判断请求是否存在
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.Release(AutoCSer.CommandService.DistributedLock.Request)">
            <summary>
            锁请求超时释放处理
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.remove">
            <summary>
            移除当前锁管理器
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.next">
            <summary>
            处理下一个等待请求
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.append(AutoCSer.CommandService.DistributedLock.Request)">
            <summary>
            添加锁请求
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.appendWait(AutoCSer.CommandService.DistributedLock.Request)">
            <summary>
            添加等待请求
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.Enter(AutoCSer.CommandService.DistributedLockController,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64}@)">
            <summary>
            请求锁
            </summary>
            <param name="controller">分布式锁服务端</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识，失败返回 0</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.TryEnter(AutoCSer.CommandService.DistributedLockController,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="controller">分布式锁服务端</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.Enter(AutoCSer.CommandService.DistributedLockController,System.Int32,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64}@)">
            <summary>
            请求锁
            </summary>
            <param name="controller">分布式锁服务端</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="callback">锁请求标识，失败返回 0</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.EnterAgain(AutoCSer.CommandService.DistributedLockController,System.Int64,System.Int32)">
            <summary>
            锁请求断线重连
            </summary>
            <param name="controller">分布式锁服务端</param>
            <param name="requestID">锁请求标识</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.Keep(System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="requestID">锁请求标识</param>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager.Release(System.Int64)">
            <summary>
            释放锁
            </summary>
            <param name="requestID">锁请求标识</param>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockManager`1">
            <summary>
            分布式锁管理器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockManager`1.manager">
            <summary>
            分布式锁管理器
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockManager`1.key">
            <summary>
            锁关键字
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager`1.#ctor(AutoCSer.CommandService.IDistributedLockManager{`0},`0,System.Byte)">
            <summary>
            分布式锁管理器
            </summary>
            <param name="manager">分布式锁管理器</param>
            <param name="key">锁关键字</param>
            <param name="concurrent">允许并发数量</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockManager`1.remove">
            <summary>
            移除当前锁管理器
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockRequest`1">
            <summary>
            锁请求对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequest`1.client">
            <summary>
            分布式锁客户端套接字事件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequest`1.requestID">
            <summary>
            锁标识ID
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequest`1.key">
            <summary>
            锁关键字
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequest`1.releaseSeconds">
            <summary>
            自动释放锁超时秒数，用于客户端掉线没有释放锁的情况
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.#ctor(AutoCSer.CommandService.IDistributedLockClientSocketEvent{`0},`0,System.Int64,System.Int32)">
            <summary>
            锁请求对象
            </summary>
            <param name="client">分布式锁客户端套接字事件</param>
            <param name="key">锁关键字</param>
            <param name="requestID">锁标识ID</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.System#IDisposable#Dispose">
            <summary>
            释放锁
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.ReleaseAsync">
            <summary>
            释放锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.TryKeep">
            <summary>
            保持心跳延长锁自动超时（仅通知服务端）
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.KeepAsync">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.Keep">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="P:AutoCSer.CommandService.DistributedLockRequest`1.IsLock">
            <summary>
            锁客户端状态是否有效
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequest`1.linkNode">
            <summary>
            锁请求队列节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.DistributedLockRequest`1.AutoCSer#CommandService#IDistributedLockRequest#PreviousRequest">
            <summary>
            上一个请求节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.DistributedLockRequest`1.AutoCSer#CommandService#IDistributedLockRequest#NextRequest">
            <summary>
            下一个请求节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.AutoCSer#CommandService#IDistributedLockRequest#Remove">
            <summary>
            从链表中删除当前节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.AutoCSer#CommandService#IDistributedLockRequest#RemoveEnd">
            <summary>
            从链表中删除当前尾节点并返回下一个尾节点
            </summary>
            <returns>下一个尾节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.AutoCSer#CommandService#IDistributedLockRequest#RemoveAgain(AutoCSer.LeftArray{AutoCSer.CommandService.IDistributedLockRequest}@)">
            <summary>
            从链表中删除当前尾节点并返回下一个尾节点
            </summary>
            <param name="requests">需要短线重连的锁请求集合</param>
            <returns>下一个尾节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.AutoCSer#CommandService#IDistributedLockRequest#EnterAgain">
            <summary>
            断线重连
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequest`1.onEnterAgain(AutoCSer.Net.CommandClientReturnValue{System.Int64})">
            <summary>
            断线重连回调
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="T:AutoCSer.CommandService.DistributedLockRequestManager`1">
            <summary>
            锁请求链表管理，用于断线重连
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequestManager`1.client">
            <summary>
            分布式锁客户端套接字事件
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequestManager`1.linkLock">
            <summary>
            锁请求链表访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequestManager`1.linkEnd">
            <summary>
            锁请求链表尾节点
            </summary>
        </member>
        <member name="F:AutoCSer.CommandService.DistributedLockRequestManager`1.count">
            <summary>
            锁请求数量
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequestManager`1.#ctor(AutoCSer.CommandService.IDistributedLockClientSocketEvent{`0})">
            <summary>
            锁请求队列管理
            </summary>
            <param name="client">分布式锁客户端套接字事件</param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequestManager`1.Append(AutoCSer.CommandService.IDistributedLockRequest)">
            <summary>
            添加锁请求
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequestManager`1.Remove(AutoCSer.CommandService.IDistributedLockRequest)">
            <summary>
            删除锁请求
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequestManager`1.EnterAgain">
            <summary>
            断线重新申请
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.DistributedLockRequestManager`1.enterAgain(AutoCSer.LeftArray{AutoCSer.CommandService.IDistributedLockRequest})">
            <summary>
            断线重新申请
            </summary>
            <param name="requests"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.IDistributedLock`1">
            <summary>
            分布式锁服务端接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLock`1.Enter(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识</param>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLock`1.TryEnter(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLock`1.TryEnter(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int32,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="callback">锁请求标识，失败返回 0</param>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLock`1.EnterAgain(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,System.Int64,`0,System.Int32)">
            <summary>
            锁请求断线重连
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="requestID">锁请求标识</param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLock`1.Keep(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLock`1.TryKeep(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLock`1.Release(AutoCSer.Net.CommandServerSocket,AutoCSer.Net.CommandServerCallQueue,`0,System.Int64)">
            <summary>
            释放锁
            </summary>
            <param name="socket"></param>
            <param name="queue"></param>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
        </member>
        <member name="T:AutoCSer.CommandService.IDistributedLockClient`1">
            <summary>
            分布式锁客户端接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.Enter(`0,System.Int32,System.Action{AutoCSer.Net.CommandClientReturnValue{System.Int64}})">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识回调</param>
            <returns>await</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.EnterAsync(`0,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.Enter(`0,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.TryEnter(`0,System.Int32,System.Action{AutoCSer.Net.CommandClientReturnValue{System.Int64}})">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识回调，失败返回 0</param>
            <returns>await</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.TryEnterAsync(`0,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.TryEnter(`0,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.TryEnter(`0,System.Int32,System.Int32,System.Action{AutoCSer.Net.CommandClientReturnValue{System.Int64}})">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="callback">锁请求标识回调，失败返回 0</param>
            <returns>await</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.TryEnterAsync(`0,System.Int32,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.TryEnter(`0,System.Int32,System.Int32)">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.EnterAgain(System.Int64,`0,System.Int32,System.Action{AutoCSer.Net.CommandClientReturnValue{System.Int64}})">
            <summary>
            锁请求断线重连
            </summary>
            <param name="requestID">锁请求标识</param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识回调，失败返回 0</param>
            <returns>await</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.Keep(`0,System.Int64,System.Action{AutoCSer.Net.CommandClientReturnValue{System.Boolean}})">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <param name="callback">回调委托，失败表示锁已经被释放</param>
            <returns>await</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.KeepAsync(`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.Keep(`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.TryKeep(`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时（仅通知服务端）
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns>await</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.Release(`0,System.Int64,AutoCSer.Net.CommandClientCallback)">
            <summary>
            释放锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <param name="callback">回调委托</param>
            <returns>await</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.ReleaseAsync(`0,System.Int64)">
            <summary>
            释放锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClient`1.Release(`0,System.Int64)">
            <summary>
            释放锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.CommandService.IDistributedLockClientSocketEvent">
            <summary>
            分布式锁客户端套接字事件
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClientSocketEvent.AppendRequest(AutoCSer.CommandService.IDistributedLockRequest)">
            <summary>
            添加新的锁请求对象
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockClientSocketEvent.RemoveRequest(AutoCSer.CommandService.IDistributedLockRequest)">
            <summary>
            删除锁请求对象
            </summary>
            <param name="request"></param>
        </member>
        <member name="T:AutoCSer.CommandService.IDistributedLockClientSocketEvent`1">
            <summary>
            分布式锁客户端套接字事件
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AutoCSer.CommandService.IDistributedLockClientSocketEvent`1.DistributedLockClient">
            <summary>
            分布式锁客户端接口
            </summary>
        </member>
        <member name="T:AutoCSer.CommandService.IDistributedLockManager`1">
            <summary>
            分布式锁管理器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockManager`1.Remove(`0)">
            <summary>
            删除关键字
            </summary>
            <param name="key"></param>
            <returns>是否存在关键字</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockManager`1.Enter(`0,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="callback">锁请求标识</param>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockManager`1.TryEnter(`0,System.Int32)">
            <summary>
            尝试请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockManager`1.TryEnter(`0,System.Int32,System.Int32,AutoCSer.Net.CommandServerCallback{System.Int64})">
            <summary>
            请求锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <param name="timeoutSeconds">请求超时时间</param>
            <param name="callback">锁请求标识，失败返回 0</param>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockManager`1.EnterAgain(System.Int64,`0,System.Int32)">
            <summary>
            锁请求断线重连
            </summary>
            <param name="requestID">锁请求标识</param>
            <param name="key">锁关键字</param>
            <param name="releaseSeconds">自动释放锁超时秒数，用于客户端掉线没有释放锁的情况</param>
            <returns>锁请求标识，失败返回 0</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockManager`1.Keep(`0,System.Int64)">
            <summary>
            保持心跳延长锁自动超时
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
            <returns>失败表示锁已经被释放</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockManager`1.Release(`0,System.Int64)">
            <summary>
            释放锁
            </summary>
            <param name="key">锁关键字</param>
            <param name="requestID">锁请求标识</param>
        </member>
        <member name="T:AutoCSer.CommandService.IDistributedLockRequest">
            <summary>
            锁请求对象
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.IDistributedLockRequest.IsLock">
            <summary>
            锁客户端状态是否有效
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.IDistributedLockRequest.PreviousRequest">
            <summary>
            上一个请求节点
            </summary>
        </member>
        <member name="P:AutoCSer.CommandService.IDistributedLockRequest.NextRequest">
            <summary>
            下一个请求节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockRequest.Remove">
            <summary>
            从链表中删除当前节点
            </summary>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockRequest.RemoveEnd">
            <summary>
            从链表中删除当前尾节点并返回下一个尾节点
            </summary>
            <returns>下一个尾节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockRequest.RemoveAgain(AutoCSer.LeftArray{AutoCSer.CommandService.IDistributedLockRequest}@)">
            <summary>
            从链表中删除当前尾节点并返回下一个尾节点
            </summary>
            <param name="requests">需要短线重连的锁请求集合</param>
            <returns>下一个尾节点</returns>
        </member>
        <member name="M:AutoCSer.CommandService.IDistributedLockRequest.EnterAgain">
            <summary>
            短线重连
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
