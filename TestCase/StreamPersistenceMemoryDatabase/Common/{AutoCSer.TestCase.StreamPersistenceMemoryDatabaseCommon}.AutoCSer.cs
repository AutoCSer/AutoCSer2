//This file is automatically generated by a program. Please do not modify it by yourself.
//本文件由程序自动生成，请不要自行修改
using System;
using System.Numerics;
using AutoCSer;

#if NoAutoCSer
#else
#pragma warning disable
namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game
{
        /// <summary>
        ///  client node interface
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode))]
        public partial interface IGameNodeClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monster"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter AddMonster(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monsters"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter AddMonsters(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="id"></param>
            /// <param name="speed"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter SetSpeed(int id, int speed);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="speeds"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter SetSpeeds(AutoCSer.KeyValue<int,int>[] speeds);
        }
        /// <summary>
        /// Get the direct return value API encapsulation (AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode)
        /// </summary>
        public sealed partial class IGameNodeReturnValueNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueNode<IGameNodeClientNode>
        {
            /// <summary>
            /// Get the direct return value API encapsulation (AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode)
            /// </summary>
            /// <param name="node">Log stream persistence memory database client node cache for client singleton</param>
            /// <param name="isIgnoreError">A default value of false indicates that exceptions and error messages are not ignored</param>
            /// <param name="isSynchronousCallback">The default value of false indicates that the IO thread synchronization callback is not used; otherwise, the subsequent operations of the API call await are not allowed to have synchronization blocking logic or long-term CPU occupation operations</param>
            public IGameNodeReturnValueNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClientNodeCache<IGameNodeClientNode> node, bool isIgnoreError = false, bool isSynchronousCallback = false) : base(node, isIgnoreError, isSynchronousCallback) { }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monster"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue AddMonster(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster)
            {
                return base.node.AddMonster(monster).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monsters"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue AddMonsters(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters)
            {
                return base.node.AddMonsters(monsters).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue Clear()
            {
                return base.node.Clear().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="id"></param>
            /// <param name="speed"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue SetSpeed(int id, int speed)
            {
                return base.node.SetSpeed(id, speed).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="speeds"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue SetSpeeds(AutoCSer.KeyValue<int,int>[] speeds)
            {
                return base.node.SetSpeeds(speeds).GetValue(isIgnoreError);
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 回调测试节点 client node interface
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode))]
        public partial interface ICallbackNodeClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter CallCustomPersistence(int value);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter Callback();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            System.Threading.Tasks.Task<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse<int>> Enumerable();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster> GetJsonValue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray> GetServerByteArray();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<int> GetValue();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            System.Threading.Tasks.Task<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse<int>> InputEnumerable(int value, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            System.Threading.Tasks.Task<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse<int>> InputKeepCallback(int value, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            System.Threading.Tasks.Task<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse<int>> KeepCallback();
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter PersistenceCallbackException();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<int> SetCallback();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<int> SetCallbackPersistence();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter SetJsonValue(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter SetServerByteArray(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResultAwaiter SetValue(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<int> SetValueCallback(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<int> SetValueCallbackPersistence(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.Net.SendOnlyCommand SetValuePersistenceSendOnly(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.Net.SendOnlyCommand SetValueSendOnly(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<bool> CheckSnapshot();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.Net.CallbackCommand CallInoutOutputCommand(int value, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult<int>> callback);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.Net.CallbackCommand CallbackCommand(System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult> callback);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.Net.CallbackCommand GetValueCommand(System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult<int>> callback);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.Net.CallbackCommand SetValueCommand(int value, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult> callback);
        }
        /// <summary>
        /// Get the direct return value API encapsulation (AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode)
        /// </summary>
        public sealed partial class ICallbackNodeReturnValueNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueNode<ICallbackNodeClientNode>
        {
            /// <summary>
            /// Get the direct return value API encapsulation (AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode)
            /// </summary>
            /// <param name="node">Log stream persistence memory database client node cache for client singleton</param>
            /// <param name="isIgnoreError">A default value of false indicates that exceptions and error messages are not ignored</param>
            /// <param name="isSynchronousCallback">The default value of false indicates that the IO thread synchronization callback is not used; otherwise, the subsequent operations of the API call await are not allowed to have synchronization blocking logic or long-term CPU occupation operations</param>
            public ICallbackNodeReturnValueNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClientNodeCache<ICallbackNodeClientNode> node, bool isIgnoreError = false, bool isSynchronousCallback = false) : base(node, isIgnoreError, isSynchronousCallback) { }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue CallCustomPersistence(int value)
            {
                return base.node.CallCustomPersistence(value).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue Callback()
            {
                return base.node.Callback().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public System.Threading.Tasks.Task<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse<int>> Enumerable()
            {
                return base.node.Enumerable();
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster> GetJsonValue()
            {
                return base.node.GetJsonValue().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray> GetServerByteArray()
            {
                return base.node.GetServerByteArray().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<int> GetValue()
            {
                return base.node.GetValue().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public System.Threading.Tasks.Task<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse<int>> InputEnumerable(int value, int count)
            {
                return base.node.InputEnumerable(value, count);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public System.Threading.Tasks.Task<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse<int>> InputKeepCallback(int value, int count)
            {
                return base.node.InputKeepCallback(value, count);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public System.Threading.Tasks.Task<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponse<int>> KeepCallback()
            {
                return base.node.KeepCallback();
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue PersistenceCallbackException()
            {
                return base.node.PersistenceCallbackException().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<int> SetCallback()
            {
                return base.node.SetCallback().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<int> SetCallbackPersistence()
            {
                return base.node.SetCallbackPersistence().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue SetJsonValue(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value)
            {
                return base.node.SetJsonValue(value).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue SetServerByteArray(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray value)
            {
                return base.node.SetServerByteArray(value).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue SetValue(int value)
            {
                return base.node.SetValue(value).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<int> SetValueCallback(int value)
            {
                return base.node.SetValueCallback(value).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<int> SetValueCallbackPersistence(int value)
            {
                return base.node.SetValueCallbackPersistence(value).GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.SendOnlyCommand SetValuePersistenceSendOnly(int value)
            {
                return base.node.SetValuePersistenceSendOnly(value);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.SendOnlyCommand SetValueSendOnly(int value)
            {
                return base.node.SetValueSendOnly(value);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<bool> CheckSnapshot()
            {
                return base.node.CheckSnapshot().GetValue(isIgnoreError);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CallbackCommand CallInoutOutputCommand(int value, System.Action<int> callback)
            {
                return base.node.CallInoutOutputCommand(value, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueCallback<int>(callback));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CallbackCommand CallInoutOutputCommand(int value, System.Action<int> callback, Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult> error___callback__)
            {
                return base.node.CallInoutOutputCommand(value, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueCallback<int>(callback, error___callback__));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CallbackCommand CallbackCommand(System.Action callback)
            {
                return base.node.CallbackCommand(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueCallback(callback));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CallbackCommand CallbackCommand(System.Action callback, Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult> error___callback__)
            {
                return base.node.CallbackCommand(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueCallback(callback, error___callback__));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CallbackCommand GetValueCommand(System.Action<int> callback)
            {
                return base.node.GetValueCommand(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueCallback<int>(callback));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CallbackCommand GetValueCommand(System.Action<int> callback, Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult> error___callback__)
            {
                return base.node.GetValueCommand(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueCallback<int>(callback, error___callback__));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CallbackCommand SetValueCommand(int value, System.Action callback)
            {
                return base.node.SetValueCommand(value, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueCallback(callback));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CallbackCommand SetValueCommand(int value, System.Action callback, Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseResult> error___callback__)
            {
                return base.node.SetValueCommand(value, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueCallback(callback, error___callback__));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// Customize the basic service node interface 
///            自定义基础服务节点接口 client node interface
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICustomServiceNode))]
        public partial interface ICustomServiceNodeClientNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeClientNode
        {
            /// <summary>
            /// 创建回调测试节点 ICallbackNode
            /// </summary>
            /// <param name="index">Node index information 
///            节点索引信息</param>
            /// <param name="key">Node global keyword 
///            节点全局关键字</param>
            /// <param name="nodeInfo">Server-side node information 
///            服务端节点信息</param>
            /// <returns>Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex> CreateCallbackNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建游戏测试节点 GameNode
            /// </summary>
            /// <param name="index">Node index information 
///            节点索引信息</param>
            /// <param name="key">Node global keyword 
///            节点全局关键字</param>
            /// <param name="nodeInfo">Server-side node information 
///            服务端节点信息</param>
            /// <returns>Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex> CreateGameNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game
{
        /// <summary>
        ///  local client node interface
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode))]
        public partial interface IGameNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monster"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> AddMonster(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monsters"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> AddMonsters(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="id"></param>
            /// <param name="speed"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetSpeed(int id, int speed);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="speeds"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetSpeeds(AutoCSer.KeyValue<int,int>[] speeds);
        }
        /// <summary>
        /// Get the direct return value API encapsulation (AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode)
        /// </summary>
        public sealed partial class IGameNodeReturnValueLocalNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueNode<IGameNodeLocalClientNode>
        {
            /// <summary>
            /// Get the direct return value API encapsulation (AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode)
            /// </summary>
            /// <param name="node">Log stream persistence memory database local client node cache for client singleton</param>
            /// <param name="isIgnoreError">A default value of false indicates that exceptions and error messages are not ignored</param>
            /// <param name="isSynchronousCallback">The default value of false indicates that the IO thread synchronization callback is not used; otherwise, the subsequent operations of the API call await are not allowed to have synchronization blocking logic or long-term CPU occupation operations</param>
            public IGameNodeReturnValueLocalNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache<IGameNodeLocalClientNode> node, bool isIgnoreError = false, bool isSynchronousCallback = false) : base(node, isIgnoreError, isSynchronousCallback) { }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monster"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue AddMonster(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster)
            {
                return base.getReturnValue(base.node.AddMonster(monster));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monsters"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue AddMonsters(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters)
            {
                return base.getReturnValue(base.node.AddMonsters(monsters));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue Clear()
            {
                return base.getReturnValue(base.node.Clear());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="id"></param>
            /// <param name="speed"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue SetSpeed(int id, int speed)
            {
                return base.getReturnValue(base.node.SetSpeed(id, speed));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="speeds"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue SetSpeeds(AutoCSer.KeyValue<int,int>[] speeds)
            {
                return base.getReturnValue(base.node.SetSpeeds(speeds));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 回调测试节点 local client node interface
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode))]
        public partial interface ICallbackNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> CallCustomPersistence(int value);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Callback();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> Enumerable();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>> GetJsonValue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray>> GetServerByteArray();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetValue();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> InputEnumerable(int value, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> InputKeepCallback(int value, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> KeepCallback();
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> PersistenceCallbackException();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> SetCallback();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> SetCallbackPersistence();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetJsonValue(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetServerByteArray(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetValue(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> SetValueCallback(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> SetValueCallbackPersistence(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter SetValuePersistenceSendOnly(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter SetValueSendOnly(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> CheckSnapshot();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            void CallInoutOutputCommand(int value, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> __callback__);
            /// <summary>
            /// 
            /// </summary>
            void CallbackCommand(System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> __callback__);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            void GetValueCommand(System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> __callback__);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void SetValueCommand(int value, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> __callback__);
        }
        /// <summary>
        /// Get the direct return value API encapsulation (AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode)
        /// </summary>
        public sealed partial class ICallbackNodeReturnValueLocalNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueNode<ICallbackNodeLocalClientNode>
        {
            /// <summary>
            /// Get the direct return value API encapsulation (AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode)
            /// </summary>
            /// <param name="node">Log stream persistence memory database local client node cache for client singleton</param>
            /// <param name="isIgnoreError">A default value of false indicates that exceptions and error messages are not ignored</param>
            /// <param name="isSynchronousCallback">The default value of false indicates that the IO thread synchronization callback is not used; otherwise, the subsequent operations of the API call await are not allowed to have synchronization blocking logic or long-term CPU occupation operations</param>
            public ICallbackNodeReturnValueLocalNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache<ICallbackNodeLocalClientNode> node, bool isIgnoreError = false, bool isSynchronousCallback = false) : base(node, isIgnoreError, isSynchronousCallback) { }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue CallCustomPersistence(int value)
            {
                return base.getReturnValue(base.node.CallCustomPersistence(value));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue Callback()
            {
                return base.getReturnValue(base.node.Callback());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> Enumerable()
            {
                return base.node.Enumerable();
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster> GetJsonValue()
            {
                return base.getReturnValue(base.node.GetJsonValue());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray> GetServerByteArray()
            {
                return base.getReturnValue(base.node.GetServerByteArray());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<int> GetValue()
            {
                return base.getReturnValue(base.node.GetValue());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> InputEnumerable(int value, int count)
            {
                return base.node.InputEnumerable(value, count);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> InputKeepCallback(int value, int count)
            {
                return base.node.InputKeepCallback(value, count);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> KeepCallback()
            {
                return base.node.KeepCallback();
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue PersistenceCallbackException()
            {
                return base.getReturnValue(base.node.PersistenceCallbackException());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<int> SetCallback()
            {
                return base.getReturnValue(base.node.SetCallback());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<int> SetCallbackPersistence()
            {
                return base.getReturnValue(base.node.SetCallbackPersistence());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue SetJsonValue(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value)
            {
                return base.getReturnValue(base.node.SetJsonValue(value));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue SetServerByteArray(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray value)
            {
                return base.getReturnValue(base.node.SetServerByteArray(value));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue SetValue(int value)
            {
                return base.getReturnValue(base.node.SetValue(value));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<int> SetValueCallback(int value)
            {
                return base.getReturnValue(base.node.SetValueCallback(value));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<int> SetValueCallbackPersistence(int value)
            {
                return base.getReturnValue(base.node.SetValueCallbackPersistence(value));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter SetValuePersistenceSendOnly(int value)
            {
                return base.node.SetValuePersistenceSendOnly(value);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter SetValueSendOnly(int value)
            {
                return base.node.SetValueSendOnly(value);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<bool> CheckSnapshot()
            {
                return base.getReturnValue(base.node.CheckSnapshot());
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public void CallInoutOutputCommand(int value, System.Action<int> callback)
            {
                base.node.CallInoutOutputCommand(value, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueCallback<int>(callback));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public void CallInoutOutputCommand(int value, System.Action<int> callback, Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> error___callback__)
            {
                base.node.CallInoutOutputCommand(value, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueCallback<int>(callback, error___callback__));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public void CallbackCommand(System.Action callback)
            {
                base.node.CallbackCommand(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueCallback(callback));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public void CallbackCommand(System.Action callback, Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> error___callback__)
            {
                base.node.CallbackCommand(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueCallback(callback, error___callback__));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public void GetValueCommand(System.Action<int> callback)
            {
                base.node.GetValueCommand(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueCallback<int>(callback));
            }
            /// <summary>
            /// 
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public void GetValueCommand(System.Action<int> callback, Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> error___callback__)
            {
                base.node.GetValueCommand(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueCallback<int>(callback, error___callback__));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public void SetValueCommand(int value, System.Action callback)
            {
                base.node.SetValueCommand(value, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueCallback(callback));
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public void SetValueCommand(int value, System.Action callback, Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> error___callback__)
            {
                base.node.SetValueCommand(value, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueCallback(callback, error___callback__));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// Customize the basic service node interface 
///            自定义基础服务节点接口 local client node interface
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICustomServiceNode))]
        public partial interface ICustomServiceNodeLocalClientNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode
        {
            /// <summary>
            /// 创建回调测试节点 ICallbackNode
            /// </summary>
            /// <param name="index">Node index information 
///            节点索引信息</param>
            /// <param name="key">Node global keyword 
///            节点全局关键字</param>
            /// <param name="nodeInfo">Server-side node information 
///            服务端节点信息</param>
            /// <returns>Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateCallbackNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建游戏测试节点 GameNode
            /// </summary>
            /// <param name="index">Node index information 
///            节点索引信息</param>
            /// <param name="key">Node global keyword 
///            节点全局关键字</param>
            /// <param name="nodeInfo">Server-side node information 
///            服务端节点信息</param>
            /// <returns>Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateGameNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game
{
        /// <summary>
        /// 
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IGameNodeMethodEnum))]
        public partial interface IGameNode { }
        /// <summary>
        ///  (Node method sequence number mapping enumeration type)
        /// </summary>
        public enum IGameNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster 
            /// </summary>
            AddMonster = 0,
            /// <summary>
            /// [1] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters 
            /// </summary>
            AddMonsters = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Clear = 2,
            /// <summary>
            /// [3] 
            /// int id 
            /// int speed 
            /// </summary>
            SetSpeed = 3,
            /// <summary>
            /// [4] 
            /// AutoCSer.KeyValue{int,int}[] speeds 
            /// </summary>
            SetSpeeds = 4,
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 回调测试节点
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ICallbackNodeMethodEnum))]
        public partial interface ICallbackNode { }
        /// <summary>
        /// 回调测试节点 (Node method sequence number mapping enumeration type)
        /// </summary>
        public enum ICallbackNodeMethodEnum
        {
            BindNodeMethodTest = 0,
            /// <summary>
            /// [1] 
            /// int value 
            /// </summary>
            CallCustomPersistence = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Callback = 2,
            /// <summary>
            /// [3] 
            /// 返回值 bool 
            /// </summary>
            CallbackBeforePersistence = 3,
            /// <summary>
            /// [4] 
            /// int value 
            /// </summary>
            CustomPersistence = 4,
            /// <summary>
            /// [5] 
            /// 返回值 int 
            /// </summary>
            Enumerable = 5,
            /// <summary>
            /// [6] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            EnumerableBeforePersistence = 6,
            /// <summary>
            /// [7] 
            /// 返回值 AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster 
            /// </summary>
            GetJsonValue = 7,
            /// <summary>
            /// [8] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray 
            /// </summary>
            GetServerByteArray = 8,
            /// <summary>
            /// [9] 
            /// 返回值 int 
            /// </summary>
            GetValue = 9,
            /// <summary>
            /// [10] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            GetValueBeforePersistence = 10,
            /// <summary>
            /// [11] 
            /// int value 
            /// int count 
            /// 返回值 int 
            /// </summary>
            InputEnumerable = 11,
            /// <summary>
            /// [12] 
            /// int value 
            /// int count 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            InputEnumerableBeforePersistence = 12,
            /// <summary>
            /// [13] 
            /// int value 
            /// int count 
            /// </summary>
            InputKeepCallback = 13,
            /// <summary>
            /// [14] 
            /// int value 
            /// int count 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            InputKeepCallbackBeforePersistence = 14,
            /// <summary>
            /// [15] 
            /// </summary>
            KeepCallback = 15,
            /// <summary>
            /// [16] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            KeepCallbackBeforePersistence = 16,
            /// <summary>
            /// [17] 
            /// </summary>
            PersistenceCallbackException = 17,
            /// <summary>
            /// [18] 
            /// </summary>
            SetCallback = 18,
            /// <summary>
            /// [19] 
            /// </summary>
            SetCallbackPersistence = 19,
            /// <summary>
            /// [20] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            SetCallbackPersistenceBeforePersistence = 20,
            /// <summary>
            /// [21] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value 
            /// </summary>
            SetJsonValue = 21,
            /// <summary>
            /// [22] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerByteArray value 
            /// </summary>
            SetServerByteArray = 22,
            /// <summary>
            /// [23] 
            /// int value 
            /// </summary>
            SetValue = 23,
            /// <summary>
            /// [24] 
            /// int value 
            /// 返回值 bool 
            /// </summary>
            SetValueBeforePersistence = 24,
            /// <summary>
            /// [25] 
            /// int value 
            /// </summary>
            SetValueCallback = 25,
            /// <summary>
            /// [26] 
            /// int value 
            /// </summary>
            SetValueCallbackPersistence = 26,
            /// <summary>
            /// [27] 
            /// int value 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            SetValueCallbackPersistenceBeforePersistence = 27,
            /// <summary>
            /// [28] 
            /// int value 
            /// </summary>
            SetValuePersistenceSendOnly = 28,
            /// <summary>
            /// [29] 
            /// int value 
            /// 返回值 bool 
            /// </summary>
            SetValuePersistenceSendOnlyBeforePersistence = 29,
            /// <summary>
            /// [30] 
            /// int value 
            /// </summary>
            SetValueSendOnly = 30,
            /// <summary>
            /// [31] 
            /// int value 
            /// </summary>
            SnapshotSet = 31,
            /// <summary>
            /// [32] 
            /// 返回值 bool 
            /// </summary>
            CheckSnapshot = 32,
            /// <summary>
            /// [33] 
            /// long value 
            /// </summary>
            SnapshotSet64 = 33,
            /// <summary>
            /// [34] 
            /// int value 
            /// 返回值 int 
            /// </summary>
            CallInoutOutputCommand = 34,
            /// <summary>
            /// [35] 
            /// </summary>
            CallbackCommand = 35,
            /// <summary>
            /// [36] 
            /// 返回值 int 
            /// </summary>
            GetValueCommand = 36,
            /// <summary>
            /// [37] 
            /// int value 
            /// </summary>
            SetValueCommand = 37,
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// Customize the basic service node interface 
///            自定义基础服务节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ICustomServiceNodeMethodEnum))]
        public partial interface ICustomServiceNode { }
        /// <summary>
        /// Customize the basic service node interface 
///            自定义基础服务节点接口 (Node method sequence number mapping enumeration type)
        /// </summary>
        public enum ICustomServiceNodeMethodEnum
        {
            /// <summary>
            /// [0] Create a array node IArrayNode{T} 
///            创建数组节点 IArrayNode{T}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// int length Array length
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateArrayNode = 0,
            /// <summary>
            /// [1] Create a bitmap node IBitmapNode 
///            创建位图节点 IBitmapNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// uint capacity The number of binary bits 
///            二进制位数量
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateBitmapNode = 1,
            /// <summary>
            /// [2] Create a dictionary node IByteArrayDictionaryNode{KT} 
///            创建字典节点 IByteArrayDictionaryNode{KT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// int capacity Container initialization size 
///            容器初始化大小
            /// AutoCSer.ReusableDictionaryGroupTypeEnum groupType Reusable dictionary recombination operation type 
///            可重用字典重组操作类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateByteArrayDictionaryNode = 2,
            /// <summary>
            /// [3] Create a dictionary node IByteArrayFragmentDictionaryNode{KT} 
///            创建字典节点 IByteArrayFragmentDictionaryNode{KT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateByteArrayFragmentDictionaryNode = 3,
            /// <summary>
            /// [4] Create a queue node IByteArrayQueueNode (First in, first Out) 
///            创建队列节点（先进先出） IByteArrayQueueNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// int capacity Container initialization size 
///            容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateByteArrayQueueNode = 4,
            /// <summary>
            /// [5] Create a stack node IByteArrayStackNode (Last in, first out) 
///            创建栈节点（后进先出） IByteArrayStackNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// int capacity Container initialization size 
///            容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateByteArrayStackNode = 5,
            /// <summary>
            /// [6] Create a dictionary node IDictionaryNode{KT,VT} 
///            创建字典节点 IDictionaryNode{KT,VT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// AutoCSer.Reflection.RemoteType valueType Data type
            /// int capacity Container initialization size 
///            容器初始化大小
            /// AutoCSer.ReusableDictionaryGroupTypeEnum groupType Reusable dictionary recombination operation type 
///            可重用字典重组操作类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateDictionaryNode = 6,
            /// <summary>
            /// [7] Create distributed lock nodes IDistributedLockNode{KT} 
///            创建分布式锁节点 IDistributedLockNode{KT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateDistributedLockNode = 7,
            /// <summary>
            /// [8] Create a dictionary node IFragmentDictionaryNode{KT,VT} 
///            创建字典节点 IFragmentDictionaryNode{KT,VT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// AutoCSer.Reflection.RemoteType valueType Data type
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateFragmentDictionaryNode = 8,
            /// <summary>
            /// [9] Create a 256 base fragment hash table node IFragmentHashSetNode{KT} 
///            创建 256 基分片哈希表节点 IFragmentHashSetNode{KT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateFragmentHashSetNode = 9,
            /// <summary>
            /// [10] Create a dictionary node IHashBytesDictionaryNode 
///            创建字典节点 IHashBytesDictionaryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// int capacity Container initialization size 
///            容器初始化大小
            /// AutoCSer.ReusableDictionaryGroupTypeEnum groupType Reusable dictionary recombination operation type 
///            可重用字典重组操作类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateHashBytesDictionaryNode = 10,
            /// <summary>
            /// [11] Create a dictionary node IHashBytesFragmentDictionaryNode 
///            创建字典节点 IHashBytesFragmentDictionaryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateHashBytesFragmentDictionaryNode = 11,
            /// <summary>
            /// [12] Create a hash table node IHashSetNode{KT} 
///            创建哈希表节点 IHashSetNode{KT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// int capacity Container initialization size 
///            容器初始化大小
            /// AutoCSer.ReusableDictionaryGroupTypeEnum groupType Reusable dictionary recombination operation type 
///            可重用字典重组操作类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateHashSetNode = 12,
            /// <summary>
            /// [13] Create a 64-bit auto-increment identity node IIdentityGeneratorNode 
///            创建 64 位自增ID 节点 IIdentityGeneratorNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// long identity Initial Allocation identity 
///            起始分配 ID
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateIdentityGeneratorNode = 13,
            /// <summary>
            /// [14] Create a array node ILeftArrayNode{T} 
///            创建数组节点 ILeftArrayNode{T}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// int capacity Container initialization size 
///            容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateLeftArrayNode = 14,
            /// <summary>
            /// [15] Create a message processing node IMessageNode{T} 
///            创建消息处理节点 IMessageNode{T}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType messageType Message data type 
///            消息数据类型
            /// int arraySize The size of the message array being processed 
///            正在处理的消息数组大小
            /// int timeoutSeconds The number of seconds of message processing timeout 
///            消息处理超时秒数
            /// int checkTimeoutSeconds Check the interval in seconds for message timeouts 
///            消息超时检查间隔秒数
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateMessageNode = 15,
            /// <summary>
            /// [16] Create a queue node IQueueNode{T} (First in, first Out) 
///            创建队列节点（先进先出） IQueueNode{T}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// int capacity Container initialization size 
///            容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateQueueNode = 16,
            /// <summary>
            /// [17] Create a binary search tree node ISearchTreeDictionaryNode{KT,VT} 
///            创建二叉搜索树节点 ISearchTreeDictionaryNode{KT,VT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// AutoCSer.Reflection.RemoteType valueType Data type
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateSearchTreeDictionaryNode = 17,
            /// <summary>
            /// [18] Create a binary search tree collection node ISearchTreeSetNode{KT} 
///            创建二叉搜索树集合节点 ISearchTreeSetNode{KT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateSearchTreeSetNode = 18,
            /// <summary>
            /// [19] Create a message processing node IMessageNode{ServerByteArrayMessage} 
///            创建消息处理节点 IMessageNode{ServerByteArrayMessage}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// int arraySize The size of the message array being processed 
///            正在处理的消息数组大小
            /// int timeoutSeconds The number of seconds of message processing timeout 
///            消息处理超时秒数
            /// int checkTimeoutSeconds Check the interval in seconds for message timeouts 
///            消息超时检查间隔秒数
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateServerByteArrayMessageNode = 19,
            /// <summary>
            /// [20] Create a sorting dictionary node ISortedDictionaryNode{KT,VT} 
///            创建排序字典节点 ISortedDictionaryNode{KT,VT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// AutoCSer.Reflection.RemoteType valueType Data type
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateSortedDictionaryNode = 20,
            /// <summary>
            /// [21] Create a sorting list node ISortedListNode{KT,VT} 
///            创建排序列表节点 ISortedListNode{KT,VT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// AutoCSer.Reflection.RemoteType valueType Data type
            /// int capacity Container initialization size 
///            容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateSortedListNode = 21,
            /// <summary>
            /// [22] Create sorted collection node ISortedSetNode{KT} 
///            创建排序集合节点 ISortedSetNode{KT}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateSortedSetNode = 22,
            /// <summary>
            /// [23] Create a stack node IStackNode{T} (Last in, first out) 
///            创建栈节点（后进先出） IStackNode{T}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType keyType Keyword type 
///            关键字类型
            /// int capacity Container initialization size 
///            容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStackNode = 23,
            /// <summary>
            /// [24] Delete the node 
///            删除节点
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// 返回值 bool Returning false indicates that the node was not found 
///            返回 false 表示没有找到节点
            /// </summary>
            RemoveNode = 24,
            /// <summary>
            /// [25] Create a server registration node IServerRegistryNode 
///            创建服务注册节点 IServerRegistryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// int loadTimeoutSeconds Cold start session timeout seconds 
///            冷启动会话超时秒数
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateServerRegistryNode = 25,
            /// <summary>
            /// [26] Create a service process daemon node IProcessGuardNode 
///            创建服务进程守护节点 IProcessGuardNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateProcessGuardNode = 26,
            /// <summary>
            /// [27] Creat a multi-hash bitmap client synchronization filter node IManyHashBitMapClientFilterNode 
///            创建多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// int size Bitmap size (number of bits) 
///            位图大小（位数量）
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateManyHashBitMapClientFilterNode = 27,
            /// <summary>
            /// [28] Creat a multi-hash bitmap filter node IManyHashBitMapFilterNode 
///            创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// int size Bitmap size (number of bits) 
///            位图大小（位数量）
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateManyHashBitMapFilterNode = 28,
            /// <summary>
            /// [29] Delete the node 
///            删除节点
            /// string key Node global keyword 
///            节点全局关键字
            /// 返回值 bool Returning false indicates that the node was not found 
///            返回 false 表示没有找到节点
            /// </summary>
            RemoveNodeByKey = 29,
            /// <summary>
            /// [30] Create an archive node only IOnlyPersistenceNode{T} 
///            创建仅存档节点 IOnlyPersistenceNode{T}
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// AutoCSer.Reflection.RemoteType valueType Archive data type 
///            存档数据类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateOnlyPersistenceNode = 30,
            /// <summary>
            /// [31] Create a client synchronization total statistics node based on uniform probability IUniformProbabilityClientStatisticsNode 
///            创建基于均匀概率的客户端同步总量统计节点 IUniformProbabilityClientStatisticsNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// byte indexBits The number of binary bits in the index must be even, with a minimum of 8 and a maximum of 20 
///            索引二进制位数量，必须为偶数，最小值为 8，最大值为 20
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateUniformProbabilityClientStatisticsNode = 31,
            /// <summary>
            /// [32] Create a total statistics node based on uniform probability IUniformProbabilityTotalStatisticsNode 
///            创建基于均匀概率的总量统计节点 IUniformProbabilityTotalStatisticsNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// byte indexBits The number of binary bits in the index must be even, with a minimum of 8 and a maximum of 20 
///            索引二进制位数量，必须为偶数，最小值为 8，最大值为 20
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateUniformProbabilityTotalStatisticsNode = 32,
            /// <summary>
            /// [256] 创建回调测试节点 ICallbackNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateCallbackNode = 256,
            /// <summary>
            /// [257] 创建游戏测试节点 GameNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index Node index information 
///            节点索引信息
            /// string key Node global keyword 
///            节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo Server-side node information 
///            服务端节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex Node identifier, there have been a node is returned directly 
///            节点标识，已经存在节点则直接返回
            /// </summary>
            CreateGameNode = 257,
        }
}
#endif