//本文件由程序自动生成，请不要自行修改
using System;
using System.Numerics;
using AutoCSer;

#if NoAutoCSer
#else
#pragma warning disable
namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game
{
    public partial class Monster
    {
            /// <summary>
            /// JSON 序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void JsonSerialize(AutoCSer.JsonSerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value)
            {
                value.jsonSerialize(serializer);
            }
            /// <summary>
            /// JSON 序列化
            /// </summary>
            /// <param name="memberMap"></param>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            /// <param name="stream"></param>
            internal static void JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster> memberMap, JsonSerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value, AutoCSer.Memory.CharStream stream)
            {
                value.jsonSerialize(memberMap, serializer, stream);
            }
            /// <summary>
            /// JSON 序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void jsonSerialize(AutoCSer.JsonSerializer __serializer__)
            {
                AutoCSer.Memory.CharStream __stream__ = __serializer__.CharStream;
                __stream__.SimpleWrite(@"""id"":");
                __serializer__.JsonSerialize(id);
                __stream__.Write(',');
                __stream__.SimpleWrite(@"""pos"":");
                __serializer__.JsonSerializeType(pos);
                __stream__.Write(',');
                __stream__.SimpleWrite(@"""speed"":");
                __serializer__.JsonSerialize(speed);
                __stream__.Write(',');
                __stream__.SimpleWrite(@"""type"":");
                __serializer__.JsonSerialize(type);
            }
            /// <summary>
            /// JSON 序列化
            /// </summary>
            /// <param name="__memberMap__"></param>
            /// <param name="__serializer__"></param>
            /// <param name="__stream__"></param>
            private void jsonSerialize(AutoCSer.Metadata.MemberMap<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster> __memberMap__, JsonSerializer __serializer__, AutoCSer.Memory.CharStream __stream__)
            {
                bool isNext = false;
                if (__memberMap__.IsMember(0))
                {
                    if (isNext) __stream__.Write(',');
                    else isNext = true;
                    __stream__.SimpleWrite(@"""id"":");
                    __serializer__.JsonSerialize(id);
                }
                if (__memberMap__.IsMember(1))
                {
                    if (isNext) __stream__.Write(',');
                    else isNext = true;
                    __stream__.SimpleWrite(@"""pos"":");
                    __serializer__.JsonSerializeType(pos);
                }
                if (__memberMap__.IsMember(2))
                {
                    if (isNext) __stream__.Write(',');
                    else isNext = true;
                    __stream__.SimpleWrite(@"""speed"":");
                    __serializer__.JsonSerialize(speed);
                }
                if (__memberMap__.IsMember(3))
                {
                    if (isNext) __stream__.Write(',');
                    else isNext = true;
                    __stream__.SimpleWrite(@"""type"":");
                    __serializer__.JsonSerialize(type);
                }
            }
            /// <summary>
            /// JSON 反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            /// <param name="names"></param>
            internal static void JsonDeserialize(AutoCSer.JsonDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value, ref AutoCSer.Memory.Pointer names)
            {
                value.jsonDeserialize(deserializer, ref names);
            }
            /// <summary>
            /// JSON 反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            /// <param name="names"></param>
            /// <param name="memberMap"></param>
            internal static void JsonDeserializeMemberMap(AutoCSer.JsonDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value, ref AutoCSer.Memory.Pointer names, AutoCSer.Metadata.MemberMap<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster> memberMap)
            {
                value.jsonDeserialize(deserializer, ref names, memberMap);
            }
            /// <summary>
            /// JSON 反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            /// <param name="__names__"></param>
            private void jsonDeserialize(AutoCSer.JsonDeserializer __deserializer__, ref AutoCSer.Memory.Pointer __names__)
            {
                if (__deserializer__.IsName(ref __names__))
                {
                    __deserializer__.JsonDeserialize(ref this.id);
                    if (!AutoCSer.JsonDeserializer.NextNameIndex(__deserializer__, ref __names__)) return;
                }
                else return;
                if (__deserializer__.IsName(ref __names__))
                {
                    __deserializer__.JsonDeserialize(ref this.pos);
                    if (!AutoCSer.JsonDeserializer.NextNameIndex(__deserializer__, ref __names__)) return;
                }
                else return;
                if (__deserializer__.IsName(ref __names__))
                {
                    __deserializer__.JsonDeserialize(ref this.speed);
                    if (!AutoCSer.JsonDeserializer.NextNameIndex(__deserializer__, ref __names__)) return;
                }
                else return;
                if (__deserializer__.IsName(ref __names__))
                {
                    __deserializer__.JsonDeserialize(ref this.type);
                    if (!AutoCSer.JsonDeserializer.NextNameIndex(__deserializer__, ref __names__)) return;
                }
                else return;
            }
            /// <summary>
            /// JSON 反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            /// <param name="__names__"></param>
            /// <param name="__memberMap__"></param>
            private void jsonDeserialize(AutoCSer.JsonDeserializer __deserializer__, ref AutoCSer.Memory.Pointer __names__, AutoCSer.Metadata.MemberMap<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster> __memberMap__)
            {
                if (__deserializer__.IsName(ref __names__))
                {
                    __deserializer__.JsonDeserialize(ref this.id);
                    if (AutoCSer.JsonDeserializer.NextNameIndex(__deserializer__, ref __names__)) __memberMap__.SetMember(0);
                    else return;
                }
                else return;
                if (__deserializer__.IsName(ref __names__))
                {
                    __deserializer__.JsonDeserialize(ref this.pos);
                    if (AutoCSer.JsonDeserializer.NextNameIndex(__deserializer__, ref __names__)) __memberMap__.SetMember(1);
                    else return;
                }
                else return;
                if (__deserializer__.IsName(ref __names__))
                {
                    __deserializer__.JsonDeserialize(ref this.speed);
                    if (AutoCSer.JsonDeserializer.NextNameIndex(__deserializer__, ref __names__)) __memberMap__.SetMember(2);
                    else return;
                }
                else return;
                if (__deserializer__.IsName(ref __names__))
                {
                    __deserializer__.JsonDeserialize(ref this.type);
                    if (AutoCSer.JsonDeserializer.NextNameIndex(__deserializer__, ref __names__)) __memberMap__.SetMember(3);
                    else return;
                }
                else return;
            }
            /// <summary>
            /// 成员 JSON 反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            /// <param name="__value__"></param>
            /// <param name="__memberIndex__"></param>
            internal static void JsonDeserialize(AutoCSer.JsonDeserializer __deserializer__, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster __value__, int __memberIndex__)
            {
                switch (__memberIndex__)
                {
                    case 0:
                        __deserializer__.JsonDeserialize(ref __value__.id);
                        return;
                    case 1:
                        __deserializer__.JsonDeserialize(ref __value__.pos);
                        return;
                    case 2:
                        __deserializer__.JsonDeserialize(ref __value__.speed);
                        return;
                    case 3:
                        __deserializer__.JsonDeserialize(ref __value__.type);
                        return;
                }
            }
            /// <summary>
            /// 获取 JSON 反序列化成员名称
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.KeyValue<AutoCSer.LeftArray<string>, AutoCSer.LeftArray<int>> JsonDeserializeMemberNames()
            {
                return jsonDeserializeMemberName();
            }
            /// <summary>
            /// 获取 JSON 反序列化成员名称
            /// </summary>
            /// <returns></returns>
            private static AutoCSer.KeyValue<AutoCSer.LeftArray<string>, AutoCSer.LeftArray<int>> jsonDeserializeMemberName()
            {
                AutoCSer.LeftArray<string> names = new AutoCSer.LeftArray<string>(4);
                AutoCSer.LeftArray<int> indexs = new AutoCSer.LeftArray<int>(4);
                names.Add(nameof(id));
                indexs.Add(0);
                names.Add(nameof(pos));
                indexs.Add(1);
                names.Add(nameof(speed));
                indexs.Add(2);
                names.Add(nameof(type));
                indexs.Add(3);
                return new AutoCSer.KeyValue<AutoCSer.LeftArray<string>, AutoCSer.LeftArray<int>>(names, indexs);
            }
            /// <summary>
            /// 获取 JSON 序列化成员类型
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.LeftArray<Type> JsonSerializeMemberTypes()
            {
                AutoCSer.LeftArray<Type> types = new LeftArray<Type>(2);
                types.Add(typeof(int));
                types.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Pos));
                return types;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void JsonSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster);
                JsonSerialize(null, value);
                JsonSerializeMemberMap(null, null, value, null);
                AutoCSer.Memory.Pointer names = default(AutoCSer.Memory.Pointer);
                JsonDeserialize(null, ref value, ref names);
                JsonDeserializeMemberMap(null, ref value, ref names, null);
                JsonDeserialize(null, ref value, 0);
                JsonDeserializeMemberNames();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster));
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster));
                JsonSerializeMemberTypes();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game
{
    public partial class Monster
    {
            /// <summary>
            /// 默认构造函数
            /// </summary>
            internal static AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster DefaultConstructor()
            {
                return new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster();
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void DefaultConstructorReflection()
            {
                DefaultConstructor();
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
    public partial struct PerformanceKeyValue
    {
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value)
            {
                serializer.Simple(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value)
            {
                deserializer.Simple(ref value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                return new AutoCSer.BinarySerialize.TypeInfo(true, 0, 1073741826);
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 吞吐性能测试消息
        /// </summary>
    public partial class PerformanceMessage
    {
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage value)
            {
                if (serializer.WriteMemberCountVerify(8, 1073741826)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(Message);
                __serializer__.Simple(MessageIdeneity);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.Message);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.MessageIdeneity);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 2, 1073741826);
                typeInfo.Add(typeof(int));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage>();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 吞吐性能测试消息
        /// </summary>
    public partial class PerformanceMessage
    {
            /// <summary>
            /// 默认构造函数
            /// </summary>
            internal static AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage DefaultConstructor()
            {
                return new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage();
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void DefaultConstructorReflection()
            {
                DefaultConstructor();
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage>();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
    public partial class TestClass
    {
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value)
            {
                if (serializer.WriteMemberCountVerify(8, 1073741826)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(Int);
                __serializer__.BinarySerialize(String);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.Int);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.String);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 2, 1073741826);
                typeInfo.Add(typeof(int));
                typeInfo.Add(typeof(string));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass>();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
    public partial class TestClass
    {
            /// <summary>
            /// 默认构造函数
            /// </summary>
            internal static AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass DefaultConstructor()
            {
                return new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass();
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void DefaultConstructorReflection()
            {
                DefaultConstructor();
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass>();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
    public partial class TestClassMessage
    {
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage value)
            {
                if (serializer.WriteMemberCountVerify(8, 1073741827)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(Int);
                __serializer__.Simple(MessageIdeneity);
                __serializer__.BinarySerialize(String);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.Int);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.MessageIdeneity);
                __deserializer__.BinaryDeserialize(ref this.String);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 3, 1073741827);
                typeInfo.Add(typeof(int));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity));
                typeInfo.Add(typeof(string));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage>();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
    public partial class TestClassMessage
    {
            /// <summary>
            /// 默认构造函数
            /// </summary>
            internal static AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage DefaultConstructor()
            {
                return new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage();
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void DefaultConstructorReflection()
            {
                DefaultConstructor();
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage>();
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
    public partial class TestClass
    {
            /// <summary>
            /// 随机对象生成
            /// </summary>
            /// <param name="value"></param>
            /// <param name="config"></param>
            internal static void CreateRandomObject(ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value, AutoCSer.RandomObject.Config config)
            {
                value.createRandomObject(config);
            }
            /// <summary>
            /// 随机对象生成
            /// </summary>
            /// <param name="config"></param>
            private void createRandomObject(AutoCSer.RandomObject.Config __config__)
            {
                Int = AutoCSer.RandomObject.Creator.Create<int>(__config__, true);
                String = AutoCSer.RandomObject.Creator.Create<string>(__config__, true);
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void CreateRandomObject()
            {
                var value = AutoCSer.RandomObject.Creator.CallCreate<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass>();
                CreateRandomObject(ref value, null);
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game
{
        /// <summary>
        ///  本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode), typeof(GameNodeLocalClient))]
        public partial interface IGameNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monster"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> AddMonster(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monsters"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> AddMonsters(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="id"></param>
            /// <param name="speed"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetSpeed(int id, int speed);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="speeds"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetSpeeds(AutoCSer.KeyValue<int,int>[] speeds);
        }
        /// <summary>
        ///  本地客户端节点
        /// </summary>
        internal unsafe partial class GameNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IGameNodeLocalClientNode>, IGameNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private GameNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IGameNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new GameNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.Json(monster);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Json(ref this.monster);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(monsters);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.monsters);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip3__
            {
                internal int id;
                internal int speed;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.id);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.speed);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.id);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.speed);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip4__
            {
                internal AutoCSer.KeyValue<int,int>[] speeds;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.StructArray(speeds);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.StructArray(ref this.speeds);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.KeyValue<int,int>[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monster"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IGameNodeLocalClientNode/**/.AddMonster(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 0
                    , new __ip0__
                    {
                        monster = monster,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="monsters"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IGameNodeLocalClientNode/**/.AddMonsters(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 1
                    , new __ip1__
                    {
                        monsters = monsters,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IGameNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="id"></param>
            /// <param name="speed"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IGameNodeLocalClientNode/**/.SetSpeed(int id, int speed)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 3
                    , new __ip3__
                    {
                        id = id,
                        speed = speed,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="speeds"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IGameNodeLocalClientNode/**/.SetSpeeds(AutoCSer.KeyValue<int,int>[] speeds)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 4
                    , new __ip4__
                    {
                        speeds = speeds,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IGameNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(GameNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(GameNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 回调测试节点 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode), typeof(CallbackNodeLocalClient))]
        public partial interface ICallbackNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> CallCustomPersistence(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            void CallInoutOutputCommand(int value, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> __callback__);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Callback();
            /// <summary>
            /// 
            /// </summary>
            void CallbackCommand(System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> __callback__);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> CheckSnapshot();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> Enumerable();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>> GetJsonValue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetValue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            void GetValueCommand(System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> __callback__);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> InputEnumerable(int value, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> InputKeepCallback(int value, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> KeepCallback();
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> PersistenceCallbackException();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> SetCallback();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> SetCallbackPersistence();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetJsonValue(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetValue(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> SetValueCallback(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> SetValueCallbackPersistence(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void SetValueCommand(int value, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> __callback__);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter SetValuePersistenceSendOnly(int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter SetValueSendOnly(int value);
        }
        /// <summary>
        /// 回调测试节点 本地客户端节点
        /// </summary>
        internal unsafe partial class CallbackNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ICallbackNodeLocalClientNode>, ICallbackNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private CallbackNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ICallbackNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new CallbackNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal int value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip13__
            {
                internal int value;
                internal int count;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.count);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.count);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip23__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.Json(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Json(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip34__
            {
                internal long value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__));
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ICallbackNodeLocalClientNode/**/.CallCustomPersistence(int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 0
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            void ICallbackNodeLocalClientNode/**/.CallInoutOutputCommand(int value, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> __callback__)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputOutputNode/**/.Create(this, 1
                    , new __ip0__
                    {
                        value = value,
                    }
                    , __callback__
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ICallbackNodeLocalClientNode/**/.Callback()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            void ICallbackNodeLocalClientNode/**/.CallbackCommand(System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> __callback__)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackNode/**/.Create(this, 4
                    , __callback__
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ICallbackNodeLocalClientNode/**/.CheckSnapshot()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<bool>/**/.Create(this, 5
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> ICallbackNodeLocalClientNode/**/.Enumerable()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode<int>/**/.Create(this, 7
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>> ICallbackNodeLocalClientNode/**/.GetJsonValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>/**/.Create(this, 9
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ICallbackNodeLocalClientNode/**/.GetValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 10
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            void ICallbackNodeLocalClientNode/**/.GetValueCommand(System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> __callback__)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackOutputNode<int>/**/.Create(this, 12
                    , __callback__
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> ICallbackNodeLocalClientNode/**/.InputEnumerable(int value, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode/**/.Create<int, __ip13__>(this, 13
                    , new __ip13__
                    {
                        value = value,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> ICallbackNodeLocalClientNode/**/.InputKeepCallback(int value, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode/**/.Create<int, __ip13__>(this, 15
                    , new __ip13__
                    {
                        value = value,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<int>> ICallbackNodeLocalClientNode/**/.KeepCallback()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceKeepCallbackEnumeratorNode<int>/**/.Create(this, 17
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ICallbackNodeLocalClientNode/**/.PersistenceCallbackException()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 19
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ICallbackNodeLocalClientNode/**/.SetCallback()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 20
                    , false
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ICallbackNodeLocalClientNode/**/.SetCallbackPersistence()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 21
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ICallbackNodeLocalClientNode/**/.SetJsonValue(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 23
                    , new __ip23__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ICallbackNodeLocalClientNode/**/.SetValue(int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 24
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ICallbackNodeLocalClientNode/**/.SetValueCallback(int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip0__>(this, 26
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ICallbackNodeLocalClientNode/**/.SetValueCallbackPersistence(int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip0__>(this, 27
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void ICallbackNodeLocalClientNode/**/.SetValueCommand(int value, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> __callback__)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallbackInputNode/**/.Create(this, 29
                    , new __ip0__
                    {
                        value = value,
                    }
                    , __callback__
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter ICallbackNodeLocalClientNode/**/.SetValuePersistenceSendOnly(int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode/**/.Create(this, 30
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter ICallbackNodeLocalClientNode/**/.SetValueSendOnly(int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode/**/.Create(this, 32
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ICallbackNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(CallbackNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(CallbackNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 服务基础操作自定义扩展接口（用于添加自定义节点创建接口） 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICustomServiceNode), typeof(CustomServiceNodeLocalClient))]
        public partial interface ICustomServiceNodeLocalClientNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode
        {
            /// <summary>
            /// 创建回调测试节点 ICallbackNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateCallbackNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建游戏测试节点 GameNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateGameNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建测试数组节点 StringArrayNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="length">数组长度</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateStringArrayNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int length);
            /// <summary>
            /// 创建测试字典节点 StringDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <param name="groupType">可重用字典重组操作类型</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateStringDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity, AutoCSer.ReusableDictionaryGroupTypeEnum groupType);
            /// <summary>
            /// 创建测试 256 基分片字典节点 StringFragmentDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateStringFragmentDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建测试哈希表节点 StringHashSetNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <param name="groupType">可重用字典重组操作类型</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateStringHashSetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity, AutoCSer.ReusableDictionaryGroupTypeEnum groupType);
            /// <summary>
            /// 创建测试 256 基分片哈希表节点 StringFragmentHashSetNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateStringFragmentHashSetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建测试数组节点 StringLeftArrayNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateStringLeftArrayNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity);
            /// <summary>
            /// 创建测试队列节点接口 StringQueueNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateStringQueueNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity);
            /// <summary>
            /// 创建测试栈节点 StringStackNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateStringStackNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity);
            /// <summary>
            /// 创建测试二叉搜索树集合节点 LongSearchTreeSetNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateLongSearchTreeSetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建测试排序集合节点 LongSortedSetNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateLongSortedSetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建测试排序字典节点 LongStringSortedDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateLongStringSortedDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建排序列表节点 LongStringSortedListNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateLongStringSortedListNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity);
            /// <summary>
            /// 创建测试二叉搜索树字典节点 LongStringSearchTreeDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateLongStringSearchTreeDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建测试消息处理节点 TestClassMessageNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="arraySize">正在处理消息数组大小</param>
            /// <param name="timeoutSeconds">消息处理超时秒数</param>
            /// <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateTestClassMessageNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int arraySize, int timeoutSeconds, int checkTimeoutSeconds);
            /// <summary>
            /// 创建性能测试字典节点 PerformanceDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <param name="groupType">可重用字典重组操作类型</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreatePerformanceDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity, AutoCSer.ReusableDictionaryGroupTypeEnum groupType);
            /// <summary>
            /// 创建性能测试二叉搜索树字典节点 PerformanceSearchTreeDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreatePerformanceSearchTreeDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
            /// <summary>
            /// 创建性能测试消息处理节点 PerformanceMessageNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="arraySize">正在处理消息数组大小</param>
            /// <param name="timeoutSeconds">消息处理超时秒数</param>
            /// <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreatePerformanceMessageNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int arraySize, int timeoutSeconds, int checkTimeoutSeconds);
            /// <summary>
            /// 创建测试仅存档节点 TestClassOnlyPersistenceNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> CreateTestClassOnlyPersistenceNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo);
        }
        /// <summary>
        /// 服务基础操作自定义扩展接口（用于添加自定义节点创建接口） 本地客户端节点
        /// </summary>
        internal unsafe partial class CustomServiceNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ICustomServiceNodeLocalClientNode>, ICustomServiceNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private CustomServiceNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ICustomServiceNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new CustomServiceNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                internal string key;
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo;
                internal uint capacity;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__ value)
            {
                if (serializer.WriteMemberCountVerify(8, 1073741828)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(capacity);
                __serializer__.Simple(index);
                __serializer__.BinarySerialize(key);
                __serializer__.Json(nodeInfo);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.capacity);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
                __deserializer__.BinaryDeserialize(ref this.key);
                __deserializer__.Json(ref this.nodeInfo);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 4, 1073741828);
                typeInfo.Add(typeof(uint));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                typeInfo.Add(typeof(string));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                internal string key;
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo;
                internal long identity;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__ value)
            {
                if (serializer.WriteMemberCountVerify(12, 1073741828)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(identity);
                __serializer__.Simple(index);
                __serializer__.BinarySerialize(key);
                __serializer__.Json(nodeInfo);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.identity);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
                __deserializer__.BinaryDeserialize(ref this.key);
                __deserializer__.Json(ref this.nodeInfo);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 4, 1073741828);
                typeInfo.Add(typeof(long));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                typeInfo.Add(typeof(string));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip2__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.Simple(index);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip3__
            {
                internal string key;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip4__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                internal string key;
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo;
                internal int size;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__ value)
            {
                if (serializer.WriteMemberCountVerify(8, 1073741828)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(size);
                __serializer__.Simple(index);
                __serializer__.BinarySerialize(key);
                __serializer__.Json(nodeInfo);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.size);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
                __deserializer__.BinaryDeserialize(ref this.key);
                __deserializer__.Json(ref this.nodeInfo);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 4, 1073741828);
                typeInfo.Add(typeof(int));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                typeInfo.Add(typeof(string));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip256__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                internal string key;
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741827)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.Simple(index);
                __serializer__.BinarySerialize(key);
                __serializer__.Json(nodeInfo);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
                __deserializer__.BinaryDeserialize(ref this.key);
                __deserializer__.Json(ref this.nodeInfo);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 3, 1073741827);
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                typeInfo.Add(typeof(string));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip258__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                internal string key;
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo;
                internal int length;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__ value)
            {
                if (serializer.WriteMemberCountVerify(8, 1073741828)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(length);
                __serializer__.Simple(index);
                __serializer__.BinarySerialize(key);
                __serializer__.Json(nodeInfo);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.length);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
                __deserializer__.BinaryDeserialize(ref this.key);
                __deserializer__.Json(ref this.nodeInfo);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 4, 1073741828);
                typeInfo.Add(typeof(int));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                typeInfo.Add(typeof(string));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip259__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                internal string key;
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo;
                internal int capacity;
                internal AutoCSer.ReusableDictionaryGroupTypeEnum groupType;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__ value)
            {
                if (serializer.WriteMemberCountVerify(12, 1073741829)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(capacity);
                __serializer__.Stream.Write((byte)this.groupType);
                __serializer__.FixedFillSize(3);
                __serializer__.Simple(index);
                __serializer__.BinarySerialize(key);
                __serializer__.Json(nodeInfo);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.capacity);
                this.groupType = (AutoCSer.ReusableDictionaryGroupTypeEnum)__deserializer__.FixedEnumByte();
                __deserializer__.FixedFillSize(3);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
                __deserializer__.BinaryDeserialize(ref this.key);
                __deserializer__.Json(ref this.nodeInfo);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 5, 1073741829);
                typeInfo.Add(typeof(int));
                typeInfo.Add(typeof(AutoCSer.ReusableDictionaryGroupTypeEnum));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                typeInfo.Add(typeof(string));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip263__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                internal string key;
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo;
                internal int capacity;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__ value)
            {
                if (serializer.WriteMemberCountVerify(8, 1073741828)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(capacity);
                __serializer__.Simple(index);
                __serializer__.BinarySerialize(key);
                __serializer__.Json(nodeInfo);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.capacity);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
                __deserializer__.BinaryDeserialize(ref this.key);
                __deserializer__.Json(ref this.nodeInfo);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 4, 1073741828);
                typeInfo.Add(typeof(int));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                typeInfo.Add(typeof(string));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip271__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index;
                internal string key;
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo;
                internal int arraySize;
                internal int timeoutSeconds;
                internal int checkTimeoutSeconds;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__ value)
            {
                if (serializer.WriteMemberCountVerify(16, 1073741830)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(arraySize);
                __serializer__.BinarySerialize(checkTimeoutSeconds);
                __serializer__.BinarySerialize(timeoutSeconds);
                __serializer__.Simple(index);
                __serializer__.BinarySerialize(key);
                __serializer__.Json(nodeInfo);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.arraySize);
                __deserializer__.BinaryDeserialize(ref this.checkTimeoutSeconds);
                __deserializer__.BinaryDeserialize(ref this.timeoutSeconds);
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.index);
                __deserializer__.BinaryDeserialize(ref this.key);
                __deserializer__.Json(ref this.nodeInfo);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 4, 1073741830);
                typeInfo.Add(typeof(int));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                typeInfo.Add(typeof(string));
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__>();
            }
            }
            /// <summary>
            /// 创建位图节点 BitmapNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">二进制位数量</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode/**/.CreateBitmapNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, uint capacity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip0__>(this, 0
                    , new __ip0__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        capacity = capacity,
                    }
                    );
            }

            /// <summary>
            /// 创建 64 位自增ID 节点 IdentityGeneratorNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="identity">起始分配 ID</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode/**/.CreateIdentityGeneratorNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, long identity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip1__>(this, 1
                    , new __ip1__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        identity = identity,
                    }
                    );
            }

            /// <summary>
            /// 删除节点
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <returns>是否成功删除节点，否则表示没有找到节点</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode/**/.RemoveNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip2__>(this, 2
                    , new __ip2__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 删除节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <returns>是否成功删除节点，否则表示没有找到节点</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode/**/.RemoveNodeByKey(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip3__>(this, 3
                    , new __ip3__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="size">位图大小（位数量）</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode/**/.CreateManyHashBitMapClientFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int size)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip4__>(this, 4
                    , new __ip4__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        size = size,
                    }
                    );
            }

            /// <summary>
            /// 创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="size">位图大小（位数量）</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> AutoCSer.CommandService.StreamPersistenceMemoryDatabase.IServiceNodeLocalClientNode/**/.CreateManyHashBitMapFilterNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int size)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip4__>(this, 5
                    , new __ip4__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        size = size,
                    }
                    );
            }

            /// <summary>
            /// 创建回调测试节点 ICallbackNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateCallbackNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 256
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建游戏测试节点 GameNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateGameNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 257
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建测试数组节点 StringArrayNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="length">数组长度</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateStringArrayNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int length)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip258__>(this, 258
                    , new __ip258__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        length = length,
                    }
                    );
            }

            /// <summary>
            /// 创建测试字典节点 StringDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <param name="groupType">可重用字典重组操作类型</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateStringDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity, AutoCSer.ReusableDictionaryGroupTypeEnum groupType)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip259__>(this, 259
                    , new __ip259__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        capacity = capacity,
                        groupType = groupType,
                    }
                    );
            }

            /// <summary>
            /// 创建测试 256 基分片字典节点 StringFragmentDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateStringFragmentDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 260
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建测试哈希表节点 StringHashSetNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <param name="groupType">可重用字典重组操作类型</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateStringHashSetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity, AutoCSer.ReusableDictionaryGroupTypeEnum groupType)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip259__>(this, 261
                    , new __ip259__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        capacity = capacity,
                        groupType = groupType,
                    }
                    );
            }

            /// <summary>
            /// 创建测试 256 基分片哈希表节点 StringFragmentHashSetNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateStringFragmentHashSetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 262
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建测试数组节点 StringLeftArrayNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateStringLeftArrayNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip263__>(this, 263
                    , new __ip263__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        capacity = capacity,
                    }
                    );
            }

            /// <summary>
            /// 创建测试队列节点接口 StringQueueNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateStringQueueNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip263__>(this, 264
                    , new __ip263__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        capacity = capacity,
                    }
                    );
            }

            /// <summary>
            /// 创建测试栈节点 StringStackNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateStringStackNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip263__>(this, 265
                    , new __ip263__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        capacity = capacity,
                    }
                    );
            }

            /// <summary>
            /// 创建测试二叉搜索树集合节点 LongSearchTreeSetNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateLongSearchTreeSetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 266
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建测试排序集合节点 LongSortedSetNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateLongSortedSetNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 267
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建测试排序字典节点 LongStringSortedDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateLongStringSortedDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 268
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建排序列表节点 LongStringSortedListNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateLongStringSortedListNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip263__>(this, 269
                    , new __ip263__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        capacity = capacity,
                    }
                    );
            }

            /// <summary>
            /// 创建测试二叉搜索树字典节点 LongStringSearchTreeDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateLongStringSearchTreeDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 270
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建测试消息处理节点 TestClassMessageNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="arraySize">正在处理消息数组大小</param>
            /// <param name="timeoutSeconds">消息处理超时秒数</param>
            /// <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateTestClassMessageNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int arraySize, int timeoutSeconds, int checkTimeoutSeconds)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip271__>(this, 271
                    , new __ip271__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        arraySize = arraySize,
                        timeoutSeconds = timeoutSeconds,
                        checkTimeoutSeconds = checkTimeoutSeconds,
                    }
                    );
            }

            /// <summary>
            /// 创建性能测试字典节点 PerformanceDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="capacity">容器初始化大小</param>
            /// <param name="groupType">可重用字典重组操作类型</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreatePerformanceDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int capacity, AutoCSer.ReusableDictionaryGroupTypeEnum groupType)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip259__>(this, 272
                    , new __ip259__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        capacity = capacity,
                        groupType = groupType,
                    }
                    );
            }

            /// <summary>
            /// 创建性能测试二叉搜索树字典节点 PerformanceSearchTreeDictionaryNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreatePerformanceSearchTreeDictionaryNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 273
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 创建性能测试消息处理节点 PerformanceMessageNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <param name="arraySize">正在处理消息数组大小</param>
            /// <param name="timeoutSeconds">消息处理超时秒数</param>
            /// <param name="checkTimeoutSeconds">消息超时检查间隔秒数</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreatePerformanceMessageNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo, int arraySize, int timeoutSeconds, int checkTimeoutSeconds)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip271__>(this, 274
                    , new __ip271__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                        arraySize = arraySize,
                        timeoutSeconds = timeoutSeconds,
                        checkTimeoutSeconds = checkTimeoutSeconds,
                    }
                    );
            }

            /// <summary>
            /// 创建测试仅存档节点 TestClassOnlyPersistenceNode
            /// </summary>
            /// <param name="index">节点索引信息</param>
            /// <param name="key">节点全局关键字</param>
            /// <param name="nodeInfo">节点信息</param>
            /// <returns>节点标识，已经存在节点则直接返回</returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>> ICustomServiceNodeLocalClientNode/**/.CreateTestClassOnlyPersistenceNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, string key, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, __ip256__>(this, 275
                    , new __ip256__
                    {
                        index = index,
                        key = key,
                        nodeInfo = nodeInfo,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ICustomServiceNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(CustomServiceNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(CustomServiceNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试二叉搜索树集合节点接口 节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ILongSearchTreeSetNode), typeof(LongSearchTreeSetNodeLocalClient))]
        public partial interface ILongSearchTreeSetNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Add(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> AddValues(long[] values);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Contains(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> CountLess(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> CountThan(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> GetByIndex(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> GetFrist();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> GetLast();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOf(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveValues(long[] values);
        }
        /// <summary>
        /// 测试二叉搜索树集合节点接口 节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class LongSearchTreeSetNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ILongSearchTreeSetNodeLocalClientNode>, ILongSearchTreeSetNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private LongSearchTreeSetNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ILongSearchTreeSetNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new LongSearchTreeSetNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal long value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal long[] values;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(values);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.values);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(long[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip7__
            {
                internal int index;
                
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongSearchTreeSetNodeLocalClientNode/**/.Add(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 0
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSearchTreeSetNodeLocalClientNode/**/.AddValues(long[] values)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 1
                    , new __ip1__
                    {
                        values = values,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ILongSearchTreeSetNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongSearchTreeSetNodeLocalClientNode/**/.Contains(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 3
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSearchTreeSetNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 4
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSearchTreeSetNodeLocalClientNode/**/.CountLess(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip0__>(this, 5
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSearchTreeSetNodeLocalClientNode/**/.CountThan(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip0__>(this, 6
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> ILongSearchTreeSetNodeLocalClientNode/**/.GetByIndex(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>, __ip7__>(this, 7
                    , new __ip7__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> ILongSearchTreeSetNodeLocalClientNode/**/.GetFrist()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>/**/.Create(this, 8
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> ILongSearchTreeSetNodeLocalClientNode/**/.GetLast()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>/**/.Create(this, 9
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSearchTreeSetNodeLocalClientNode/**/.IndexOf(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip0__>(this, 10
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongSearchTreeSetNodeLocalClientNode/**/.Remove(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 11
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSearchTreeSetNodeLocalClientNode/**/.RemoveValues(long[] values)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 12
                    , new __ip1__
                    {
                        values = values,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ILongSearchTreeSetNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongSearchTreeSetNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(LongSearchTreeSetNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试排序集合节点接口 节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ILongSortedSetNode), typeof(LongSortedSetNodeLocalClient))]
        public partial interface ILongSortedSetNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Add(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> AddValues(long[] values);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Contains(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> GetMax();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> GetMin();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(long value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveValues(long[] values);
        }
        /// <summary>
        /// 测试排序集合节点接口 节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class LongSortedSetNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ILongSortedSetNodeLocalClientNode>, ILongSortedSetNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private LongSortedSetNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ILongSortedSetNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new LongSortedSetNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal long value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal long[] values;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(values);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.values);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(long[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongSortedSetNodeLocalClientNode/**/.Add(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 0
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSortedSetNodeLocalClientNode/**/.AddValues(long[] values)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 1
                    , new __ip1__
                    {
                        values = values,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ILongSortedSetNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongSortedSetNodeLocalClientNode/**/.Contains(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 3
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSortedSetNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 4
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> ILongSortedSetNodeLocalClientNode/**/.GetMax()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>/**/.Create(this, 5
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> ILongSortedSetNodeLocalClientNode/**/.GetMin()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>/**/.Create(this, 6
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongSortedSetNodeLocalClientNode/**/.Remove(long value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 7
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongSortedSetNodeLocalClientNode/**/.RemoveValues(long[] values)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 8
                    , new __ip1__
                    {
                        values = values,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ILongSortedSetNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongSortedSetNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(LongSortedSetNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试二叉搜索树节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ILongStringSearchTreeDictionaryNode), typeof(LongStringSearchTreeDictionaryNodeLocalClient))]
        public partial interface ILongStringSearchTreeDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsKey(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> CountLess(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> CountThan(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetHeight();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetRemove(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<string[]>> GetValueArray(long[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="skipCount"></param>
            /// <param name="getCount"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetValues(int skipCount, byte getCount);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOf(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveKeys(long[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Set(long key, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryAdd(long key, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> TryGetFirstKey();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>>> TryGetFirstKeyValue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryGetFirstValue();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>>> TryGetKeyValueByIndex(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> TryGetLastKey();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>>> TryGetLastKeyValue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryGetLastValue();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryGetValue(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryGetValueByIndex(int index);
        }
        /// <summary>
        /// 测试二叉搜索树节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class LongStringSearchTreeDictionaryNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ILongStringSearchTreeDictionaryNodeLocalClientNode>, ILongStringSearchTreeDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private LongStringSearchTreeDictionaryNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ILongStringSearchTreeDictionaryNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new LongStringSearchTreeDictionaryNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal long key;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip7__
            {
                internal long[] keys;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(keys);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.keys);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(long[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip8__
            {
                internal int skipCount;
                internal byte getCount;
                
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip12__
            {
                internal long key;
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(12))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip13__
            {
                internal AutoCSer.KeyValue<long,string> value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.KeyValue<long,string>));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip18__
            {
                internal int index;
                
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.ContainsKey(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.CountLess(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 3
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.CountThan(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 4
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.GetHeight()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 5
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.GetRemove(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip1__>(this, 6
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<string[]>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.GetValueArray(long[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<string[], __ip7__>(this, 7
                    , new __ip7__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="skipCount"></param>
            /// <param name="getCount"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.GetValues(int skipCount, byte getCount)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip8__>(this, 8
                    , new __ip8__
                    {
                        skipCount = skipCount,
                        getCount = getCount,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.IndexOf(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 9
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.Remove(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 10
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.RemoveKeys(long[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip7__>(this, 11
                    , new __ip7__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.Set(long key, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip12__>(this, 12
                    , new __ip12__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryAdd(long key, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip12__>(this, 14
                    , new __ip12__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetFirstKey()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>/**/.Create(this, 15
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetFirstKeyValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>>/**/.Create(this, 16
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetFirstValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>/**/.Create(this, 17
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetKeyValueByIndex(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>, __ip18__>(this, 18
                    , new __ip18__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetLastKey()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<long>>/**/.Create(this, 19
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetLastKeyValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.KeyValue<long,string>>>/**/.Create(this, 20
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetLastValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>/**/.Create(this, 21
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetValue(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip1__>(this, 22
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSearchTreeDictionaryNodeLocalClientNode/**/.TryGetValueByIndex(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip18__>(this, 23
                    , new __ip18__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ILongStringSearchTreeDictionaryNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongStringSearchTreeDictionaryNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(LongStringSearchTreeDictionaryNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试排序字典节点 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ILongStringSortedDictionaryNode), typeof(LongStringSortedDictionaryNodeLocalClient))]
        public partial interface ILongStringSortedDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsKey(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsValue(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetRemove(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<string[]>> GetValueArray(long[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveKeys(long[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryAdd(long key, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryGetValue(long key);
        }
        /// <summary>
        /// 测试排序字典节点 本地客户端节点
        /// </summary>
        internal unsafe partial class LongStringSortedDictionaryNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ILongStringSortedDictionaryNodeLocalClientNode>, ILongStringSortedDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private LongStringSortedDictionaryNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ILongStringSortedDictionaryNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new LongStringSortedDictionaryNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal long key;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip2__
            {
                internal string value;
                
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip5__
            {
                internal long[] keys;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(keys);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.keys);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(long[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip8__
            {
                internal AutoCSer.KeyValue<long,string> value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.KeyValue<long,string>));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip9__
            {
                internal long key;
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(12))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__));
            }
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ILongStringSortedDictionaryNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedDictionaryNodeLocalClientNode/**/.ContainsKey(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedDictionaryNodeLocalClientNode/**/.ContainsValue(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip2__>(this, 2
                    , new __ip2__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSortedDictionaryNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 3
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSortedDictionaryNodeLocalClientNode/**/.GetRemove(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip1__>(this, 4
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<string[]>> ILongStringSortedDictionaryNodeLocalClientNode/**/.GetValueArray(long[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<string[], __ip5__>(this, 5
                    , new __ip5__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedDictionaryNodeLocalClientNode/**/.Remove(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 6
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSortedDictionaryNodeLocalClientNode/**/.RemoveKeys(long[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip5__>(this, 7
                    , new __ip5__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedDictionaryNodeLocalClientNode/**/.TryAdd(long key, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 9
                    , new __ip9__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSortedDictionaryNodeLocalClientNode/**/.TryGetValue(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip1__>(this, 10
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ILongStringSortedDictionaryNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongStringSortedDictionaryNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(LongStringSortedDictionaryNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试排序列表节点 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ILongStringSortedListNode), typeof(LongStringSortedListNodeLocalClient))]
        public partial interface ILongStringSortedListNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsKey(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsValue(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetCapacity();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetRemove(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOfKey(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOfValue(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(long key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> RemoveAt(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryAdd(long key, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryGetValue(long key);
        }
        /// <summary>
        /// 测试排序列表节点 本地客户端节点
        /// </summary>
        internal unsafe partial class LongStringSortedListNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ILongStringSortedListNodeLocalClientNode>, ILongStringSortedListNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private LongStringSortedListNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ILongStringSortedListNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new LongStringSortedListNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal long key;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip2__
            {
                internal string value;
                
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip9__
            {
                internal int index;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.index);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.index);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip10__
            {
                internal AutoCSer.KeyValue<long,string> value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.KeyValue<long,string>));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip11__
            {
                internal long key;
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(12))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__));
            }
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ILongStringSortedListNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedListNodeLocalClientNode/**/.ContainsKey(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedListNodeLocalClientNode/**/.ContainsValue(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip2__>(this, 2
                    , new __ip2__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSortedListNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 3
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSortedListNodeLocalClientNode/**/.GetCapacity()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 4
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSortedListNodeLocalClientNode/**/.GetRemove(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip1__>(this, 5
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSortedListNodeLocalClientNode/**/.IndexOfKey(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 6
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ILongStringSortedListNodeLocalClientNode/**/.IndexOfValue(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip2__>(this, 7
                    , new __ip2__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedListNodeLocalClientNode/**/.Remove(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 8
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedListNodeLocalClientNode/**/.RemoveAt(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 9
                    , new __ip9__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ILongStringSortedListNodeLocalClientNode/**/.TryAdd(long key, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip11__>(this, 11
                    , new __ip11__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> ILongStringSortedListNodeLocalClientNode/**/.TryGetValue(long key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip1__>(this, 12
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ILongStringSortedListNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongStringSortedListNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(LongStringSortedListNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 性能测试字典节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IPerformanceDictionaryNode), typeof(PerformanceDictionaryNodeLocalClient))]
        public partial interface IPerformanceDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsKey(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> GetRemove(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int[]>> GetValueArray(int[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveKeys(int[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="capacity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Renew(int capacity);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ReusableClear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Set(int key, int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryAdd(int key, int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> TryGetValue(int key);
        }
        /// <summary>
        /// 性能测试字典节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class PerformanceDictionaryNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IPerformanceDictionaryNodeLocalClientNode>, IPerformanceDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private PerformanceDictionaryNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IPerformanceDictionaryNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new PerformanceDictionaryNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal int key;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip4__
            {
                internal int[] keys;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(keys);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.keys);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(int[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip7__
            {
                internal int capacity;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.capacity);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.capacity);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip9__
            {
                internal int key;
                internal int value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip10__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.Simple(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IPerformanceDictionaryNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IPerformanceDictionaryNodeLocalClientNode/**/.ContainsKey(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceDictionaryNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceDictionaryNodeLocalClientNode/**/.GetRemove(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>, __ip1__>(this, 3
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int[]>> IPerformanceDictionaryNodeLocalClientNode/**/.GetValueArray(int[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int[], __ip4__>(this, 4
                    , new __ip4__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IPerformanceDictionaryNodeLocalClientNode/**/.Remove(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 5
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceDictionaryNodeLocalClientNode/**/.RemoveKeys(int[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip4__>(this, 6
                    , new __ip4__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="capacity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IPerformanceDictionaryNodeLocalClientNode/**/.Renew(int capacity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 7
                    , new __ip7__
                    {
                        capacity = capacity,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IPerformanceDictionaryNodeLocalClientNode/**/.ReusableClear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 8
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IPerformanceDictionaryNodeLocalClientNode/**/.Set(int key, int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 9
                    , new __ip9__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IPerformanceDictionaryNodeLocalClientNode/**/.TryAdd(int key, int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 11
                    , new __ip9__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceDictionaryNodeLocalClientNode/**/.TryGetValue(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>, __ip1__>(this, 12
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IPerformanceDictionaryNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(PerformanceDictionaryNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(PerformanceDictionaryNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 性能测试消息处理节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IPerformanceMessageNode), typeof(PerformanceMessageNodeLocalClient))]
        public partial interface IPerformanceMessageNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="message"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> AppendMessage(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage message);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ClearFailed();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="identity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="identity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetCallbackCount();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetCount();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetFailedCount();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="maxCount"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<System.IDisposable> GetMessage(int maxCount, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage>> __callback__);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetTimeoutCount();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetTotalCount();
        }
        /// <summary>
        /// 性能测试消息处理节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class PerformanceMessageNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IPerformanceMessageNodeLocalClientNode>, IPerformanceMessageNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private PerformanceMessageNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IPerformanceMessageNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new PerformanceMessageNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage message;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(message);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.message);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip6__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.Simple(identity);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.identity);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip13__
            {
                internal int maxCount;
                
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip16__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="message"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IPerformanceMessageNodeLocalClientNode/**/.AppendMessage(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage message)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 0
                    , new __ip0__
                    {
                        message = message,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IPerformanceMessageNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IPerformanceMessageNodeLocalClientNode/**/.ClearFailed()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 3
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="identity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter IPerformanceMessageNodeLocalClientNode/**/.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode/**/.Create(this, 6
                    , new __ip6__
                    {
                        identity = identity,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="identity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter IPerformanceMessageNodeLocalClientNode/**/.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode/**/.Create(this, 8
                    , new __ip6__
                    {
                        identity = identity,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceMessageNodeLocalClientNode/**/.GetCallbackCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 10
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceMessageNodeLocalClientNode/**/.GetCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 11
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceMessageNodeLocalClientNode/**/.GetFailedCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 12
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="maxCount"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<System.IDisposable> IPerformanceMessageNodeLocalClientNode/**/.GetMessage(int maxCount, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage>> __callback__)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode/**/.Create(this, 13
                    , new __ip13__
                    {
                        maxCount = maxCount,
                    }
                    , __callback__
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceMessageNodeLocalClientNode/**/.GetTimeoutCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 14
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceMessageNodeLocalClientNode/**/.GetTotalCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 15
                    , true
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IPerformanceMessageNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(PerformanceMessageNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(PerformanceMessageNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 性能测试二叉搜索树节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IPerformanceSearchTreeDictionaryNode), typeof(PerformanceSearchTreeDictionaryNodeLocalClient))]
        public partial interface IPerformanceSearchTreeDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsKey(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> CountLess(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> CountThan(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetHeight();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> GetRemove(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int[]>> GetValueArray(int[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="skipCount"></param>
            /// <param name="getCount"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> GetValues(int skipCount, byte getCount);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOf(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveKeys(int[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Set(int key, int value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryAdd(int key, int value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> TryGetFirstKey();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>>> TryGetFirstKeyValue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> TryGetFirstValue();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>>> TryGetKeyValueByIndex(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> TryGetLastKey();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>>> TryGetLastKeyValue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> TryGetLastValue();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> TryGetValue(int key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> TryGetValueByIndex(int index);
        }
        /// <summary>
        /// 性能测试二叉搜索树节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class PerformanceSearchTreeDictionaryNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IPerformanceSearchTreeDictionaryNodeLocalClientNode>, IPerformanceSearchTreeDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private PerformanceSearchTreeDictionaryNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IPerformanceSearchTreeDictionaryNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new PerformanceSearchTreeDictionaryNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal int key;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip7__
            {
                internal int[] keys;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(keys);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.keys);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(int[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip8__
            {
                internal int skipCount;
                internal byte getCount;
                
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip12__
            {
                internal int key;
                internal int value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip13__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.Simple(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip18__
            {
                internal int index;
                
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.ContainsKey(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.CountLess(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 3
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.CountThan(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 4
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.GetHeight()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 5
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.GetRemove(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>, __ip1__>(this, 6
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int[]>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.GetValueArray(int[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int[], __ip7__>(this, 7
                    , new __ip7__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="skipCount"></param>
            /// <param name="getCount"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalKeepCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.GetValues(int skipCount, byte getCount)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackEnumeratorNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>, __ip8__>(this, 8
                    , new __ip8__
                    {
                        skipCount = skipCount,
                        getCount = getCount,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.IndexOf(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 9
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.Remove(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 10
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.RemoveKeys(int[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip7__>(this, 11
                    , new __ip7__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.Set(int key, int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip12__>(this, 12
                    , new __ip12__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryAdd(int key, int value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip12__>(this, 14
                    , new __ip12__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetFirstKey()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>/**/.Create(this, 15
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetFirstKeyValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>>/**/.Create(this, 16
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetFirstValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>/**/.Create(this, 17
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetKeyValueByIndex(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>, __ip18__>(this, 18
                    , new __ip18__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetLastKey()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>/**/.Create(this, 19
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetLastKeyValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>>/**/.Create(this, 20
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetLastValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>/**/.Create(this, 21
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetValue(int key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>, __ip1__>(this, 22
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>>> IPerformanceSearchTreeDictionaryNodeLocalClientNode/**/.TryGetValueByIndex(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>, __ip18__>(this, 23
                    , new __ip18__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IPerformanceSearchTreeDictionaryNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(PerformanceSearchTreeDictionaryNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(PerformanceSearchTreeDictionaryNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试数组节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IStringArrayNode), typeof(StringArrayNodeLocalClient))]
        public partial interface IStringArrayNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Clear(int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ClearArray();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Fill(string value, int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> FillArray(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetLength();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetValue(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetValueSet(int index, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOf(string value, int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOfArray(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> LastIndexOf(string value, int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> LastIndexOfArray(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Reverse(int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ReverseArray();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> SetValue(int index, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Sort(int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SortArray();
        }
        /// <summary>
        /// 测试数组节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class StringArrayNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IStringArrayNodeLocalClientNode>, IStringArrayNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private StringArrayNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IStringArrayNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new StringArrayNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal int startIndex;
                internal int count;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.count);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.startIndex);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.count);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.startIndex);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip2__
            {
                internal string value;
                internal int startIndex;
                internal int count;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(12))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.count);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.startIndex);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.count);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.startIndex);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip3__
            {
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip5__
            {
                internal int index;
                
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip6__
            {
                internal int index;
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.index);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.index);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip14__
            {
                internal AutoCSer.KeyValue<int,string> value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.KeyValue<int,string>));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringArrayNodeLocalClientNode/**/.Clear(int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 0
                    , new __ip0__
                    {
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringArrayNodeLocalClientNode/**/.ClearArray()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 1
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringArrayNodeLocalClientNode/**/.Fill(string value, int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip2__>(this, 2
                    , new __ip2__
                    {
                        value = value,
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringArrayNodeLocalClientNode/**/.FillArray(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 3
                    , new __ip3__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringArrayNodeLocalClientNode/**/.GetLength()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 4
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringArrayNodeLocalClientNode/**/.GetValue(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip5__>(this, 5
                    , new __ip5__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringArrayNodeLocalClientNode/**/.GetValueSet(int index, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip6__>(this, 6
                    , new __ip6__
                    {
                        index = index,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringArrayNodeLocalClientNode/**/.IndexOf(string value, int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip2__>(this, 7
                    , new __ip2__
                    {
                        value = value,
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringArrayNodeLocalClientNode/**/.IndexOfArray(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip3__>(this, 8
                    , new __ip3__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringArrayNodeLocalClientNode/**/.LastIndexOf(string value, int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip2__>(this, 9
                    , new __ip2__
                    {
                        value = value,
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringArrayNodeLocalClientNode/**/.LastIndexOfArray(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip3__>(this, 10
                    , new __ip3__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringArrayNodeLocalClientNode/**/.Reverse(int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 11
                    , new __ip0__
                    {
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringArrayNodeLocalClientNode/**/.ReverseArray()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 12
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringArrayNodeLocalClientNode/**/.SetValue(int index, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip6__>(this, 13
                    , new __ip6__
                    {
                        index = index,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringArrayNodeLocalClientNode/**/.Sort(int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 15
                    , new __ip0__
                    {
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringArrayNodeLocalClientNode/**/.SortArray()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 16
                    , true
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IStringArrayNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringArrayNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(StringArrayNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试字典节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IStringDictionaryNode), typeof(StringDictionaryNodeLocalClient))]
        public partial interface IStringDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsKey(string key);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetRemove(string key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<string[]>> GetValueArray(string[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(string key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveKeys(string[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="capacity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Renew(int capacity);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ReusableClear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Set(string key, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryAdd(string key, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryGetValue(string key);
        }
        /// <summary>
        /// 测试字典节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class StringDictionaryNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IStringDictionaryNodeLocalClientNode>, IStringDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private StringDictionaryNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IStringDictionaryNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new StringDictionaryNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal string key;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip4__
            {
                internal string[] keys;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(keys);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.keys);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(string[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip7__
            {
                internal int capacity;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.capacity);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.capacity);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip9__
            {
                internal string key;
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip10__
            {
                internal AutoCSer.KeyValue<string,string> value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.KeyValue<string,string>));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringDictionaryNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringDictionaryNodeLocalClientNode/**/.ContainsKey(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringDictionaryNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringDictionaryNodeLocalClientNode/**/.GetRemove(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip1__>(this, 3
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<string[]>> IStringDictionaryNodeLocalClientNode/**/.GetValueArray(string[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<string[], __ip4__>(this, 4
                    , new __ip4__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringDictionaryNodeLocalClientNode/**/.Remove(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 5
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringDictionaryNodeLocalClientNode/**/.RemoveKeys(string[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip4__>(this, 6
                    , new __ip4__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="capacity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringDictionaryNodeLocalClientNode/**/.Renew(int capacity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 7
                    , new __ip7__
                    {
                        capacity = capacity,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringDictionaryNodeLocalClientNode/**/.ReusableClear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 8
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringDictionaryNodeLocalClientNode/**/.Set(string key, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 9
                    , new __ip9__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringDictionaryNodeLocalClientNode/**/.TryAdd(string key, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 11
                    , new __ip9__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringDictionaryNodeLocalClientNode/**/.TryGetValue(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip1__>(this, 12
                    , new __ip1__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IStringDictionaryNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringDictionaryNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(StringDictionaryNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试 256 基分片字典 节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IStringFragmentDictionaryNode), typeof(StringFragmentDictionaryNodeLocalClient))]
        public partial interface IStringFragmentDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ClearArray();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> ContainsKey(string key);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetRemove(string key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<string[]>> GetValueArray(string[] keys);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(string key);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveKeys(string[] keys);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ReusableClear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Set(string key, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryAdd(string key, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryGetValue(string key);
        }
        /// <summary>
        /// 测试 256 基分片字典 节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class StringFragmentDictionaryNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IStringFragmentDictionaryNodeLocalClientNode>, IStringFragmentDictionaryNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private StringFragmentDictionaryNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IStringFragmentDictionaryNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new StringFragmentDictionaryNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip2__
            {
                internal string key;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip5__
            {
                internal string[] keys;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(keys);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.keys);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(string[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip9__
            {
                internal string key;
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.key);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.key, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip10__
            {
                internal AutoCSer.KeyValue<string,string> value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.KeyValue<string,string>));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringFragmentDictionaryNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringFragmentDictionaryNodeLocalClientNode/**/.ClearArray()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 1
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringFragmentDictionaryNodeLocalClientNode/**/.ContainsKey(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip2__>(this, 2
                    , new __ip2__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringFragmentDictionaryNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 3
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringFragmentDictionaryNodeLocalClientNode/**/.GetRemove(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip2__>(this, 4
                    , new __ip2__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<string[]>> IStringFragmentDictionaryNodeLocalClientNode/**/.GetValueArray(string[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<string[], __ip5__>(this, 5
                    , new __ip5__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringFragmentDictionaryNodeLocalClientNode/**/.Remove(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip2__>(this, 6
                    , new __ip2__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="keys"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringFragmentDictionaryNodeLocalClientNode/**/.RemoveKeys(string[] keys)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip5__>(this, 7
                    , new __ip5__
                    {
                        keys = keys,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringFragmentDictionaryNodeLocalClientNode/**/.ReusableClear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 8
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringFragmentDictionaryNodeLocalClientNode/**/.Set(string key, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 9
                    , new __ip9__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringFragmentDictionaryNodeLocalClientNode/**/.TryAdd(string key, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 11
                    , new __ip9__
                    {
                        key = key,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="key"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringFragmentDictionaryNodeLocalClientNode/**/.TryGetValue(string key)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip2__>(this, 12
                    , new __ip2__
                    {
                        key = key,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IStringFragmentDictionaryNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringFragmentDictionaryNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(StringFragmentDictionaryNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试 256 基分片哈希表 节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IStringFragmentHashSetNode), typeof(StringFragmentHashSetNodeLocalClient))]
        public partial interface IStringFragmentHashSetNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Add(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> AddValues(string[] values);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ClearArray();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Contains(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveValues(string[] values);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ReusableClear();
        }
        /// <summary>
        /// 测试 256 基分片哈希表 节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class StringFragmentHashSetNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IStringFragmentHashSetNodeLocalClientNode>, IStringFragmentHashSetNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private StringFragmentHashSetNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IStringFragmentHashSetNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new StringFragmentHashSetNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal string[] values;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(values);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.values);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(string[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringFragmentHashSetNodeLocalClientNode/**/.Add(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 0
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringFragmentHashSetNodeLocalClientNode/**/.AddValues(string[] values)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 1
                    , new __ip1__
                    {
                        values = values,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringFragmentHashSetNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringFragmentHashSetNodeLocalClientNode/**/.ClearArray()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 3
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringFragmentHashSetNodeLocalClientNode/**/.Contains(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 4
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringFragmentHashSetNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 5
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringFragmentHashSetNodeLocalClientNode/**/.Remove(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 6
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringFragmentHashSetNodeLocalClientNode/**/.RemoveValues(string[] values)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 7
                    , new __ip1__
                    {
                        values = values,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringFragmentHashSetNodeLocalClientNode/**/.ReusableClear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 8
                    , true
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IStringFragmentHashSetNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringFragmentHashSetNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(StringFragmentHashSetNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试哈希表节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IStringHashSetNode), typeof(StringHashSetNodeLocalClient))]
        public partial interface IStringHashSetNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Add(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> AddValues(string[] values);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Contains(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> RemoveValues(string[] values);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="capacity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Renew(int capacity);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ReusableClear();
        }
        /// <summary>
        /// 测试哈希表节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class StringHashSetNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IStringHashSetNodeLocalClientNode>, IStringHashSetNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private StringHashSetNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IStringHashSetNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new StringHashSetNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal string[] values;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(values);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.values);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(string[]));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip7__
            {
                internal int capacity;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.capacity);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.capacity);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__));
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringHashSetNodeLocalClientNode/**/.Add(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 0
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringHashSetNodeLocalClientNode/**/.AddValues(string[] values)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 1
                    , new __ip1__
                    {
                        values = values,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringHashSetNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringHashSetNodeLocalClientNode/**/.Contains(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 3
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringHashSetNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 4
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringHashSetNodeLocalClientNode/**/.Remove(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 5
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="values"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringHashSetNodeLocalClientNode/**/.RemoveValues(string[] values)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip1__>(this, 6
                    , new __ip1__
                    {
                        values = values,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="capacity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringHashSetNodeLocalClientNode/**/.Renew(int capacity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 7
                    , new __ip7__
                    {
                        capacity = capacity,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringHashSetNodeLocalClientNode/**/.ReusableClear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 8
                    , true
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IStringHashSetNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringHashSetNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(StringHashSetNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试数组节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IStringLeftArrayNode), typeof(StringLeftArrayNodeLocalClient))]
        public partial interface IStringLeftArrayNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Add(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Clear(int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ClearLength();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Fill(string value, int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> FillArray(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetCapacity();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetFreeCount();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetLength();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetTryPopValue();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetValue(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetValueRemoveAt(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetValueRemoveToEnd(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> GetValueSet(int index, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOf(string value, int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IndexOfArray(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Insert(int index, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> LastIndexOf(string value, int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> LastIndexOfArray(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Remove(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> RemoveAt(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> RemoveToEnd(int index);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Reverse(int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ReverseArray();
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SetEmpty();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> SetValue(int index, string value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Sort(int startIndex, int count);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> SortArray();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryAdd(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> TryPop();
        }
        /// <summary>
        /// 测试数组节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class StringLeftArrayNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IStringLeftArrayNodeLocalClientNode>, IStringLeftArrayNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private StringLeftArrayNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IStringLeftArrayNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new StringLeftArrayNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal int startIndex;
                internal int count;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.count);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.startIndex);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.count);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.startIndex);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip3__
            {
                internal string value;
                internal int startIndex;
                internal int count;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(12))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.count);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.startIndex);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.count);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.startIndex);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip9__
            {
                internal int index;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.index);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.index);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__));
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip12__
            {
                internal int index;
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.index);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.index);
                if (__start__ == null || __start__ > __end__) return null;
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__));
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringLeftArrayNodeLocalClientNode/**/.Add(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 0
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.Clear(int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringLeftArrayNodeLocalClientNode/**/.ClearLength()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.Fill(string value, int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip3__>(this, 3
                    , new __ip3__
                    {
                        value = value,
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringLeftArrayNodeLocalClientNode/**/.FillArray(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 4
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringLeftArrayNodeLocalClientNode/**/.GetCapacity()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 5
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringLeftArrayNodeLocalClientNode/**/.GetFreeCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 6
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringLeftArrayNodeLocalClientNode/**/.GetLength()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 7
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringLeftArrayNodeLocalClientNode/**/.GetTryPopValue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>/**/.Create(this, 8
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringLeftArrayNodeLocalClientNode/**/.GetValue(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip9__>(this, 9
                    , new __ip9__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringLeftArrayNodeLocalClientNode/**/.GetValueRemoveAt(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip9__>(this, 10
                    , new __ip9__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringLeftArrayNodeLocalClientNode/**/.GetValueRemoveToEnd(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip9__>(this, 11
                    , new __ip9__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringLeftArrayNodeLocalClientNode/**/.GetValueSet(int index, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>, __ip12__>(this, 12
                    , new __ip12__
                    {
                        index = index,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringLeftArrayNodeLocalClientNode/**/.IndexOf(string value, int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip3__>(this, 13
                    , new __ip3__
                    {
                        value = value,
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringLeftArrayNodeLocalClientNode/**/.IndexOfArray(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip0__>(this, 14
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.Insert(int index, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip12__>(this, 15
                    , new __ip12__
                    {
                        index = index,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringLeftArrayNodeLocalClientNode/**/.LastIndexOf(string value, int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip3__>(this, 16
                    , new __ip3__
                    {
                        value = value,
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringLeftArrayNodeLocalClientNode/**/.LastIndexOfArray(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<int, __ip0__>(this, 17
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.Remove(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 18
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.RemoveAt(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 19
                    , new __ip9__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.RemoveToEnd(int index)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip9__>(this, 20
                    , new __ip9__
                    {
                        index = index,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.Reverse(int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 21
                    , new __ip1__
                    {
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringLeftArrayNodeLocalClientNode/**/.ReverseArray()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 22
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringLeftArrayNodeLocalClientNode/**/.SetEmpty()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 23
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="index"></param>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.SetValue(int index, string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip12__>(this, 24
                    , new __ip12__
                    {
                        index = index,
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="startIndex"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.Sort(int startIndex, int count)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 25
                    , new __ip1__
                    {
                        startIndex = startIndex,
                        count = count,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringLeftArrayNodeLocalClientNode/**/.SortArray()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 26
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.TryAdd(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip0__>(this, 27
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringLeftArrayNodeLocalClientNode/**/.TryPop()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<bool>/**/.Create(this, 28
                    , true
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IStringLeftArrayNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringLeftArrayNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(StringLeftArrayNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试队列节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IStringQueueNode), typeof(StringQueueNodeLocalClient))]
        public partial interface IStringQueueNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Contains(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Enqueue(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryDequeue();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryPeek();
        }
        /// <summary>
        /// 测试队列节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class StringQueueNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IStringQueueNodeLocalClientNode>, IStringQueueNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private StringQueueNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IStringQueueNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new StringQueueNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__));
            }
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringQueueNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringQueueNodeLocalClientNode/**/.Contains(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringQueueNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringQueueNodeLocalClientNode/**/.Enqueue(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 3
                    , new __ip1__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringQueueNodeLocalClientNode/**/.TryDequeue()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>/**/.Create(this, 4
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringQueueNodeLocalClientNode/**/.TryPeek()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>/**/.Create(this, 5
                    , true
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IStringQueueNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringQueueNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(StringQueueNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试栈节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.IStringStackNode), typeof(StringStackNodeLocalClient))]
        public partial interface IStringStackNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> Contains(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Count();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Push(string value);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryPeek();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> TryPop();
        }
        /// <summary>
        /// 测试栈节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class StringStackNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<IStringStackNodeLocalClientNode>, IStringStackNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private StringStackNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static IStringStackNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new StringStackNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip1__
            {
                internal string value;
                
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__ value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(4))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__ value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.value, __end__);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__));
            }
            }
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringStackNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 0
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<bool>> IStringStackNodeLocalClientNode/**/.Contains(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputOutputNode/**/.Create<bool, __ip1__>(this, 1
                    , new __ip1__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> IStringStackNodeLocalClientNode/**/.Count()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> IStringStackNodeLocalClientNode/**/.Push(string value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 3
                    , new __ip1__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringStackNodeLocalClientNode/**/.TryPeek()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>/**/.Create(this, 4
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>> IStringStackNodeLocalClientNode/**/.TryPop()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<string>>/**/.Create(this, 5
                    , true
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(IStringStackNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringStackNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(StringStackNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试消息处理节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ITestClassMessageNode), typeof(TestClassMessageNodeLocalClient))]
        public partial interface ITestClassMessageNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="message"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> AppendMessage(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage message);
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Clear();
            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ClearFailed();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="identity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="identity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetCallbackCount();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetCount();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetFailedCount();
            /// <summary>
            /// 
            /// </summary>
            /// <param name="maxCount"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<System.IDisposable> GetMessage(int maxCount, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage>> __callback__);
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetTimeoutCount();
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> GetTotalCount();
        }
        /// <summary>
        /// 测试消息处理节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class TestClassMessageNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ITestClassMessageNodeLocalClientNode>, ITestClassMessageNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private TestClassMessageNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ITestClassMessageNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new TestClassMessageNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage message;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(message);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.message);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip6__
            {
                internal AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.Simple(identity);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.Simple(ref this.identity);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>();
            }
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip13__
            {
                internal int maxCount;
                
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip16__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="message"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ITestClassMessageNodeLocalClientNode/**/.AppendMessage(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage message)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 0
                    , new __ip0__
                    {
                        message = message,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ITestClassMessageNodeLocalClientNode/**/.Clear()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 2
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ITestClassMessageNodeLocalClientNode/**/.ClearFailed()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallNode/**/.Create(this, 3
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="identity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter ITestClassMessageNodeLocalClientNode/**/.Completed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode/**/.Create(this, 6
                    , new __ip6__
                    {
                        identity = identity,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="identity"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter ITestClassMessageNodeLocalClientNode/**/.Failed(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode/**/.Create(this, 8
                    , new __ip6__
                    {
                        identity = identity,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ITestClassMessageNodeLocalClientNode/**/.GetCallbackCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 10
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ITestClassMessageNodeLocalClientNode/**/.GetCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 11
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ITestClassMessageNodeLocalClientNode/**/.GetFailedCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 12
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="maxCount"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<System.IDisposable> ITestClassMessageNodeLocalClientNode/**/.GetMessage(int maxCount, System.Action<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage>> __callback__)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceInputKeepCallbackNode/**/.Create(this, 13
                    , new __ip13__
                    {
                        maxCount = maxCount,
                    }
                    , __callback__
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ITestClassMessageNodeLocalClientNode/**/.GetTimeoutCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 14
                    , true
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> ITestClassMessageNodeLocalClientNode/**/.GetTotalCount()
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallOutputNode<int>/**/.Create(this, 15
                    , true
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ITestClassMessageNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(TestClassMessageNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(TestClassMessageNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试仅存档节点接口 本地客户端节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ITestClassOnlyPersistenceNode), typeof(TestClassOnlyPersistenceNodeLocalClient))]
        public partial interface ITestClassOnlyPersistenceNodeLocalClientNode
        {
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> Save(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value);
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter SaveSendOnly(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value);
        }
        /// <summary>
        /// 测试仅存档节点接口 本地客户端节点
        /// </summary>
        internal unsafe partial class TestClassOnlyPersistenceNodeLocalClient : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientNode<ITestClassOnlyPersistenceNodeLocalClientNode>, ITestClassOnlyPersistenceNodeLocalClientNode
        {
            /// <summary>
            /// 本地客户端节点
            /// </summary>
            /// <param name="key">节点全局关键字</param>
            /// <param name="creator">创建节点操作对象委托</param>
            /// <param name="client">日志流持久化内存数据库客户端</param>
            /// <param name="index">节点索引信息</param>
            /// <param name="isPersistenceCallbackExceptionRenewNode">服务端节点产生持久化成功但是执行异常状态时 PersistenceCallbackException 节点将不可操作直到该异常被修复并重启服务端，该参数设置为 true 则在调用发生该异常以后自动删除该服务端节点并重新创建新节点避免该节点长时间不可使用的情况，代价是历史数据将全部丢失</param>
            private TestClassOnlyPersistenceNodeLocalClient(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
                : base(key, creator, client, index, isPersistenceCallbackExceptionRenewNode) { }
            internal static ITestClassOnlyPersistenceNodeLocalClientNode LocalClientNodeConstructor(string key, Func<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex, string, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>>> creator, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClient client, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index, bool isPersistenceCallbackExceptionRenewNode)
            {
                return new TestClassOnlyPersistenceNodeLocalClient(key, creator, client, index, isPersistenceCallbackExceptionRenewNode);
            }
            [System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Auto)]
            internal struct __ip0__
            {
                internal AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value;
                
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="serializer"></param>
            /// <param name="value"></param>
            internal static void BinarySerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__ value)
            {
                if (serializer.WriteMemberCountVerify(4, 1073741825)) value.binarySerialize(serializer);
            }
            /// <summary>
            /// 二进制序列化
            /// </summary>
            /// <param name="__serializer__"></param>
            private void binarySerialize(AutoCSer.BinarySerializer __serializer__)
            {
                __serializer__.BinarySerialize(value);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="deserializer"></param>
            /// <param name="value"></param>
            internal static void BinaryDeserialize(AutoCSer.BinaryDeserializer deserializer, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__ value)
            {
                value.binaryDeserialize(deserializer);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                binaryFieldDeserialize(__deserializer__);
            }
            /// <summary>
            /// 二进制反序列化
            /// </summary>
            /// <param name="__deserializer__"></param>
            private void binaryFieldDeserialize(AutoCSer.BinaryDeserializer __deserializer__)
            {
                __deserializer__.BinaryDeserialize(ref this.value);
            }
            /// <summary>
            /// 获取二进制序列化类型信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.BinarySerialize.TypeInfo BinarySerializeMemberTypes()
            {
                AutoCSer.BinarySerialize.TypeInfo typeInfo = new AutoCSer.BinarySerialize.TypeInfo(false, 1, 1073741825);
                typeInfo.Add(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass));
                return typeInfo;
            }
            /// <summary>
            /// 二进制序列化代码生成调用激活 AOT 反射
            /// </summary>
            internal static void BinarySerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__ value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__);
                BinarySerialize(null, value);
                BinaryDeserialize(null, ref value);
                AutoCSer.AotReflection.ConstructorNonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__));
                BinarySerializeMemberTypes();
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__));
                AutoCSer.Metadata.DefaultConstructor.GetIsSerializeConstructor<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>();
            }
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult> ITestClassOnlyPersistenceNodeLocalClientNode/**/.Save(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceCallInputNode/**/.Create(this, 0
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter ITestClassOnlyPersistenceNodeLocalClientNode/**/.SaveSendOnly(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value)
            {
                
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceSendOnlyNode/**/.Create(this, 2
                    , new __ip0__
                    {
                        value = value,
                    }
                    );
            }

            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal static void LocalClientNode()
            {
                LocalClientNodeConstructor(null, null, null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex), false);
                AutoCSer.AotReflection.NonPublicFields(typeof(ITestClassOnlyPersistenceNodeMethodEnum));
                AutoCSer.AotReflection.NonPublicMethods(typeof(TestClassOnlyPersistenceNodeLocalClient));
                AutoCSer.AotReflection.Interfaces(typeof(TestClassOnlyPersistenceNodeLocalClient));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game
{
        /// <summary>
        /// 
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IGameNodeMethodEnum), typeof(GameNodeMethodParameterCreator), true)]
        public partial interface IGameNode { }
        /// <summary>
        ///  节点方法序号映射枚举类型
        /// </summary>
        public enum IGameNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster 
            /// </summary>
            AddMonster = 0,
            /// <summary>
            /// [1] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters 
            /// </summary>
            AddMonsters = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Clear = 2,
            /// <summary>
            /// [3] 
            /// int id 
            /// int speed 
            /// </summary>
            SetSpeed = 3,
            /// <summary>
            /// [4] 
            /// AutoCSer.KeyValue{int,int}[] speeds 
            /// </summary>
            SetSpeeds = 4,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IGameNode_AddMonster_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__>
        {
            internal IGameNode_AddMonster_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IGameNode>(methodParameter).AddMonster(parameter.monster);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IGameNode_AddMonsters_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__>
        {
            internal IGameNode_AddMonsters_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IGameNode>(methodParameter).AddMonsters(parameter.monsters);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IGameNode_Clear_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IGameNode_Clear_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IGameNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IGameNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IGameNode_SetSpeed_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__>
        {
            internal IGameNode_SetSpeed_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)11) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IGameNode>(methodParameter).SetSpeed(parameter.id, parameter.speed);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IGameNode_SetSpeeds_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__>
        {
            internal IGameNode_SetSpeeds_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IGameNode>(methodParameter).SetSpeeds(parameter.speeds);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  创建调用方法与参数信息
        /// </summary>
        internal sealed partial class GameNodeMethodParameterCreator
            : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator<IGameNode>, IGameNode
        {
            private static void AddMonster_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__ { monster = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IGameNode_AddMonster_0(),
                        new IGameNode_AddMonsters_1(),
                        new IGameNode_Clear_2(),
                        new IGameNode_SetSpeed_3(),
                        new IGameNode_SetSpeeds_4(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(0, typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster), AddMonster_SnapshotSerialize),
                    });
            }
            private GameNodeMethodParameterCreator(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IGameNode> node) : base(node) { }
            internal static IGameNode MethodParameterCreator(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IGameNode> node)
            {
                return new GameNodeMethodParameterCreator(node);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monster"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode/**/.AddMonster(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster monster)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 0
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__
                    {
                        monster = monster,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="monsters"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode/**/.AddMonsters(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] monsters)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 1
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__
                    {
                        monsters = monsters,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode/**/.Clear()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallMethodParameter(this, 2
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="id"></param>
            /// <param name="speed"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode/**/.SetSpeed(int id, int speed)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 3
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__
                    {
                        id = id,
                        speed = speed,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="speeds"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.IGameNode/**/.SetSpeeds(AutoCSer.KeyValue<int,int>[] speeds)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 4
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__
                    {
                        speeds = speeds,
                    }
                    );
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(GameNodeMethodParameterCreator));
                MethodParameterCreator(null);
                AutoCSer.AotReflection.Interfaces(typeof(GameNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 回调测试节点
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ICallbackNodeMethodEnum), typeof(CallbackNodeMethodParameterCreator), true)]
        public partial interface ICallbackNode { }
        /// <summary>
        /// 回调测试节点 节点方法序号映射枚举类型
        /// </summary>
        public enum ICallbackNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// int value 
            /// </summary>
            CallCustomPersistence = 0,
            /// <summary>
            /// [1] 
            /// int value 
            /// 返回值 int 
            /// </summary>
            CallInoutOutputCommand = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Callback = 2,
            /// <summary>
            /// [3] 
            /// 返回值 bool 
            /// </summary>
            CallbackBeforePersistence = 3,
            /// <summary>
            /// [4] 
            /// </summary>
            CallbackCommand = 4,
            /// <summary>
            /// [5] 
            /// 返回值 bool 
            /// </summary>
            CheckSnapshot = 5,
            /// <summary>
            /// [6] 
            /// int value 
            /// </summary>
            CustomPersistence = 6,
            /// <summary>
            /// [7] 
            /// 返回值 int 
            /// </summary>
            Enumerable = 7,
            /// <summary>
            /// [8] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            EnumerableBeforePersistence = 8,
            /// <summary>
            /// [9] 
            /// 返回值 AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster 
            /// </summary>
            GetJsonValue = 9,
            /// <summary>
            /// [10] 
            /// 返回值 int 
            /// </summary>
            GetValue = 10,
            /// <summary>
            /// [11] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            GetValueBeforePersistence = 11,
            /// <summary>
            /// [12] 
            /// 返回值 int 
            /// </summary>
            GetValueCommand = 12,
            /// <summary>
            /// [13] 
            /// int value 
            /// int count 
            /// 返回值 int 
            /// </summary>
            InputEnumerable = 13,
            /// <summary>
            /// [14] 
            /// int value 
            /// int count 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            InputEnumerableBeforePersistence = 14,
            /// <summary>
            /// [15] 
            /// int value 
            /// int count 
            /// </summary>
            InputKeepCallback = 15,
            /// <summary>
            /// [16] 
            /// int value 
            /// int count 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            InputKeepCallbackBeforePersistence = 16,
            /// <summary>
            /// [17] 
            /// </summary>
            KeepCallback = 17,
            /// <summary>
            /// [18] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            KeepCallbackBeforePersistence = 18,
            /// <summary>
            /// [19] 
            /// </summary>
            PersistenceCallbackException = 19,
            /// <summary>
            /// [20] 
            /// </summary>
            SetCallback = 20,
            /// <summary>
            /// [21] 
            /// </summary>
            SetCallbackPersistence = 21,
            /// <summary>
            /// [22] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            SetCallbackPersistenceBeforePersistence = 22,
            /// <summary>
            /// [23] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value 
            /// </summary>
            SetJsonValue = 23,
            /// <summary>
            /// [24] 
            /// int value 
            /// </summary>
            SetValue = 24,
            /// <summary>
            /// [25] 
            /// int value 
            /// 返回值 bool 
            /// </summary>
            SetValueBeforePersistence = 25,
            /// <summary>
            /// [26] 
            /// int value 
            /// </summary>
            SetValueCallback = 26,
            /// <summary>
            /// [27] 
            /// int value 
            /// </summary>
            SetValueCallbackPersistence = 27,
            /// <summary>
            /// [28] 
            /// int value 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            SetValueCallbackPersistenceBeforePersistence = 28,
            /// <summary>
            /// [29] 
            /// int value 
            /// </summary>
            SetValueCommand = 29,
            /// <summary>
            /// [30] 
            /// int value 
            /// </summary>
            SetValuePersistenceSendOnly = 30,
            /// <summary>
            /// [31] 
            /// int value 
            /// 返回值 bool 
            /// </summary>
            SetValuePersistenceSendOnlyBeforePersistence = 31,
            /// <summary>
            /// [32] 
            /// int value 
            /// </summary>
            SetValueSendOnly = 32,
            /// <summary>
            /// [33] 
            /// int value 
            /// </summary>
            SnapshotSet = 33,
            /// <summary>
            /// [34] 
            /// long value 
            /// </summary>
            SnapshotSet64 = 34,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_CallCustomPersistence_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_CallCustomPersistence_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).CallCustomPersistence(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_CallInoutOutputCommand_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_CallInoutOutputCommand_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)15) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).CallInoutOutputCommand(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_Callback_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ICallbackNode_Callback_2() : base(2, 3, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).Callback();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_CallbackBeforePersistence_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_CallbackBeforePersistence_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)0) { }
            public override bool CallBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node)
            {
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).CallbackBeforePersistence();
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_CallbackCommand_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ICallbackNode_CallbackCommand_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).CallbackCommand();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_CheckSnapshot_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_CheckSnapshot_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).CheckSnapshot(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_CustomPersistence_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_CustomPersistence_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)8) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).CustomPersistence(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_Enumerable_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod
        {
            internal ICallbackNode_Enumerable_7() : base(7, 8, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum)9, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerKeepCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod.EnumerableCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).Enumerable(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_EnumerableBeforePersistence_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_EnumerableBeforePersistence_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)4) { }
            public override AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node)
            {
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.GetBeforePersistenceResponseParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).EnumerableBeforePersistence(), (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)4);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_GetJsonValue_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_GetJsonValue_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).GetJsonValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_GetValue_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_GetValue_10() : base(10, 11, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).GetValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_GetValueBeforePersistence_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_GetValueBeforePersistence_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)4) { }
            public override AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node)
            {
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.GetBeforePersistenceResponseParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).GetValueBeforePersistence(), (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)4);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_GetValueCommand_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_GetValueCommand_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).GetValueCommand(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_InputEnumerable_13 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>
        {
            internal ICallbackNode_InputEnumerable_13() : base(13, 14, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum)10, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)15) { }
            public override void InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.EnumerableCallback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).InputEnumerable(parameter.value, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_InputEnumerableBeforePersistence_14 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>
        {
            internal ICallbackNode_InputEnumerableBeforePersistence_14() : base(14, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)12) { }
            public override AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>)methodParameter);
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.GetBeforePersistenceResponseParameter(methodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).InputEnumerableBeforePersistence(parameter.value, parameter.count));

            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_InputKeepCallback_15 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>
        {
            internal ICallbackNode_InputKeepCallback_15() : base(15, 16, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)15) { }
            public override void InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).InputKeepCallback(parameter.value, parameter.count, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback<int>.Create(methodParameter));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_InputKeepCallbackBeforePersistence_16 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>
        {
            internal ICallbackNode_InputKeepCallbackBeforePersistence_16() : base(16, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)12) { }
            public override AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__>)methodParameter);
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.GetBeforePersistenceResponseParameter(methodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).InputKeepCallbackBeforePersistence(parameter.value, parameter.count));

            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_KeepCallback_17 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackMethod
        {
            internal ICallbackNode_KeepCallback_17() : base(17, 18, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerKeepCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.KeepCallbackResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback<int>.Create(ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_KeepCallbackBeforePersistence_18 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_KeepCallbackBeforePersistence_18() : base(18, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)4) { }
            public override AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node)
            {
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.GetBeforePersistenceResponseParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).KeepCallbackBeforePersistence(), (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)4);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_PersistenceCallbackException_19 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ICallbackNode_PersistenceCallbackException_19() : base(19, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)19) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).PersistenceCallbackException();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetCallback_20 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_SetCallback_20() : base(20, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum)7, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)134) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).SetCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int>.Create(ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)134));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetCallbackPersistence_21 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_SetCallbackPersistence_21() : base(21, 22, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum)7, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).SetCallbackPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int>.Create(ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetCallbackPersistenceBeforePersistence_22 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ICallbackNode_SetCallbackPersistenceBeforePersistence_22() : base(22, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)4) { }
            public override AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node)
            {
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.GetBeforePersistenceResponseParameter(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode>)node).SetCallbackPersistenceBeforePersistence(), (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)4);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetJsonValue_23 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__>
        {
            internal ICallbackNode_SetJsonValue_23() : base(23, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetJsonValue(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValue_24 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValue_24() : base(24, 25, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)11) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValue(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValueBeforePersistence_25 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValueBeforePersistence_25() : base(25, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)8) { }
            public override bool CallBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValueBeforePersistence(parameter.value);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValueCallback_26 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValueCallback_26() : base(26, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum)8, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)15) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValueCallback(parameter.value, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int>.Create(methodParameter));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValueCallbackPersistence_27 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValueCallbackPersistence_27() : base(27, 28, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum)8, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)15) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValueCallbackPersistence(parameter.value, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int>.Create(methodParameter));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValueCallbackPersistenceBeforePersistence_28 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValueCallbackPersistenceBeforePersistence_28() : base(28, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)12) { }
            public override AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> CallOutputBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.GetBeforePersistenceResponseParameter(methodParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValueCallbackPersistenceBeforePersistence(parameter.value));

            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValueCommand_29 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValueCommand_29() : base(29, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)11) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValueCommand(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValuePersistenceSendOnly_30 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValuePersistenceSendOnly_30() : base(30, 31, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)11) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValuePersistenceSendOnly(parameter.value);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValuePersistenceSendOnlyBeforePersistence_31 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValuePersistenceSendOnlyBeforePersistence_31() : base(31, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)8) { }
            public override bool CallBeforePersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                return AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValuePersistenceSendOnlyBeforePersistence(parameter.value);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SetValueSendOnly_32 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SetValueSendOnly_32() : base(32, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SetValueSendOnly(parameter.value);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SnapshotSet_33 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>
        {
            internal ICallbackNode_SnapshotSet_33() : base(33, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)9) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SnapshotSet(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ICallbackNode_SnapshotSet64_34 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__>
        {
            internal ICallbackNode_SnapshotSet64_34() : base(34, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)9) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICallbackNode>(methodParameter).SnapshotSet64(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        /// 回调测试节点 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class CallbackNodeMethodParameterCreator
            : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator<ICallbackNode>, ICallbackNode
        {
            private static void SnapshotSet_SnapshotSerialize(AutoCSer.BinarySerializer serializer, int value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            private static void SnapshotSet64_SnapshotSerialize(AutoCSer.BinarySerializer serializer, long value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ICallbackNode_CallCustomPersistence_0(),
                        new ICallbackNode_CallInoutOutputCommand_1(),
                        new ICallbackNode_Callback_2(),
                        new ICallbackNode_CallbackBeforePersistence_3(),
                        new ICallbackNode_CallbackCommand_4(),
                        new ICallbackNode_CheckSnapshot_5(),
                        new ICallbackNode_CustomPersistence_6(),
                        new ICallbackNode_Enumerable_7(),
                        new ICallbackNode_EnumerableBeforePersistence_8(),
                        new ICallbackNode_GetJsonValue_9(),
                        new ICallbackNode_GetValue_10(),
                        new ICallbackNode_GetValueBeforePersistence_11(),
                        new ICallbackNode_GetValueCommand_12(),
                        new ICallbackNode_InputEnumerable_13(),
                        new ICallbackNode_InputEnumerableBeforePersistence_14(),
                        new ICallbackNode_InputKeepCallback_15(),
                        new ICallbackNode_InputKeepCallbackBeforePersistence_16(),
                        new ICallbackNode_KeepCallback_17(),
                        new ICallbackNode_KeepCallbackBeforePersistence_18(),
                        new ICallbackNode_PersistenceCallbackException_19(),
                        new ICallbackNode_SetCallback_20(),
                        new ICallbackNode_SetCallbackPersistence_21(),
                        new ICallbackNode_SetCallbackPersistenceBeforePersistence_22(),
                        new ICallbackNode_SetJsonValue_23(),
                        new ICallbackNode_SetValue_24(),
                        new ICallbackNode_SetValueBeforePersistence_25(),
                        new ICallbackNode_SetValueCallback_26(),
                        new ICallbackNode_SetValueCallbackPersistence_27(),
                        new ICallbackNode_SetValueCallbackPersistenceBeforePersistence_28(),
                        new ICallbackNode_SetValueCommand_29(),
                        new ICallbackNode_SetValuePersistenceSendOnly_30(),
                        new ICallbackNode_SetValuePersistenceSendOnlyBeforePersistence_31(),
                        new ICallbackNode_SetValueSendOnly_32(),
                        new ICallbackNode_SnapshotSet_33(),
                        new ICallbackNode_SnapshotSet64_34(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(33, typeof(int), SnapshotSet_SnapshotSerialize),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(34, typeof(long), SnapshotSet64_SnapshotSerialize),
                    });
            }
            private CallbackNodeMethodParameterCreator(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode> node) : base(node) { }
            internal static ICallbackNode MethodParameterCreator(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ICallbackNode> node)
            {
                return new CallbackNodeMethodParameterCreator(node);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.CallCustomPersistence(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 0
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            int AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.CallInoutOutputCommand(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputMethodParameter(this, 1
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
                return default(int);
            }
            /// <summary>
            /// 
            /// </summary>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.Callback()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallMethodParameter(this, 2
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            bool AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.CallbackBeforePersistence()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 3
                    );
                return default(bool);
            }
            /// <summary>
            /// 
            /// </summary>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.CallbackCommand()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallMethodParameter(this, 4
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            bool AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.CheckSnapshot()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 5
                    );
                return default(bool);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.CustomPersistence(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 6
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            System.Collections.Generic.IEnumerable<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.Enumerable()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateKeepCallbackMethodParameter(this, 7
                    );
                return default(System.Collections.Generic.IEnumerable<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.EnumerableBeforePersistence()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 8
                    );
                return default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.GetJsonValue()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 9
                    );
                return default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            int AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.GetValue()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 10
                    );
                return default(int);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.GetValueBeforePersistence()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 11
                    );
                return default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            int AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.GetValueCommand()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 12
                    );
                return default(int);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            System.Collections.Generic.IEnumerable<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.InputEnumerable(int value, int count)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateInputKeepCallbackMethodParameter(this, 13
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__
                    {
                        value = value,
                        count = count,
                    }
                    );
                return default(System.Collections.Generic.IEnumerable<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.InputEnumerableBeforePersistence(int value, int count)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputMethodParameter(this, 14
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__
                    {
                        value = value,
                        count = count,
                    }
                    );
                return default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.InputKeepCallback(int value, int count, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback<int> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateInputKeepCallbackMethodParameter(this, 15
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__
                    {
                        value = value,
                        count = count,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <param name="count"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.InputKeepCallbackBeforePersistence(int value, int count)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputMethodParameter(this, 16
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__
                    {
                        value = value,
                        count = count,
                    }
                    );
                return default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.KeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback<int> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateKeepCallbackMethodParameter(this, 17
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.KeepCallbackBeforePersistence()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 18
                    );
                return default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.PersistenceCallbackException()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallMethodParameter(this, 19
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputCallbackMethodParameter(this, 20
                    , AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int>.GetCallback(callback)
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetCallbackPersistence(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputCallbackMethodParameter(this, 21
                    , AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int>.GetCallback(callback)
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetCallbackPersistenceBeforePersistence()
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallOutputMethodParameter(this, 22
                    );
                return default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetJsonValue(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 23
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__
                    {
                        value = value,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValue(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 24
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            bool AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValueBeforePersistence(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputMethodParameter(this, 25
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
                return default(bool);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValueCallback(int value, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputCallbackMethodParameter(this, 26
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    , AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int>.GetCallback(callback)
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValueCallbackPersistence(int value, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputCallbackMethodParameter(this, 27
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    , AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback<int>.GetCallback(callback)
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int> AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValueCallbackPersistenceBeforePersistence(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputMethodParameter(this, 28
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
                return default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult<int>);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValueCommand(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 29
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValuePersistenceSendOnly(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateSendOnlyMethodParameter(this, 30
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            /// <returns></returns>
            bool AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValuePersistenceSendOnlyBeforePersistence(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputOutputMethodParameter(this, 31
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
                return default(bool);
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SetValueSendOnly(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateSendOnlyMethodParameter(this, 32
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SnapshotSet(int value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 33
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__
                    {
                        value = value,
                    }
                    );
            }
            /// <summary>
            /// 
            /// </summary>
            /// <param name="value"></param>
            void AutoCSer.TestCase.StreamPersistenceMemoryDatabase.ICallbackNode/**/.SnapshotSet64(long value)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameterCreator.CreateCallInputMethodParameter(this, 34
                    , new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__
                    {
                        value = value,
                    }
                    );
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(CallbackNodeMethodParameterCreator));
                MethodParameterCreator(null);
                AutoCSer.AotReflection.Interfaces(typeof(CallbackNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 服务基础操作自定义扩展接口（用于添加自定义节点创建接口）
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ICustomServiceNodeMethodEnum), typeof(CustomServiceNodeMethodParameterCreator))]
        public partial interface ICustomServiceNode { }
        /// <summary>
        /// 服务基础操作自定义扩展接口（用于添加自定义节点创建接口） 节点方法序号映射枚举类型
        /// </summary>
        public enum ICustomServiceNodeMethodEnum
        {
            /// <summary>
            /// [0] 创建位图节点 BitmapNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// uint capacity 二进制位数量
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateBitmapNode = 0,
            /// <summary>
            /// [1] 创建 64 位自增ID 节点 IdentityGeneratorNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// long identity 起始分配 ID
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateIdentityGeneratorNode = 1,
            /// <summary>
            /// [2] 删除节点
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// 返回值 bool 是否成功删除节点，否则表示没有找到节点
            /// </summary>
            RemoveNode = 2,
            /// <summary>
            /// [3] 删除节点
            /// string key 节点全局关键字
            /// 返回值 bool 是否成功删除节点，否则表示没有找到节点
            /// </summary>
            RemoveNodeByKey = 3,
            /// <summary>
            /// [4] 多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int size 位图大小（位数量）
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateManyHashBitMapClientFilterNode = 4,
            /// <summary>
            /// [5] 创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int size 位图大小（位数量）
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateManyHashBitMapFilterNode = 5,
            /// <summary>
            /// [256] 创建回调测试节点 ICallbackNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateCallbackNode = 256,
            /// <summary>
            /// [257] 创建游戏测试节点 GameNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateGameNode = 257,
            /// <summary>
            /// [258] 创建测试数组节点 StringArrayNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int length 数组长度
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStringArrayNode = 258,
            /// <summary>
            /// [259] 创建测试字典节点 StringDictionaryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int capacity 容器初始化大小
            /// AutoCSer.ReusableDictionaryGroupTypeEnum groupType 可重用字典重组操作类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStringDictionaryNode = 259,
            /// <summary>
            /// [260] 创建测试 256 基分片字典节点 StringFragmentDictionaryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStringFragmentDictionaryNode = 260,
            /// <summary>
            /// [261] 创建测试哈希表节点 StringHashSetNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int capacity 容器初始化大小
            /// AutoCSer.ReusableDictionaryGroupTypeEnum groupType 可重用字典重组操作类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStringHashSetNode = 261,
            /// <summary>
            /// [262] 创建测试 256 基分片哈希表节点 StringFragmentHashSetNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStringFragmentHashSetNode = 262,
            /// <summary>
            /// [263] 创建测试数组节点 StringLeftArrayNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int capacity 容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStringLeftArrayNode = 263,
            /// <summary>
            /// [264] 创建测试队列节点接口 StringQueueNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int capacity 容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStringQueueNode = 264,
            /// <summary>
            /// [265] 创建测试栈节点 StringStackNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int capacity 容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateStringStackNode = 265,
            /// <summary>
            /// [266] 创建测试二叉搜索树集合节点 LongSearchTreeSetNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateLongSearchTreeSetNode = 266,
            /// <summary>
            /// [267] 创建测试排序集合节点 LongSortedSetNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateLongSortedSetNode = 267,
            /// <summary>
            /// [268] 创建测试排序字典节点 LongStringSortedDictionaryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateLongStringSortedDictionaryNode = 268,
            /// <summary>
            /// [269] 创建排序列表节点 LongStringSortedListNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int capacity 容器初始化大小
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateLongStringSortedListNode = 269,
            /// <summary>
            /// [270] 创建测试二叉搜索树字典节点 LongStringSearchTreeDictionaryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateLongStringSearchTreeDictionaryNode = 270,
            /// <summary>
            /// [271] 创建测试消息处理节点 TestClassMessageNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int arraySize 正在处理消息数组大小
            /// int timeoutSeconds 消息处理超时秒数
            /// int checkTimeoutSeconds 消息超时检查间隔秒数
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateTestClassMessageNode = 271,
            /// <summary>
            /// [272] 创建性能测试字典节点 PerformanceDictionaryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int capacity 容器初始化大小
            /// AutoCSer.ReusableDictionaryGroupTypeEnum groupType 可重用字典重组操作类型
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreatePerformanceDictionaryNode = 272,
            /// <summary>
            /// [273] 创建性能测试二叉搜索树字典节点 PerformanceSearchTreeDictionaryNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreatePerformanceSearchTreeDictionaryNode = 273,
            /// <summary>
            /// [274] 创建性能测试消息处理节点 PerformanceMessageNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// int arraySize 正在处理消息数组大小
            /// int timeoutSeconds 消息处理超时秒数
            /// int checkTimeoutSeconds 消息超时检查间隔秒数
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreatePerformanceMessageNode = 274,
            /// <summary>
            /// [275] 创建测试仅存档节点 TestClassOnlyPersistenceNode
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            /// string key 节点全局关键字
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            /// </summary>
            CreateTestClassOnlyPersistenceNode = 275,
        }
        /// <summary>
        /// 创建位图节点 BitmapNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateBitmapNode_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__>
        {
            internal ICustomServiceNode_CreateBitmapNode_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateBitmapNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.capacity));
            }
        }
        /// <summary>
        /// 创建 64 位自增ID 节点 IdentityGeneratorNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateIdentityGeneratorNode_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__>
        {
            internal ICustomServiceNode_CreateIdentityGeneratorNode_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateIdentityGeneratorNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.identity));
            }
        }
        /// <summary>
        /// 删除节点 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_RemoveNode_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__>
        {
            internal ICustomServiceNode_RemoveNode_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).RemoveNode(parameter.index));
            }
        }
        /// <summary>
        /// 删除节点 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_RemoveNodeByKey_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__>
        {
            internal ICustomServiceNode_RemoveNodeByKey_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)15) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).RemoveNodeByKey(parameter.key));
            }
        }
        /// <summary>
        /// 多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateManyHashBitMapClientFilterNode_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__>
        {
            internal ICustomServiceNode_CreateManyHashBitMapClientFilterNode_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateManyHashBitMapClientFilterNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.size));
            }
        }
        /// <summary>
        /// 创建多哈希位图过滤节点 IManyHashBitMapFilterNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateManyHashBitMapFilterNode_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__>
        {
            internal ICustomServiceNode_CreateManyHashBitMapFilterNode_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateManyHashBitMapFilterNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.size));
            }
        }
        /// <summary>
        /// 创建回调测试节点 ICallbackNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateCallbackNode_256 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateCallbackNode_256() : base(256, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateCallbackNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建游戏测试节点 GameNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateGameNode_257 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateGameNode_257() : base(257, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateGameNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建测试数组节点 StringArrayNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateStringArrayNode_258 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__>
        {
            internal ICustomServiceNode_CreateStringArrayNode_258() : base(258, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateStringArrayNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.length));
            }
        }
        /// <summary>
        /// 创建测试字典节点 StringDictionaryNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateStringDictionaryNode_259 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>
        {
            internal ICustomServiceNode_CreateStringDictionaryNode_259() : base(259, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateStringDictionaryNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.capacity, parameter.groupType));
            }
        }
        /// <summary>
        /// 创建测试 256 基分片字典节点 StringFragmentDictionaryNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateStringFragmentDictionaryNode_260 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateStringFragmentDictionaryNode_260() : base(260, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateStringFragmentDictionaryNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建测试哈希表节点 StringHashSetNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateStringHashSetNode_261 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>
        {
            internal ICustomServiceNode_CreateStringHashSetNode_261() : base(261, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateStringHashSetNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.capacity, parameter.groupType));
            }
        }
        /// <summary>
        /// 创建测试 256 基分片哈希表节点 StringFragmentHashSetNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateStringFragmentHashSetNode_262 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateStringFragmentHashSetNode_262() : base(262, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateStringFragmentHashSetNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建测试数组节点 StringLeftArrayNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateStringLeftArrayNode_263 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>
        {
            internal ICustomServiceNode_CreateStringLeftArrayNode_263() : base(263, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateStringLeftArrayNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.capacity));
            }
        }
        /// <summary>
        /// 创建测试队列节点接口 StringQueueNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateStringQueueNode_264 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>
        {
            internal ICustomServiceNode_CreateStringQueueNode_264() : base(264, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateStringQueueNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.capacity));
            }
        }
        /// <summary>
        /// 创建测试栈节点 StringStackNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateStringStackNode_265 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>
        {
            internal ICustomServiceNode_CreateStringStackNode_265() : base(265, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateStringStackNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.capacity));
            }
        }
        /// <summary>
        /// 创建测试二叉搜索树集合节点 LongSearchTreeSetNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateLongSearchTreeSetNode_266 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateLongSearchTreeSetNode_266() : base(266, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateLongSearchTreeSetNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建测试排序集合节点 LongSortedSetNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateLongSortedSetNode_267 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateLongSortedSetNode_267() : base(267, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateLongSortedSetNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建测试排序字典节点 LongStringSortedDictionaryNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateLongStringSortedDictionaryNode_268 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateLongStringSortedDictionaryNode_268() : base(268, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateLongStringSortedDictionaryNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建排序列表节点 LongStringSortedListNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateLongStringSortedListNode_269 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>
        {
            internal ICustomServiceNode_CreateLongStringSortedListNode_269() : base(269, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateLongStringSortedListNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.capacity));
            }
        }
        /// <summary>
        /// 创建测试二叉搜索树字典节点 LongStringSearchTreeDictionaryNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateLongStringSearchTreeDictionaryNode_270 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateLongStringSearchTreeDictionaryNode_270() : base(270, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateLongStringSearchTreeDictionaryNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建测试消息处理节点 TestClassMessageNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateTestClassMessageNode_271 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__>
        {
            internal ICustomServiceNode_CreateTestClassMessageNode_271() : base(271, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateTestClassMessageNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.arraySize, parameter.timeoutSeconds, parameter.checkTimeoutSeconds));
            }
        }
        /// <summary>
        /// 创建性能测试字典节点 PerformanceDictionaryNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreatePerformanceDictionaryNode_272 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>
        {
            internal ICustomServiceNode_CreatePerformanceDictionaryNode_272() : base(272, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreatePerformanceDictionaryNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.capacity, parameter.groupType));
            }
        }
        /// <summary>
        /// 创建性能测试二叉搜索树字典节点 PerformanceSearchTreeDictionaryNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreatePerformanceSearchTreeDictionaryNode_273 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreatePerformanceSearchTreeDictionaryNode_273() : base(273, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreatePerformanceSearchTreeDictionaryNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 创建性能测试消息处理节点 PerformanceMessageNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreatePerformanceMessageNode_274 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__>
        {
            internal ICustomServiceNode_CreatePerformanceMessageNode_274() : base(274, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreatePerformanceMessageNode(parameter.index, parameter.key, parameter.nodeInfo, parameter.arraySize, parameter.timeoutSeconds, parameter.checkTimeoutSeconds));
            }
        }
        /// <summary>
        /// 创建测试仅存档节点 TestClassOnlyPersistenceNode 服务端节点方法
        /// </summary>
        internal sealed class ICustomServiceNode_CreateTestClassOnlyPersistenceNode_275 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>
        {
            internal ICustomServiceNode_CreateTestClassOnlyPersistenceNode_275() : base(275, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ICustomServiceNode>(methodParameter).CreateTestClassOnlyPersistenceNode(parameter.index, parameter.key, parameter.nodeInfo));
            }
        }
        /// <summary>
        /// 服务基础操作自定义扩展接口（用于添加自定义节点创建接口） 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class CustomServiceNodeMethodParameterCreator
        {
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ICustomServiceNode_CreateBitmapNode_0(),
                        new ICustomServiceNode_CreateIdentityGeneratorNode_1(),
                        new ICustomServiceNode_RemoveNode_2(),
                        new ICustomServiceNode_RemoveNodeByKey_3(),
                        new ICustomServiceNode_CreateManyHashBitMapClientFilterNode_4(),
                        new ICustomServiceNode_CreateManyHashBitMapFilterNode_5(),
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        new ICustomServiceNode_CreateCallbackNode_256(),
                        new ICustomServiceNode_CreateGameNode_257(),
                        new ICustomServiceNode_CreateStringArrayNode_258(),
                        new ICustomServiceNode_CreateStringDictionaryNode_259(),
                        new ICustomServiceNode_CreateStringFragmentDictionaryNode_260(),
                        new ICustomServiceNode_CreateStringHashSetNode_261(),
                        new ICustomServiceNode_CreateStringFragmentHashSetNode_262(),
                        new ICustomServiceNode_CreateStringLeftArrayNode_263(),
                        new ICustomServiceNode_CreateStringQueueNode_264(),
                        new ICustomServiceNode_CreateStringStackNode_265(),
                        new ICustomServiceNode_CreateLongSearchTreeSetNode_266(),
                        new ICustomServiceNode_CreateLongSortedSetNode_267(),
                        new ICustomServiceNode_CreateLongStringSortedDictionaryNode_268(),
                        new ICustomServiceNode_CreateLongStringSortedListNode_269(),
                        new ICustomServiceNode_CreateLongStringSearchTreeDictionaryNode_270(),
                        new ICustomServiceNode_CreateTestClassMessageNode_271(),
                        new ICustomServiceNode_CreatePerformanceDictionaryNode_272(),
                        new ICustomServiceNode_CreatePerformanceSearchTreeDictionaryNode_273(),
                        new ICustomServiceNode_CreatePerformanceMessageNode_274(),
                        new ICustomServiceNode_CreateTestClassOnlyPersistenceNode_275(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(CustomServiceNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试二叉搜索树集合节点接口 节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ILongSearchTreeSetNodeMethodEnum), typeof(LongSearchTreeSetNodeMethodParameterCreator))]
        public partial interface ILongSearchTreeSetNode { }
        /// <summary>
        /// 测试二叉搜索树集合节点接口 节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum ILongSearchTreeSetNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// long value 
            /// 返回值 bool 
            /// </summary>
            Add = 0,
            /// <summary>
            /// [1] 
            /// long[] values 
            /// 返回值 int 
            /// </summary>
            AddValues = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Clear = 2,
            /// <summary>
            /// [3] 
            /// long value 
            /// 返回值 bool 
            /// </summary>
            Contains = 3,
            /// <summary>
            /// [4] 
            /// 返回值 int 
            /// </summary>
            Count = 4,
            /// <summary>
            /// [5] 
            /// long value 
            /// 返回值 int 
            /// </summary>
            CountLess = 5,
            /// <summary>
            /// [6] 
            /// long value 
            /// 返回值 int 
            /// </summary>
            CountThan = 6,
            /// <summary>
            /// [7] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{long} 
            /// </summary>
            GetByIndex = 7,
            /// <summary>
            /// [8] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{long} 
            /// </summary>
            GetFrist = 8,
            /// <summary>
            /// [9] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{long} 
            /// </summary>
            GetLast = 9,
            /// <summary>
            /// [10] 
            /// long value 
            /// 返回值 int 
            /// </summary>
            IndexOf = 10,
            /// <summary>
            /// [11] 
            /// long value 
            /// 返回值 bool 
            /// </summary>
            Remove = 11,
            /// <summary>
            /// [12] 
            /// long[] values 
            /// 返回值 int 
            /// </summary>
            RemoveValues = 12,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_Add_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>
        {
            internal ILongSearchTreeSetNode_Add_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).Add(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_AddValues_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__>
        {
            internal ILongSearchTreeSetNode_AddValues_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)23) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).AddValues(parameter.values));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_Clear_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ILongSearchTreeSetNode_Clear_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSearchTreeSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSearchTreeSetNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_Contains_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>
        {
            internal ILongSearchTreeSetNode_Contains_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).Contains(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_Count_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongSearchTreeSetNode_Count_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSearchTreeSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSearchTreeSetNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_CountLess_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>
        {
            internal ILongSearchTreeSetNode_CountLess_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).CountLess(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_CountThan_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>
        {
            internal ILongSearchTreeSetNode_CountThan_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).CountThan(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_GetByIndex_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip7__>
        {
            internal ILongSearchTreeSetNode_GetByIndex_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip7__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip7__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip7__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).GetByIndex(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_GetFrist_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongSearchTreeSetNode_GetFrist_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSearchTreeSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSearchTreeSetNode>)node).GetFrist(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_GetLast_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongSearchTreeSetNode_GetLast_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSearchTreeSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSearchTreeSetNode>)node).GetLast(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_IndexOf_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>
        {
            internal ILongSearchTreeSetNode_IndexOf_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).IndexOf(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_Remove_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>
        {
            internal ILongSearchTreeSetNode_Remove_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).Remove(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSearchTreeSetNode_RemoveValues_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__>
        {
            internal ILongSearchTreeSetNode_RemoveValues_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSearchTreeSetNode>(methodParameter).RemoveValues(parameter.values));
            }
        }
        /// <summary>
        /// 测试二叉搜索树集合节点接口 节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class LongSearchTreeSetNodeMethodParameterCreator
        {
            private static void Add_SnapshotSerialize(AutoCSer.BinarySerializer serializer, long value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ILongSearchTreeSetNode_Add_0(),
                        new ILongSearchTreeSetNode_AddValues_1(),
                        new ILongSearchTreeSetNode_Clear_2(),
                        new ILongSearchTreeSetNode_Contains_3(),
                        new ILongSearchTreeSetNode_Count_4(),
                        new ILongSearchTreeSetNode_CountLess_5(),
                        new ILongSearchTreeSetNode_CountThan_6(),
                        new ILongSearchTreeSetNode_GetByIndex_7(),
                        new ILongSearchTreeSetNode_GetFrist_8(),
                        new ILongSearchTreeSetNode_GetLast_9(),
                        new ILongSearchTreeSetNode_IndexOf_10(),
                        new ILongSearchTreeSetNode_Remove_11(),
                        new ILongSearchTreeSetNode_RemoveValues_12(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(0, typeof(long), Add_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongSearchTreeSetNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试排序集合节点接口 节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ILongSortedSetNodeMethodEnum), typeof(LongSortedSetNodeMethodParameterCreator))]
        public partial interface ILongSortedSetNode { }
        /// <summary>
        /// 测试排序集合节点接口 节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum ILongSortedSetNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// long value 
            /// 返回值 bool 
            /// </summary>
            Add = 0,
            /// <summary>
            /// [1] 
            /// long[] values 
            /// 返回值 int 
            /// </summary>
            AddValues = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Clear = 2,
            /// <summary>
            /// [3] 
            /// long value 
            /// 返回值 bool 
            /// </summary>
            Contains = 3,
            /// <summary>
            /// [4] 
            /// 返回值 int 
            /// </summary>
            Count = 4,
            /// <summary>
            /// [5] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{long} 
            /// </summary>
            GetMax = 5,
            /// <summary>
            /// [6] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{long} 
            /// </summary>
            GetMin = 6,
            /// <summary>
            /// [7] 
            /// long value 
            /// 返回值 bool 
            /// </summary>
            Remove = 7,
            /// <summary>
            /// [8] 
            /// long[] values 
            /// 返回值 int 
            /// </summary>
            RemoveValues = 8,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_Add_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>
        {
            internal ILongSortedSetNode_Add_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSortedSetNode>(methodParameter).Add(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_AddValues_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__>
        {
            internal ILongSortedSetNode_AddValues_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)23) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSortedSetNode>(methodParameter).AddValues(parameter.values));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_Clear_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ILongSortedSetNode_Clear_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSortedSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSortedSetNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_Contains_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>
        {
            internal ILongSortedSetNode_Contains_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSortedSetNode>(methodParameter).Contains(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_Count_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongSortedSetNode_Count_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSortedSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSortedSetNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_GetMax_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongSortedSetNode_GetMax_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSortedSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSortedSetNode>)node).GetMax(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_GetMin_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongSortedSetNode_GetMin_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSortedSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongSortedSetNode>)node).GetMin(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_Remove_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>
        {
            internal ILongSortedSetNode_Remove_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSortedSetNode>(methodParameter).Remove(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongSortedSetNode_RemoveValues_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__>
        {
            internal ILongSortedSetNode_RemoveValues_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongSortedSetNode>(methodParameter).RemoveValues(parameter.values));
            }
        }
        /// <summary>
        /// 测试排序集合节点接口 节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class LongSortedSetNodeMethodParameterCreator
        {
            private static void Add_SnapshotSerialize(AutoCSer.BinarySerializer serializer, long value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ILongSortedSetNode_Add_0(),
                        new ILongSortedSetNode_AddValues_1(),
                        new ILongSortedSetNode_Clear_2(),
                        new ILongSortedSetNode_Contains_3(),
                        new ILongSortedSetNode_Count_4(),
                        new ILongSortedSetNode_GetMax_5(),
                        new ILongSortedSetNode_GetMin_6(),
                        new ILongSortedSetNode_Remove_7(),
                        new ILongSortedSetNode_RemoveValues_8(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(0, typeof(long), Add_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongSortedSetNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试二叉搜索树节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ILongStringSearchTreeDictionaryNodeMethodEnum), typeof(LongStringSearchTreeDictionaryNodeMethodParameterCreator))]
        public partial interface ILongStringSearchTreeDictionaryNode { }
        /// <summary>
        /// 测试二叉搜索树节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum ILongStringSearchTreeDictionaryNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// long key 
            /// 返回值 bool 
            /// </summary>
            ContainsKey = 1,
            /// <summary>
            /// [2] 
            /// 返回值 int 
            /// </summary>
            Count = 2,
            /// <summary>
            /// [3] 
            /// long key 
            /// 返回值 int 
            /// </summary>
            CountLess = 3,
            /// <summary>
            /// [4] 
            /// long key 
            /// 返回值 int 
            /// </summary>
            CountThan = 4,
            /// <summary>
            /// [5] 
            /// 返回值 int 
            /// </summary>
            GetHeight = 5,
            /// <summary>
            /// [6] 
            /// long key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetRemove = 6,
            /// <summary>
            /// [7] 
            /// long[] keys 
            /// 返回值 string[] 
            /// </summary>
            GetValueArray = 7,
            /// <summary>
            /// [8] 
            /// int skipCount 
            /// byte getCount 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetValues = 8,
            /// <summary>
            /// [9] 
            /// long key 
            /// 返回值 int 
            /// </summary>
            IndexOf = 9,
            /// <summary>
            /// [10] 
            /// long key 
            /// 返回值 bool 
            /// </summary>
            Remove = 10,
            /// <summary>
            /// [11] 
            /// long[] keys 
            /// 返回值 int 
            /// </summary>
            RemoveKeys = 11,
            /// <summary>
            /// [12] 
            /// long key 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Set = 12,
            /// <summary>
            /// [13] 
            /// AutoCSer.KeyValue{long,string} value 
            /// </summary>
            SnapshotAdd = 13,
            /// <summary>
            /// [14] 
            /// long key 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            TryAdd = 14,
            /// <summary>
            /// [15] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{long} 
            /// </summary>
            TryGetFirstKey = 15,
            /// <summary>
            /// [16] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.KeyValue{long,string}} 
            /// </summary>
            TryGetFirstKeyValue = 16,
            /// <summary>
            /// [17] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryGetFirstValue = 17,
            /// <summary>
            /// [18] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.KeyValue{long,string}} 
            /// </summary>
            TryGetKeyValueByIndex = 18,
            /// <summary>
            /// [19] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{long} 
            /// </summary>
            TryGetLastKey = 19,
            /// <summary>
            /// [20] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.KeyValue{long,string}} 
            /// </summary>
            TryGetLastKeyValue = 20,
            /// <summary>
            /// [21] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryGetLastValue = 21,
            /// <summary>
            /// [22] 
            /// long key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryGetValue = 22,
            /// <summary>
            /// [23] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryGetValueByIndex = 23,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ILongStringSearchTreeDictionaryNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_ContainsKey_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSearchTreeDictionaryNode_ContainsKey_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).ContainsKey(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_Count_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSearchTreeDictionaryNode_Count_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_CountLess_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSearchTreeDictionaryNode_CountLess_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).CountLess(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_CountThan_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSearchTreeDictionaryNode_CountThan_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).CountThan(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_GetHeight_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSearchTreeDictionaryNode_GetHeight_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).GetHeight(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_GetRemove_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSearchTreeDictionaryNode_GetRemove_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).GetRemove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_GetValueArray_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__>
        {
            internal ILongStringSearchTreeDictionaryNode_GetValueArray_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).GetValueArray(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_GetValues_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip8__>
        {
            internal ILongStringSearchTreeDictionaryNode_GetValues_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum)10, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip8__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip8__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip8__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.EnumerableCallback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).GetValues(parameter.skipCount, parameter.getCount));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_IndexOf_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSearchTreeDictionaryNode_IndexOf_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).IndexOf(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_Remove_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSearchTreeDictionaryNode_Remove_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).Remove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_RemoveKeys_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__>
        {
            internal ILongStringSearchTreeDictionaryNode_RemoveKeys_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).RemoveKeys(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_Set_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__>
        {
            internal ILongStringSearchTreeDictionaryNode_Set_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).Set(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_SnapshotAdd_13 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__>
        {
            internal ILongStringSearchTreeDictionaryNode_SnapshotAdd_13() : base(13, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryAdd_14 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__>
        {
            internal ILongStringSearchTreeDictionaryNode_TryAdd_14() : base(14, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).TryAdd(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetFirstKey_15 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetFirstKey_15() : base(15, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).TryGetFirstKey(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetFirstKeyValue_16 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetFirstKeyValue_16() : base(16, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).TryGetFirstKeyValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetFirstValue_17 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetFirstValue_17() : base(17, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).TryGetFirstValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetKeyValueByIndex_18 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip18__>
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetKeyValueByIndex_18() : base(18, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip18__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip18__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip18__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).TryGetKeyValueByIndex(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetLastKey_19 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetLastKey_19() : base(19, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).TryGetLastKey(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetLastKeyValue_20 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetLastKeyValue_20() : base(20, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).TryGetLastKeyValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetLastValue_21 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetLastValue_21() : base(21, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSearchTreeDictionaryNode>)node).TryGetLastValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetValue_22 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetValue_22() : base(22, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).TryGetValue(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSearchTreeDictionaryNode_TryGetValueByIndex_23 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip18__>
        {
            internal ILongStringSearchTreeDictionaryNode_TryGetValueByIndex_23() : base(23, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip18__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip18__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip18__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSearchTreeDictionaryNode>(methodParameter).TryGetValueByIndex(parameter.index));
            }
        }
        /// <summary>
        /// 测试二叉搜索树节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class LongStringSearchTreeDictionaryNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.KeyValue<long,string> value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ILongStringSearchTreeDictionaryNode_Clear_0(),
                        new ILongStringSearchTreeDictionaryNode_ContainsKey_1(),
                        new ILongStringSearchTreeDictionaryNode_Count_2(),
                        new ILongStringSearchTreeDictionaryNode_CountLess_3(),
                        new ILongStringSearchTreeDictionaryNode_CountThan_4(),
                        new ILongStringSearchTreeDictionaryNode_GetHeight_5(),
                        new ILongStringSearchTreeDictionaryNode_GetRemove_6(),
                        new ILongStringSearchTreeDictionaryNode_GetValueArray_7(),
                        new ILongStringSearchTreeDictionaryNode_GetValues_8(),
                        new ILongStringSearchTreeDictionaryNode_IndexOf_9(),
                        new ILongStringSearchTreeDictionaryNode_Remove_10(),
                        new ILongStringSearchTreeDictionaryNode_RemoveKeys_11(),
                        new ILongStringSearchTreeDictionaryNode_Set_12(),
                        new ILongStringSearchTreeDictionaryNode_SnapshotAdd_13(),
                        new ILongStringSearchTreeDictionaryNode_TryAdd_14(),
                        new ILongStringSearchTreeDictionaryNode_TryGetFirstKey_15(),
                        new ILongStringSearchTreeDictionaryNode_TryGetFirstKeyValue_16(),
                        new ILongStringSearchTreeDictionaryNode_TryGetFirstValue_17(),
                        new ILongStringSearchTreeDictionaryNode_TryGetKeyValueByIndex_18(),
                        new ILongStringSearchTreeDictionaryNode_TryGetLastKey_19(),
                        new ILongStringSearchTreeDictionaryNode_TryGetLastKeyValue_20(),
                        new ILongStringSearchTreeDictionaryNode_TryGetLastValue_21(),
                        new ILongStringSearchTreeDictionaryNode_TryGetValue_22(),
                        new ILongStringSearchTreeDictionaryNode_TryGetValueByIndex_23(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(13, typeof(AutoCSer.KeyValue<long,string>), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongStringSearchTreeDictionaryNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试排序字典节点
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ILongStringSortedDictionaryNodeMethodEnum), typeof(LongStringSortedDictionaryNodeMethodParameterCreator))]
        public partial interface ILongStringSortedDictionaryNode { }
        /// <summary>
        /// 测试排序字典节点 节点方法序号映射枚举类型
        /// </summary>
        public enum ILongStringSortedDictionaryNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// long key 
            /// 返回值 bool 
            /// </summary>
            ContainsKey = 1,
            /// <summary>
            /// [2] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            ContainsValue = 2,
            /// <summary>
            /// [3] 
            /// 返回值 int 
            /// </summary>
            Count = 3,
            /// <summary>
            /// [4] 
            /// long key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetRemove = 4,
            /// <summary>
            /// [5] 
            /// long[] keys 
            /// 返回值 string[] 
            /// </summary>
            GetValueArray = 5,
            /// <summary>
            /// [6] 
            /// long key 
            /// 返回值 bool 
            /// </summary>
            Remove = 6,
            /// <summary>
            /// [7] 
            /// long[] keys 
            /// 返回值 int 
            /// </summary>
            RemoveKeys = 7,
            /// <summary>
            /// [8] 
            /// AutoCSer.KeyValue{long,string} value 
            /// </summary>
            SnapshotAdd = 8,
            /// <summary>
            /// [9] 
            /// long key 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            TryAdd = 9,
            /// <summary>
            /// [10] 
            /// long key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryGetValue = 10,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ILongStringSortedDictionaryNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedDictionaryNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_ContainsKey_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedDictionaryNode_ContainsKey_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).ContainsKey(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_ContainsValue_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip2__>
        {
            internal ILongStringSortedDictionaryNode_ContainsValue_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).ContainsValue(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_Count_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSortedDictionaryNode_Count_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedDictionaryNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_GetRemove_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedDictionaryNode_GetRemove_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).GetRemove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_GetValueArray_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__>
        {
            internal ILongStringSortedDictionaryNode_GetValueArray_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).GetValueArray(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_Remove_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedDictionaryNode_Remove_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).Remove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_RemoveKeys_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__>
        {
            internal ILongStringSortedDictionaryNode_RemoveKeys_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).RemoveKeys(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_SnapshotAdd_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__>
        {
            internal ILongStringSortedDictionaryNode_SnapshotAdd_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_TryAdd_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__>
        {
            internal ILongStringSortedDictionaryNode_TryAdd_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).TryAdd(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedDictionaryNode_TryGetValue_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedDictionaryNode_TryGetValue_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedDictionaryNode>(methodParameter).TryGetValue(parameter.key));
            }
        }
        /// <summary>
        /// 测试排序字典节点 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class LongStringSortedDictionaryNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.KeyValue<long,string> value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ILongStringSortedDictionaryNode_Clear_0(),
                        new ILongStringSortedDictionaryNode_ContainsKey_1(),
                        new ILongStringSortedDictionaryNode_ContainsValue_2(),
                        new ILongStringSortedDictionaryNode_Count_3(),
                        new ILongStringSortedDictionaryNode_GetRemove_4(),
                        new ILongStringSortedDictionaryNode_GetValueArray_5(),
                        new ILongStringSortedDictionaryNode_Remove_6(),
                        new ILongStringSortedDictionaryNode_RemoveKeys_7(),
                        new ILongStringSortedDictionaryNode_SnapshotAdd_8(),
                        new ILongStringSortedDictionaryNode_TryAdd_9(),
                        new ILongStringSortedDictionaryNode_TryGetValue_10(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(8, typeof(AutoCSer.KeyValue<long,string>), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongStringSortedDictionaryNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试排序列表节点
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ILongStringSortedListNodeMethodEnum), typeof(LongStringSortedListNodeMethodParameterCreator))]
        public partial interface ILongStringSortedListNode { }
        /// <summary>
        /// 测试排序列表节点 节点方法序号映射枚举类型
        /// </summary>
        public enum ILongStringSortedListNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// long key 
            /// 返回值 bool 
            /// </summary>
            ContainsKey = 1,
            /// <summary>
            /// [2] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            ContainsValue = 2,
            /// <summary>
            /// [3] 
            /// 返回值 int 
            /// </summary>
            Count = 3,
            /// <summary>
            /// [4] 
            /// 返回值 int 
            /// </summary>
            GetCapacity = 4,
            /// <summary>
            /// [5] 
            /// long key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetRemove = 5,
            /// <summary>
            /// [6] 
            /// long key 
            /// 返回值 int 
            /// </summary>
            IndexOfKey = 6,
            /// <summary>
            /// [7] 
            /// string value 
            /// 返回值 int 
            /// </summary>
            IndexOfValue = 7,
            /// <summary>
            /// [8] 
            /// long key 
            /// 返回值 bool 
            /// </summary>
            Remove = 8,
            /// <summary>
            /// [9] 
            /// int index 
            /// 返回值 bool 
            /// </summary>
            RemoveAt = 9,
            /// <summary>
            /// [10] 
            /// AutoCSer.KeyValue{long,string} value 
            /// </summary>
            SnapshotAdd = 10,
            /// <summary>
            /// [11] 
            /// long key 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            TryAdd = 11,
            /// <summary>
            /// [12] 
            /// long key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryGetValue = 12,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ILongStringSortedListNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedListNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedListNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_ContainsKey_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedListNode_ContainsKey_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).ContainsKey(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_ContainsValue_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip2__>
        {
            internal ILongStringSortedListNode_ContainsValue_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).ContainsValue(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_Count_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSortedListNode_Count_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedListNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedListNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_GetCapacity_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ILongStringSortedListNode_GetCapacity_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedListNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ILongStringSortedListNode>)node).GetCapacity(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_GetRemove_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedListNode_GetRemove_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).GetRemove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_IndexOfKey_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedListNode_IndexOfKey_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).IndexOfKey(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_IndexOfValue_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip2__>
        {
            internal ILongStringSortedListNode_IndexOfValue_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).IndexOfValue(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_Remove_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedListNode_Remove_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).Remove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_RemoveAt_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__>
        {
            internal ILongStringSortedListNode_RemoveAt_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).RemoveAt(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_SnapshotAdd_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__>
        {
            internal ILongStringSortedListNode_SnapshotAdd_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_TryAdd_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__>
        {
            internal ILongStringSortedListNode_TryAdd_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).TryAdd(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ILongStringSortedListNode_TryGetValue_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>
        {
            internal ILongStringSortedListNode_TryGetValue_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ILongStringSortedListNode>(methodParameter).TryGetValue(parameter.key));
            }
        }
        /// <summary>
        /// 测试排序列表节点 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class LongStringSortedListNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.KeyValue<long,string> value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ILongStringSortedListNode_Clear_0(),
                        new ILongStringSortedListNode_ContainsKey_1(),
                        new ILongStringSortedListNode_ContainsValue_2(),
                        new ILongStringSortedListNode_Count_3(),
                        new ILongStringSortedListNode_GetCapacity_4(),
                        new ILongStringSortedListNode_GetRemove_5(),
                        new ILongStringSortedListNode_IndexOfKey_6(),
                        new ILongStringSortedListNode_IndexOfValue_7(),
                        new ILongStringSortedListNode_Remove_8(),
                        new ILongStringSortedListNode_RemoveAt_9(),
                        new ILongStringSortedListNode_SnapshotAdd_10(),
                        new ILongStringSortedListNode_TryAdd_11(),
                        new ILongStringSortedListNode_TryGetValue_12(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(10, typeof(AutoCSer.KeyValue<long,string>), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(LongStringSortedListNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 性能测试字典节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IPerformanceDictionaryNodeMethodEnum), typeof(PerformanceDictionaryNodeMethodParameterCreator))]
        public partial interface IPerformanceDictionaryNode { }
        /// <summary>
        /// 性能测试字典节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IPerformanceDictionaryNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// int key 
            /// 返回值 bool 
            /// </summary>
            ContainsKey = 1,
            /// <summary>
            /// [2] 
            /// 返回值 int 
            /// </summary>
            Count = 2,
            /// <summary>
            /// [3] 
            /// int key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            GetRemove = 3,
            /// <summary>
            /// [4] 
            /// int[] keys 
            /// 返回值 int[] 
            /// </summary>
            GetValueArray = 4,
            /// <summary>
            /// [5] 
            /// int key 
            /// 返回值 bool 
            /// </summary>
            Remove = 5,
            /// <summary>
            /// [6] 
            /// int[] keys 
            /// 返回值 int 
            /// </summary>
            RemoveKeys = 6,
            /// <summary>
            /// [7] 
            /// int capacity 
            /// </summary>
            Renew = 7,
            /// <summary>
            /// [8] 
            /// </summary>
            ReusableClear = 8,
            /// <summary>
            /// [9] 
            /// int key 
            /// int value 
            /// 返回值 bool 
            /// </summary>
            Set = 9,
            /// <summary>
            /// [10] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value 
            /// </summary>
            SnapshotAdd = 10,
            /// <summary>
            /// [11] 
            /// int key 
            /// int value 
            /// 返回值 bool 
            /// </summary>
            TryAdd = 11,
            /// <summary>
            /// [12] 
            /// int key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            TryGetValue = 12,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IPerformanceDictionaryNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceDictionaryNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_ContainsKey_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceDictionaryNode_ContainsKey_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).ContainsKey(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_Count_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceDictionaryNode_Count_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceDictionaryNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_GetRemove_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceDictionaryNode_GetRemove_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).GetRemove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_GetValueArray_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__>
        {
            internal IPerformanceDictionaryNode_GetValueArray_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).GetValueArray(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_Remove_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceDictionaryNode_Remove_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).Remove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_RemoveKeys_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__>
        {
            internal IPerformanceDictionaryNode_RemoveKeys_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).RemoveKeys(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_Renew_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__>
        {
            internal IPerformanceDictionaryNode_Renew_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).Renew(parameter.capacity);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_ReusableClear_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IPerformanceDictionaryNode_ReusableClear_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceDictionaryNode>)node).ReusableClear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_Set_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__>
        {
            internal IPerformanceDictionaryNode_Set_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).Set(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_SnapshotAdd_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__>
        {
            internal IPerformanceDictionaryNode_SnapshotAdd_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_TryAdd_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__>
        {
            internal IPerformanceDictionaryNode_TryAdd_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).TryAdd(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceDictionaryNode_TryGetValue_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceDictionaryNode_TryGetValue_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceDictionaryNode>(methodParameter).TryGetValue(parameter.key));
            }
        }
        /// <summary>
        /// 性能测试字典节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class PerformanceDictionaryNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IPerformanceDictionaryNode_Clear_0(),
                        new IPerformanceDictionaryNode_ContainsKey_1(),
                        new IPerformanceDictionaryNode_Count_2(),
                        new IPerformanceDictionaryNode_GetRemove_3(),
                        new IPerformanceDictionaryNode_GetValueArray_4(),
                        new IPerformanceDictionaryNode_Remove_5(),
                        new IPerformanceDictionaryNode_RemoveKeys_6(),
                        new IPerformanceDictionaryNode_Renew_7(),
                        new IPerformanceDictionaryNode_ReusableClear_8(),
                        new IPerformanceDictionaryNode_Set_9(),
                        new IPerformanceDictionaryNode_SnapshotAdd_10(),
                        new IPerformanceDictionaryNode_TryAdd_11(),
                        new IPerformanceDictionaryNode_TryGetValue_12(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(10, typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(PerformanceDictionaryNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 性能测试消息处理节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IPerformanceMessageNodeMethodEnum), typeof(PerformanceMessageNodeMethodParameterCreator))]
        public partial interface IPerformanceMessageNode { }
        /// <summary>
        /// 性能测试消息处理节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IPerformanceMessageNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage message 
            /// </summary>
            AppendMessage = 0,
            /// <summary>
            /// [1] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage message 
            /// </summary>
            AppendMessageLoadPersistence = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Clear = 2,
            /// <summary>
            /// [3] 
            /// </summary>
            ClearFailed = 3,
            /// <summary>
            /// [4] 
            /// </summary>
            ClearFailedLoadPersistence = 4,
            /// <summary>
            /// [5] 
            /// </summary>
            ClearLoadPersistence = 5,
            /// <summary>
            /// [6] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            /// </summary>
            Completed = 6,
            /// <summary>
            /// [7] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            /// </summary>
            CompletedLoadPersistence = 7,
            /// <summary>
            /// [8] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            /// </summary>
            Failed = 8,
            /// <summary>
            /// [9] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            /// </summary>
            FailedLoadPersistence = 9,
            /// <summary>
            /// [10] 
            /// 返回值 int 
            /// </summary>
            GetCallbackCount = 10,
            /// <summary>
            /// [11] 
            /// 返回值 int 
            /// </summary>
            GetCount = 11,
            /// <summary>
            /// [12] 
            /// 返回值 int 
            /// </summary>
            GetFailedCount = 12,
            /// <summary>
            /// [13] 
            /// int maxCount 
            /// </summary>
            GetMessage = 13,
            /// <summary>
            /// [14] 
            /// 返回值 int 
            /// </summary>
            GetTimeoutCount = 14,
            /// <summary>
            /// [15] 
            /// 返回值 int 
            /// </summary>
            GetTotalCount = 15,
            /// <summary>
            /// [16] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage value 
            /// </summary>
            SnapshotAdd = 16,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_AppendMessage_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__>
        {
            internal IPerformanceMessageNode_AppendMessage_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceMessageNode>(methodParameter).AppendMessage(parameter.message);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_AppendMessageLoadPersistence_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__>
        {
            internal IPerformanceMessageNode_AppendMessageLoadPersistence_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)0) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceMessageNode>(methodParameter).AppendMessageLoadPersistence(parameter.message);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_Clear_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IPerformanceMessageNode_Clear_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_ClearFailed_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IPerformanceMessageNode_ClearFailed_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).ClearFailed();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_ClearFailedLoadPersistence_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IPerformanceMessageNode_ClearFailedLoadPersistence_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)0) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).ClearFailedLoadPersistence();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_ClearLoadPersistence_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IPerformanceMessageNode_ClearLoadPersistence_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)0) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).ClearLoadPersistence();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_Completed_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>
        {
            internal IPerformanceMessageNode_Completed_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)19) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceMessageNode>(methodParameter).Completed(parameter.identity);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_CompletedLoadPersistence_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>
        {
            internal IPerformanceMessageNode_CompletedLoadPersistence_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)16) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceMessageNode>(methodParameter).CompletedLoadPersistence(parameter.identity);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_Failed_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>
        {
            internal IPerformanceMessageNode_Failed_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)19) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceMessageNode>(methodParameter).Failed(parameter.identity);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_FailedLoadPersistence_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>
        {
            internal IPerformanceMessageNode_FailedLoadPersistence_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)16) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceMessageNode>(methodParameter).FailedLoadPersistence(parameter.identity);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_GetCallbackCount_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceMessageNode_GetCallbackCount_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).GetCallbackCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_GetCount_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceMessageNode_GetCount_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).GetCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_GetFailedCount_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceMessageNode_GetFailedCount_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).GetFailedCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_GetMessage_13 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip13__>
        {
            internal IPerformanceMessageNode_GetMessage_13() : base(13, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)138) { }
            public override void InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip13__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip13__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip13__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceMessageNode>(methodParameter).GetMessage(parameter.maxCount, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage>.Create(methodParameter));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_GetTimeoutCount_14 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceMessageNode_GetTimeoutCount_14() : base(14, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).GetTimeoutCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_GetTotalCount_15 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceMessageNode_GetTotalCount_15() : base(15, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceMessageNode>)node).GetTotalCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceMessageNode_SnapshotAdd_16 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__>
        {
            internal IPerformanceMessageNode_SnapshotAdd_16() : base(16, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceMessageNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        /// 性能测试消息处理节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class PerformanceMessageNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IPerformanceMessageNode_AppendMessage_0(),
                        new IPerformanceMessageNode_AppendMessageLoadPersistence_1(),
                        new IPerformanceMessageNode_Clear_2(),
                        new IPerformanceMessageNode_ClearFailed_3(),
                        new IPerformanceMessageNode_ClearFailedLoadPersistence_4(),
                        new IPerformanceMessageNode_ClearLoadPersistence_5(),
                        new IPerformanceMessageNode_Completed_6(),
                        new IPerformanceMessageNode_CompletedLoadPersistence_7(),
                        new IPerformanceMessageNode_Failed_8(),
                        new IPerformanceMessageNode_FailedLoadPersistence_9(),
                        new IPerformanceMessageNode_GetCallbackCount_10(),
                        new IPerformanceMessageNode_GetCount_11(),
                        new IPerformanceMessageNode_GetFailedCount_12(),
                        new IPerformanceMessageNode_GetMessage_13(),
                        new IPerformanceMessageNode_GetTimeoutCount_14(),
                        new IPerformanceMessageNode_GetTotalCount_15(),
                        new IPerformanceMessageNode_SnapshotAdd_16(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(1),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(5),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(4),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(7),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(9),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(16, typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(PerformanceMessageNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 性能测试二叉搜索树节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IPerformanceSearchTreeDictionaryNodeMethodEnum), typeof(PerformanceSearchTreeDictionaryNodeMethodParameterCreator))]
        public partial interface IPerformanceSearchTreeDictionaryNode { }
        /// <summary>
        /// 性能测试二叉搜索树节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IPerformanceSearchTreeDictionaryNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// int key 
            /// 返回值 bool 
            /// </summary>
            ContainsKey = 1,
            /// <summary>
            /// [2] 
            /// 返回值 int 
            /// </summary>
            Count = 2,
            /// <summary>
            /// [3] 
            /// int key 
            /// 返回值 int 
            /// </summary>
            CountLess = 3,
            /// <summary>
            /// [4] 
            /// int key 
            /// 返回值 int 
            /// </summary>
            CountThan = 4,
            /// <summary>
            /// [5] 
            /// 返回值 int 
            /// </summary>
            GetHeight = 5,
            /// <summary>
            /// [6] 
            /// int key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            GetRemove = 6,
            /// <summary>
            /// [7] 
            /// int[] keys 
            /// 返回值 int[] 
            /// </summary>
            GetValueArray = 7,
            /// <summary>
            /// [8] 
            /// int skipCount 
            /// byte getCount 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            GetValues = 8,
            /// <summary>
            /// [9] 
            /// int key 
            /// 返回值 int 
            /// </summary>
            IndexOf = 9,
            /// <summary>
            /// [10] 
            /// int key 
            /// 返回值 bool 
            /// </summary>
            Remove = 10,
            /// <summary>
            /// [11] 
            /// int[] keys 
            /// 返回值 int 
            /// </summary>
            RemoveKeys = 11,
            /// <summary>
            /// [12] 
            /// int key 
            /// int value 
            /// 返回值 bool 
            /// </summary>
            Set = 12,
            /// <summary>
            /// [13] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value 
            /// </summary>
            SnapshotAdd = 13,
            /// <summary>
            /// [14] 
            /// int key 
            /// int value 
            /// 返回值 bool 
            /// </summary>
            TryAdd = 14,
            /// <summary>
            /// [15] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            TryGetFirstKey = 15,
            /// <summary>
            /// [16] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue} 
            /// </summary>
            TryGetFirstKeyValue = 16,
            /// <summary>
            /// [17] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            TryGetFirstValue = 17,
            /// <summary>
            /// [18] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue} 
            /// </summary>
            TryGetKeyValueByIndex = 18,
            /// <summary>
            /// [19] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            TryGetLastKey = 19,
            /// <summary>
            /// [20] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue} 
            /// </summary>
            TryGetLastKeyValue = 20,
            /// <summary>
            /// [21] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            TryGetLastValue = 21,
            /// <summary>
            /// [22] 
            /// int key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            TryGetValue = 22,
            /// <summary>
            /// [23] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{int} 
            /// </summary>
            TryGetValueByIndex = 23,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_ContainsKey_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceSearchTreeDictionaryNode_ContainsKey_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).ContainsKey(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_Count_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_Count_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_CountLess_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceSearchTreeDictionaryNode_CountLess_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).CountLess(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_CountThan_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceSearchTreeDictionaryNode_CountThan_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).CountThan(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_GetHeight_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_GetHeight_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).GetHeight(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_GetRemove_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceSearchTreeDictionaryNode_GetRemove_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).GetRemove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_GetValueArray_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__>
        {
            internal IPerformanceSearchTreeDictionaryNode_GetValueArray_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).GetValueArray(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_GetValues_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip8__>
        {
            internal IPerformanceSearchTreeDictionaryNode_GetValues_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallTypeEnum)10, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip8__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip8__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip8__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter.EnumerableCallback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).GetValues(parameter.skipCount, parameter.getCount));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_IndexOf_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceSearchTreeDictionaryNode_IndexOf_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).IndexOf(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_Remove_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceSearchTreeDictionaryNode_Remove_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).Remove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_RemoveKeys_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__>
        {
            internal IPerformanceSearchTreeDictionaryNode_RemoveKeys_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).RemoveKeys(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_Set_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__>
        {
            internal IPerformanceSearchTreeDictionaryNode_Set_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).Set(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_SnapshotAdd_13 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__>
        {
            internal IPerformanceSearchTreeDictionaryNode_SnapshotAdd_13() : base(13, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryAdd_14 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__>
        {
            internal IPerformanceSearchTreeDictionaryNode_TryAdd_14() : base(14, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).TryAdd(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetFirstKey_15 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetFirstKey_15() : base(15, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).TryGetFirstKey(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetFirstKeyValue_16 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetFirstKeyValue_16() : base(16, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).TryGetFirstKeyValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetFirstValue_17 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetFirstValue_17() : base(17, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).TryGetFirstValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetKeyValueByIndex_18 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip18__>
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetKeyValueByIndex_18() : base(18, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip18__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip18__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip18__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).TryGetKeyValueByIndex(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetLastKey_19 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetLastKey_19() : base(19, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).TryGetLastKey(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetLastKeyValue_20 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetLastKeyValue_20() : base(20, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).TryGetLastKeyValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetLastValue_21 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetLastValue_21() : base(21, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IPerformanceSearchTreeDictionaryNode>)node).TryGetLastValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetValue_22 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetValue_22() : base(22, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).TryGetValue(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IPerformanceSearchTreeDictionaryNode_TryGetValueByIndex_23 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip18__>
        {
            internal IPerformanceSearchTreeDictionaryNode_TryGetValueByIndex_23() : base(23, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip18__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip18__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip18__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IPerformanceSearchTreeDictionaryNode>(methodParameter).TryGetValueByIndex(parameter.index));
            }
        }
        /// <summary>
        /// 性能测试二叉搜索树节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class PerformanceSearchTreeDictionaryNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IPerformanceSearchTreeDictionaryNode_Clear_0(),
                        new IPerformanceSearchTreeDictionaryNode_ContainsKey_1(),
                        new IPerformanceSearchTreeDictionaryNode_Count_2(),
                        new IPerformanceSearchTreeDictionaryNode_CountLess_3(),
                        new IPerformanceSearchTreeDictionaryNode_CountThan_4(),
                        new IPerformanceSearchTreeDictionaryNode_GetHeight_5(),
                        new IPerformanceSearchTreeDictionaryNode_GetRemove_6(),
                        new IPerformanceSearchTreeDictionaryNode_GetValueArray_7(),
                        new IPerformanceSearchTreeDictionaryNode_GetValues_8(),
                        new IPerformanceSearchTreeDictionaryNode_IndexOf_9(),
                        new IPerformanceSearchTreeDictionaryNode_Remove_10(),
                        new IPerformanceSearchTreeDictionaryNode_RemoveKeys_11(),
                        new IPerformanceSearchTreeDictionaryNode_Set_12(),
                        new IPerformanceSearchTreeDictionaryNode_SnapshotAdd_13(),
                        new IPerformanceSearchTreeDictionaryNode_TryAdd_14(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetFirstKey_15(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetFirstKeyValue_16(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetFirstValue_17(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetKeyValueByIndex_18(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetLastKey_19(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetLastKeyValue_20(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetLastValue_21(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetValue_22(),
                        new IPerformanceSearchTreeDictionaryNode_TryGetValueByIndex_23(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(13, typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(PerformanceSearchTreeDictionaryNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试数组节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IStringArrayNodeMethodEnum), typeof(StringArrayNodeMethodParameterCreator))]
        public partial interface IStringArrayNode { }
        /// <summary>
        /// 测试数组节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IStringArrayNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// int startIndex 
            /// int count 
            /// 返回值 bool 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// </summary>
            ClearArray = 1,
            /// <summary>
            /// [2] 
            /// string value 
            /// int startIndex 
            /// int count 
            /// 返回值 bool 
            /// </summary>
            Fill = 2,
            /// <summary>
            /// [3] 
            /// string value 
            /// </summary>
            FillArray = 3,
            /// <summary>
            /// [4] 
            /// 返回值 int 
            /// </summary>
            GetLength = 4,
            /// <summary>
            /// [5] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetValue = 5,
            /// <summary>
            /// [6] 
            /// int index 
            /// string value 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetValueSet = 6,
            /// <summary>
            /// [7] 
            /// string value 
            /// int startIndex 
            /// int count 
            /// 返回值 int 
            /// </summary>
            IndexOf = 7,
            /// <summary>
            /// [8] 
            /// string value 
            /// 返回值 int 
            /// </summary>
            IndexOfArray = 8,
            /// <summary>
            /// [9] 
            /// string value 
            /// int startIndex 
            /// int count 
            /// 返回值 int 
            /// </summary>
            LastIndexOf = 9,
            /// <summary>
            /// [10] 
            /// string value 
            /// 返回值 int 
            /// </summary>
            LastIndexOfArray = 10,
            /// <summary>
            /// [11] 
            /// int startIndex 
            /// int count 
            /// 返回值 bool 
            /// </summary>
            Reverse = 11,
            /// <summary>
            /// [12] 
            /// </summary>
            ReverseArray = 12,
            /// <summary>
            /// [13] 
            /// int index 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            SetValue = 13,
            /// <summary>
            /// [14] 
            /// AutoCSer.KeyValue{int,string} value 
            /// </summary>
            SnapshotSet = 14,
            /// <summary>
            /// [15] 
            /// int startIndex 
            /// int count 
            /// 返回值 bool 
            /// </summary>
            Sort = 15,
            /// <summary>
            /// [16] 
            /// </summary>
            SortArray = 16,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>
        {
            internal IStringArrayNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).Clear(parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_ClearArray_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringArrayNode_ClearArray_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringArrayNode>)node).ClearArray();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_Fill_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>
        {
            internal IStringArrayNode_Fill_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).Fill(parameter.value, parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_FillArray_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>
        {
            internal IStringArrayNode_FillArray_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)11) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).FillArray(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_GetLength_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringArrayNode_GetLength_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringArrayNode>)node).GetLength(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_GetValue_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip5__>
        {
            internal IStringArrayNode_GetValue_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip5__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip5__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip5__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).GetValue(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_GetValueSet_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__>
        {
            internal IStringArrayNode_GetValueSet_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).GetValueSet(parameter.index, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_IndexOf_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>
        {
            internal IStringArrayNode_IndexOf_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).IndexOf(parameter.value, parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_IndexOfArray_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>
        {
            internal IStringArrayNode_IndexOfArray_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).IndexOfArray(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_LastIndexOf_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>
        {
            internal IStringArrayNode_LastIndexOf_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).LastIndexOf(parameter.value, parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_LastIndexOfArray_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>
        {
            internal IStringArrayNode_LastIndexOfArray_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).LastIndexOfArray(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_Reverse_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>
        {
            internal IStringArrayNode_Reverse_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).Reverse(parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_ReverseArray_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringArrayNode_ReverseArray_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringArrayNode>)node).ReverseArray();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_SetValue_13 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__>
        {
            internal IStringArrayNode_SetValue_13() : base(13, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).SetValue(parameter.index, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_SnapshotSet_14 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__>
        {
            internal IStringArrayNode_SnapshotSet_14() : base(14, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).SnapshotSet(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_Sort_15 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>
        {
            internal IStringArrayNode_Sort_15() : base(15, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)15) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringArrayNode>(methodParameter).Sort(parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringArrayNode_SortArray_16 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringArrayNode_SortArray_16() : base(16, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringArrayNode>)node).SortArray();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        /// 测试数组节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class StringArrayNodeMethodParameterCreator
        {
            private static void SnapshotSet_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.KeyValue<int,string> value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IStringArrayNode_Clear_0(),
                        new IStringArrayNode_ClearArray_1(),
                        new IStringArrayNode_Fill_2(),
                        new IStringArrayNode_FillArray_3(),
                        new IStringArrayNode_GetLength_4(),
                        new IStringArrayNode_GetValue_5(),
                        new IStringArrayNode_GetValueSet_6(),
                        new IStringArrayNode_IndexOf_7(),
                        new IStringArrayNode_IndexOfArray_8(),
                        new IStringArrayNode_LastIndexOf_9(),
                        new IStringArrayNode_LastIndexOfArray_10(),
                        new IStringArrayNode_Reverse_11(),
                        new IStringArrayNode_ReverseArray_12(),
                        new IStringArrayNode_SetValue_13(),
                        new IStringArrayNode_SnapshotSet_14(),
                        new IStringArrayNode_Sort_15(),
                        new IStringArrayNode_SortArray_16(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(14, typeof(AutoCSer.KeyValue<int,string>), SnapshotSet_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringArrayNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试字典节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IStringDictionaryNodeMethodEnum), typeof(StringDictionaryNodeMethodParameterCreator))]
        public partial interface IStringDictionaryNode { }
        /// <summary>
        /// 测试字典节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IStringDictionaryNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// string key 
            /// 返回值 bool 
            /// </summary>
            ContainsKey = 1,
            /// <summary>
            /// [2] 
            /// 返回值 int 
            /// </summary>
            Count = 2,
            /// <summary>
            /// [3] 
            /// string key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetRemove = 3,
            /// <summary>
            /// [4] 
            /// string[] keys 
            /// 返回值 string[] 
            /// </summary>
            GetValueArray = 4,
            /// <summary>
            /// [5] 
            /// string key 
            /// 返回值 bool 
            /// </summary>
            Remove = 5,
            /// <summary>
            /// [6] 
            /// string[] keys 
            /// 返回值 int 
            /// </summary>
            RemoveKeys = 6,
            /// <summary>
            /// [7] 
            /// int capacity 
            /// </summary>
            Renew = 7,
            /// <summary>
            /// [8] 
            /// </summary>
            ReusableClear = 8,
            /// <summary>
            /// [9] 
            /// string key 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Set = 9,
            /// <summary>
            /// [10] 
            /// AutoCSer.KeyValue{string,string} value 
            /// </summary>
            SnapshotAdd = 10,
            /// <summary>
            /// [11] 
            /// string key 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            TryAdd = 11,
            /// <summary>
            /// [12] 
            /// string key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryGetValue = 12,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringDictionaryNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringDictionaryNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_ContainsKey_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>
        {
            internal IStringDictionaryNode_ContainsKey_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).ContainsKey(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_Count_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringDictionaryNode_Count_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringDictionaryNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_GetRemove_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>
        {
            internal IStringDictionaryNode_GetRemove_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).GetRemove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_GetValueArray_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__>
        {
            internal IStringDictionaryNode_GetValueArray_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).GetValueArray(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_Remove_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>
        {
            internal IStringDictionaryNode_Remove_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).Remove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_RemoveKeys_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__>
        {
            internal IStringDictionaryNode_RemoveKeys_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).RemoveKeys(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_Renew_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__>
        {
            internal IStringDictionaryNode_Renew_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).Renew(parameter.capacity);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_ReusableClear_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringDictionaryNode_ReusableClear_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringDictionaryNode>)node).ReusableClear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_Set_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__>
        {
            internal IStringDictionaryNode_Set_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).Set(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_SnapshotAdd_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__>
        {
            internal IStringDictionaryNode_SnapshotAdd_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_TryAdd_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__>
        {
            internal IStringDictionaryNode_TryAdd_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).TryAdd(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringDictionaryNode_TryGetValue_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>
        {
            internal IStringDictionaryNode_TryGetValue_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringDictionaryNode>(methodParameter).TryGetValue(parameter.key));
            }
        }
        /// <summary>
        /// 测试字典节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class StringDictionaryNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.KeyValue<string,string> value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IStringDictionaryNode_Clear_0(),
                        new IStringDictionaryNode_ContainsKey_1(),
                        new IStringDictionaryNode_Count_2(),
                        new IStringDictionaryNode_GetRemove_3(),
                        new IStringDictionaryNode_GetValueArray_4(),
                        new IStringDictionaryNode_Remove_5(),
                        new IStringDictionaryNode_RemoveKeys_6(),
                        new IStringDictionaryNode_Renew_7(),
                        new IStringDictionaryNode_ReusableClear_8(),
                        new IStringDictionaryNode_Set_9(),
                        new IStringDictionaryNode_SnapshotAdd_10(),
                        new IStringDictionaryNode_TryAdd_11(),
                        new IStringDictionaryNode_TryGetValue_12(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(10, typeof(AutoCSer.KeyValue<string,string>), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringDictionaryNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试 256 基分片字典 节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IStringFragmentDictionaryNodeMethodEnum), typeof(StringFragmentDictionaryNodeMethodParameterCreator))]
        public partial interface IStringFragmentDictionaryNode { }
        /// <summary>
        /// 测试 256 基分片字典 节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IStringFragmentDictionaryNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// </summary>
            ClearArray = 1,
            /// <summary>
            /// [2] 
            /// string key 
            /// 返回值 bool 
            /// </summary>
            ContainsKey = 2,
            /// <summary>
            /// [3] 
            /// 返回值 int 
            /// </summary>
            Count = 3,
            /// <summary>
            /// [4] 
            /// string key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetRemove = 4,
            /// <summary>
            /// [5] 
            /// string[] keys 
            /// 返回值 string[] 
            /// </summary>
            GetValueArray = 5,
            /// <summary>
            /// [6] 
            /// string key 
            /// 返回值 bool 
            /// </summary>
            Remove = 6,
            /// <summary>
            /// [7] 
            /// string[] keys 
            /// 返回值 int 
            /// </summary>
            RemoveKeys = 7,
            /// <summary>
            /// [8] 
            /// </summary>
            ReusableClear = 8,
            /// <summary>
            /// [9] 
            /// string key 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Set = 9,
            /// <summary>
            /// [10] 
            /// AutoCSer.KeyValue{string,string} value 
            /// </summary>
            SnapshotAdd = 10,
            /// <summary>
            /// [11] 
            /// string key 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            TryAdd = 11,
            /// <summary>
            /// [12] 
            /// string key 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryGetValue = 12,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringFragmentDictionaryNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentDictionaryNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_ClearArray_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringFragmentDictionaryNode_ClearArray_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentDictionaryNode>)node).ClearArray();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_ContainsKey_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>
        {
            internal IStringFragmentDictionaryNode_ContainsKey_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).ContainsKey(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_Count_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringFragmentDictionaryNode_Count_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentDictionaryNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_GetRemove_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>
        {
            internal IStringFragmentDictionaryNode_GetRemove_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).GetRemove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_GetValueArray_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__>
        {
            internal IStringFragmentDictionaryNode_GetValueArray_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).GetValueArray(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_Remove_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>
        {
            internal IStringFragmentDictionaryNode_Remove_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).Remove(parameter.key));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_RemoveKeys_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__>
        {
            internal IStringFragmentDictionaryNode_RemoveKeys_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).RemoveKeys(parameter.keys));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_ReusableClear_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringFragmentDictionaryNode_ReusableClear_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentDictionaryNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentDictionaryNode>)node).ReusableClear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_Set_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__>
        {
            internal IStringFragmentDictionaryNode_Set_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).Set(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_SnapshotAdd_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__>
        {
            internal IStringFragmentDictionaryNode_SnapshotAdd_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_TryAdd_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__>
        {
            internal IStringFragmentDictionaryNode_TryAdd_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).TryAdd(parameter.key, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentDictionaryNode_TryGetValue_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>
        {
            internal IStringFragmentDictionaryNode_TryGetValue_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentDictionaryNode>(methodParameter).TryGetValue(parameter.key));
            }
        }
        /// <summary>
        /// 测试 256 基分片字典 节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class StringFragmentDictionaryNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.KeyValue<string,string> value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IStringFragmentDictionaryNode_Clear_0(),
                        new IStringFragmentDictionaryNode_ClearArray_1(),
                        new IStringFragmentDictionaryNode_ContainsKey_2(),
                        new IStringFragmentDictionaryNode_Count_3(),
                        new IStringFragmentDictionaryNode_GetRemove_4(),
                        new IStringFragmentDictionaryNode_GetValueArray_5(),
                        new IStringFragmentDictionaryNode_Remove_6(),
                        new IStringFragmentDictionaryNode_RemoveKeys_7(),
                        new IStringFragmentDictionaryNode_ReusableClear_8(),
                        new IStringFragmentDictionaryNode_Set_9(),
                        new IStringFragmentDictionaryNode_SnapshotAdd_10(),
                        new IStringFragmentDictionaryNode_TryAdd_11(),
                        new IStringFragmentDictionaryNode_TryGetValue_12(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(10, typeof(AutoCSer.KeyValue<string,string>), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringFragmentDictionaryNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试 256 基分片哈希表 节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IStringFragmentHashSetNodeMethodEnum), typeof(StringFragmentHashSetNodeMethodParameterCreator))]
        public partial interface IStringFragmentHashSetNode { }
        /// <summary>
        /// 测试 256 基分片哈希表 节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IStringFragmentHashSetNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Add = 0,
            /// <summary>
            /// [1] 
            /// string[] values 
            /// 返回值 int 
            /// </summary>
            AddValues = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Clear = 2,
            /// <summary>
            /// [3] 
            /// </summary>
            ClearArray = 3,
            /// <summary>
            /// [4] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Contains = 4,
            /// <summary>
            /// [5] 
            /// 返回值 int 
            /// </summary>
            Count = 5,
            /// <summary>
            /// [6] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Remove = 6,
            /// <summary>
            /// [7] 
            /// string[] values 
            /// 返回值 int 
            /// </summary>
            RemoveValues = 7,
            /// <summary>
            /// [8] 
            /// </summary>
            ReusableClear = 8,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_Add_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>
        {
            internal IStringFragmentHashSetNode_Add_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentHashSetNode>(methodParameter).Add(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_AddValues_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__>
        {
            internal IStringFragmentHashSetNode_AddValues_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)23) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentHashSetNode>(methodParameter).AddValues(parameter.values));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_Clear_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringFragmentHashSetNode_Clear_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentHashSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentHashSetNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_ClearArray_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringFragmentHashSetNode_ClearArray_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentHashSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentHashSetNode>)node).ClearArray();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_Contains_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>
        {
            internal IStringFragmentHashSetNode_Contains_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentHashSetNode>(methodParameter).Contains(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_Count_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringFragmentHashSetNode_Count_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentHashSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentHashSetNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_Remove_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>
        {
            internal IStringFragmentHashSetNode_Remove_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentHashSetNode>(methodParameter).Remove(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_RemoveValues_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__>
        {
            internal IStringFragmentHashSetNode_RemoveValues_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringFragmentHashSetNode>(methodParameter).RemoveValues(parameter.values));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringFragmentHashSetNode_ReusableClear_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringFragmentHashSetNode_ReusableClear_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentHashSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringFragmentHashSetNode>)node).ReusableClear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        /// 测试 256 基分片哈希表 节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class StringFragmentHashSetNodeMethodParameterCreator
        {
            private static void Add_SnapshotSerialize(AutoCSer.BinarySerializer serializer, string value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IStringFragmentHashSetNode_Add_0(),
                        new IStringFragmentHashSetNode_AddValues_1(),
                        new IStringFragmentHashSetNode_Clear_2(),
                        new IStringFragmentHashSetNode_ClearArray_3(),
                        new IStringFragmentHashSetNode_Contains_4(),
                        new IStringFragmentHashSetNode_Count_5(),
                        new IStringFragmentHashSetNode_Remove_6(),
                        new IStringFragmentHashSetNode_RemoveValues_7(),
                        new IStringFragmentHashSetNode_ReusableClear_8(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(0, typeof(string), Add_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringFragmentHashSetNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试哈希表节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IStringHashSetNodeMethodEnum), typeof(StringHashSetNodeMethodParameterCreator))]
        public partial interface IStringHashSetNode { }
        /// <summary>
        /// 测试哈希表节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IStringHashSetNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Add = 0,
            /// <summary>
            /// [1] 
            /// string[] values 
            /// 返回值 int 
            /// </summary>
            AddValues = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Clear = 2,
            /// <summary>
            /// [3] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Contains = 3,
            /// <summary>
            /// [4] 
            /// 返回值 int 
            /// </summary>
            Count = 4,
            /// <summary>
            /// [5] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Remove = 5,
            /// <summary>
            /// [6] 
            /// string[] values 
            /// 返回值 int 
            /// </summary>
            RemoveValues = 6,
            /// <summary>
            /// [7] 
            /// int capacity 
            /// </summary>
            Renew = 7,
            /// <summary>
            /// [8] 
            /// </summary>
            ReusableClear = 8,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_Add_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>
        {
            internal IStringHashSetNode_Add_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringHashSetNode>(methodParameter).Add(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_AddValues_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__>
        {
            internal IStringHashSetNode_AddValues_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)23) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringHashSetNode>(methodParameter).AddValues(parameter.values));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_Clear_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringHashSetNode_Clear_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringHashSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringHashSetNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_Contains_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>
        {
            internal IStringHashSetNode_Contains_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringHashSetNode>(methodParameter).Contains(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_Count_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringHashSetNode_Count_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringHashSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringHashSetNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_Remove_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>
        {
            internal IStringHashSetNode_Remove_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringHashSetNode>(methodParameter).Remove(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_RemoveValues_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__>
        {
            internal IStringHashSetNode_RemoveValues_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringHashSetNode>(methodParameter).RemoveValues(parameter.values));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_Renew_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__>
        {
            internal IStringHashSetNode_Renew_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringHashSetNode>(methodParameter).Renew(parameter.capacity);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringHashSetNode_ReusableClear_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringHashSetNode_ReusableClear_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringHashSetNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringHashSetNode>)node).ReusableClear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        /// 测试哈希表节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class StringHashSetNodeMethodParameterCreator
        {
            private static void Add_SnapshotSerialize(AutoCSer.BinarySerializer serializer, string value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IStringHashSetNode_Add_0(),
                        new IStringHashSetNode_AddValues_1(),
                        new IStringHashSetNode_Clear_2(),
                        new IStringHashSetNode_Contains_3(),
                        new IStringHashSetNode_Count_4(),
                        new IStringHashSetNode_Remove_5(),
                        new IStringHashSetNode_RemoveValues_6(),
                        new IStringHashSetNode_Renew_7(),
                        new IStringHashSetNode_ReusableClear_8(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(0, typeof(string), Add_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringHashSetNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试数组节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IStringLeftArrayNodeMethodEnum), typeof(StringLeftArrayNodeMethodParameterCreator))]
        public partial interface IStringLeftArrayNode { }
        /// <summary>
        /// 测试数组节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IStringLeftArrayNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// string value 
            /// </summary>
            Add = 0,
            /// <summary>
            /// [1] 
            /// int startIndex 
            /// int count 
            /// 返回值 bool 
            /// </summary>
            Clear = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            ClearLength = 2,
            /// <summary>
            /// [3] 
            /// string value 
            /// int startIndex 
            /// int count 
            /// 返回值 bool 
            /// </summary>
            Fill = 3,
            /// <summary>
            /// [4] 
            /// string value 
            /// </summary>
            FillArray = 4,
            /// <summary>
            /// [5] 
            /// 返回值 int 
            /// </summary>
            GetCapacity = 5,
            /// <summary>
            /// [6] 
            /// 返回值 int 
            /// </summary>
            GetFreeCount = 6,
            /// <summary>
            /// [7] 
            /// 返回值 int 
            /// </summary>
            GetLength = 7,
            /// <summary>
            /// [8] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetTryPopValue = 8,
            /// <summary>
            /// [9] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetValue = 9,
            /// <summary>
            /// [10] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetValueRemoveAt = 10,
            /// <summary>
            /// [11] 
            /// int index 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetValueRemoveToEnd = 11,
            /// <summary>
            /// [12] 
            /// int index 
            /// string value 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            GetValueSet = 12,
            /// <summary>
            /// [13] 
            /// string value 
            /// int startIndex 
            /// int count 
            /// 返回值 int 
            /// </summary>
            IndexOf = 13,
            /// <summary>
            /// [14] 
            /// string value 
            /// 返回值 int 
            /// </summary>
            IndexOfArray = 14,
            /// <summary>
            /// [15] 
            /// int index 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Insert = 15,
            /// <summary>
            /// [16] 
            /// string value 
            /// int startIndex 
            /// int count 
            /// 返回值 int 
            /// </summary>
            LastIndexOf = 16,
            /// <summary>
            /// [17] 
            /// string value 
            /// 返回值 int 
            /// </summary>
            LastIndexOfArray = 17,
            /// <summary>
            /// [18] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Remove = 18,
            /// <summary>
            /// [19] 
            /// int index 
            /// 返回值 bool 
            /// </summary>
            RemoveAt = 19,
            /// <summary>
            /// [20] 
            /// int index 
            /// 返回值 bool 
            /// </summary>
            RemoveToEnd = 20,
            /// <summary>
            /// [21] 
            /// int startIndex 
            /// int count 
            /// 返回值 bool 
            /// </summary>
            Reverse = 21,
            /// <summary>
            /// [22] 
            /// </summary>
            ReverseArray = 22,
            /// <summary>
            /// [23] 
            /// </summary>
            SetEmpty = 23,
            /// <summary>
            /// [24] 
            /// int index 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            SetValue = 24,
            /// <summary>
            /// [25] 
            /// int startIndex 
            /// int count 
            /// 返回值 bool 
            /// </summary>
            Sort = 25,
            /// <summary>
            /// [26] 
            /// </summary>
            SortArray = 26,
            /// <summary>
            /// [27] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            TryAdd = 27,
            /// <summary>
            /// [28] 
            /// 返回值 bool 
            /// </summary>
            TryPop = 28,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_Add_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>
        {
            internal IStringLeftArrayNode_Add_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).Add(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_Clear_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>
        {
            internal IStringLeftArrayNode_Clear_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).Clear(parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_ClearLength_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringLeftArrayNode_ClearLength_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).ClearLength();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_Fill_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>
        {
            internal IStringLeftArrayNode_Fill_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).Fill(parameter.value, parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_FillArray_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>
        {
            internal IStringLeftArrayNode_FillArray_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)11) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).FillArray(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_GetCapacity_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringLeftArrayNode_GetCapacity_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).GetCapacity(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_GetFreeCount_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringLeftArrayNode_GetFreeCount_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).GetFreeCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_GetLength_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringLeftArrayNode_GetLength_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).GetLength(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_GetTryPopValue_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringLeftArrayNode_GetTryPopValue_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).GetTryPopValue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_GetValue_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>
        {
            internal IStringLeftArrayNode_GetValue_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)10) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).GetValue(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_GetValueRemoveAt_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>
        {
            internal IStringLeftArrayNode_GetValueRemoveAt_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).GetValueRemoveAt(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_GetValueRemoveToEnd_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>
        {
            internal IStringLeftArrayNode_GetValueRemoveToEnd_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).GetValueRemoveToEnd(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_GetValueSet_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>
        {
            internal IStringLeftArrayNode_GetValueSet_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).GetValueSet(parameter.index, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_IndexOf_13 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>
        {
            internal IStringLeftArrayNode_IndexOf_13() : base(13, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).IndexOf(parameter.value, parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_IndexOfArray_14 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>
        {
            internal IStringLeftArrayNode_IndexOfArray_14() : base(14, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).IndexOfArray(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_Insert_15 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>
        {
            internal IStringLeftArrayNode_Insert_15() : base(15, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).Insert(parameter.index, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_LastIndexOf_16 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>
        {
            internal IStringLeftArrayNode_LastIndexOf_16() : base(16, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).LastIndexOf(parameter.value, parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_LastIndexOfArray_17 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>
        {
            internal IStringLeftArrayNode_LastIndexOfArray_17() : base(17, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).LastIndexOfArray(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_Remove_18 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>
        {
            internal IStringLeftArrayNode_Remove_18() : base(18, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).Remove(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_RemoveAt_19 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>
        {
            internal IStringLeftArrayNode_RemoveAt_19() : base(19, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).RemoveAt(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_RemoveToEnd_20 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>
        {
            internal IStringLeftArrayNode_RemoveToEnd_20() : base(20, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).RemoveToEnd(parameter.index));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_Reverse_21 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>
        {
            internal IStringLeftArrayNode_Reverse_21() : base(21, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).Reverse(parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_ReverseArray_22 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringLeftArrayNode_ReverseArray_22() : base(22, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).ReverseArray();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_SetEmpty_23 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringLeftArrayNode_SetEmpty_23() : base(23, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).SetEmpty();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_SetValue_24 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>
        {
            internal IStringLeftArrayNode_SetValue_24() : base(24, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).SetValue(parameter.index, parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_Sort_25 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>
        {
            internal IStringLeftArrayNode_Sort_25() : base(25, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)15) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).Sort(parameter.startIndex, parameter.count));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_SortArray_26 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringLeftArrayNode_SortArray_26() : base(26, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).SortArray();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_TryAdd_27 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>
        {
            internal IStringLeftArrayNode_TryAdd_27() : base(27, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)31) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringLeftArrayNode>(methodParameter).TryAdd(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringLeftArrayNode_TryPop_28 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringLeftArrayNode_TryPop_28() : base(28, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringLeftArrayNode>)node).TryPop(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)7);
            }
        }
        /// <summary>
        /// 测试数组节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class StringLeftArrayNodeMethodParameterCreator
        {
            private static void Add_SnapshotSerialize(AutoCSer.BinarySerializer serializer, string value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IStringLeftArrayNode_Add_0(),
                        new IStringLeftArrayNode_Clear_1(),
                        new IStringLeftArrayNode_ClearLength_2(),
                        new IStringLeftArrayNode_Fill_3(),
                        new IStringLeftArrayNode_FillArray_4(),
                        new IStringLeftArrayNode_GetCapacity_5(),
                        new IStringLeftArrayNode_GetFreeCount_6(),
                        new IStringLeftArrayNode_GetLength_7(),
                        new IStringLeftArrayNode_GetTryPopValue_8(),
                        new IStringLeftArrayNode_GetValue_9(),
                        new IStringLeftArrayNode_GetValueRemoveAt_10(),
                        new IStringLeftArrayNode_GetValueRemoveToEnd_11(),
                        new IStringLeftArrayNode_GetValueSet_12(),
                        new IStringLeftArrayNode_IndexOf_13(),
                        new IStringLeftArrayNode_IndexOfArray_14(),
                        new IStringLeftArrayNode_Insert_15(),
                        new IStringLeftArrayNode_LastIndexOf_16(),
                        new IStringLeftArrayNode_LastIndexOfArray_17(),
                        new IStringLeftArrayNode_Remove_18(),
                        new IStringLeftArrayNode_RemoveAt_19(),
                        new IStringLeftArrayNode_RemoveToEnd_20(),
                        new IStringLeftArrayNode_Reverse_21(),
                        new IStringLeftArrayNode_ReverseArray_22(),
                        new IStringLeftArrayNode_SetEmpty_23(),
                        new IStringLeftArrayNode_SetValue_24(),
                        new IStringLeftArrayNode_Sort_25(),
                        new IStringLeftArrayNode_SortArray_26(),
                        new IStringLeftArrayNode_TryAdd_27(),
                        new IStringLeftArrayNode_TryPop_28(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(0, typeof(string), Add_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringLeftArrayNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试队列节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IStringQueueNodeMethodEnum), typeof(StringQueueNodeMethodParameterCreator))]
        public partial interface IStringQueueNode { }
        /// <summary>
        /// 测试队列节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IStringQueueNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Contains = 1,
            /// <summary>
            /// [2] 
            /// 返回值 int 
            /// </summary>
            Count = 2,
            /// <summary>
            /// [3] 
            /// string value 
            /// </summary>
            Enqueue = 3,
            /// <summary>
            /// [4] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryDequeue = 4,
            /// <summary>
            /// [5] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryPeek = 5,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringQueueNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringQueueNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringQueueNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringQueueNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringQueueNode_Contains_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__>
        {
            internal IStringQueueNode_Contains_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringQueueNode>(methodParameter).Contains(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringQueueNode_Count_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringQueueNode_Count_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringQueueNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringQueueNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringQueueNode_Enqueue_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__>
        {
            internal IStringQueueNode_Enqueue_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringQueueNode>(methodParameter).Enqueue(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringQueueNode_TryDequeue_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringQueueNode_TryDequeue_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringQueueNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringQueueNode>)node).TryDequeue(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringQueueNode_TryPeek_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringQueueNode_TryPeek_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringQueueNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringQueueNode>)node).TryPeek(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        /// 测试队列节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class StringQueueNodeMethodParameterCreator
        {
            private static void Enqueue_SnapshotSerialize(AutoCSer.BinarySerializer serializer, string value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IStringQueueNode_Clear_0(),
                        new IStringQueueNode_Contains_1(),
                        new IStringQueueNode_Count_2(),
                        new IStringQueueNode_Enqueue_3(),
                        new IStringQueueNode_TryDequeue_4(),
                        new IStringQueueNode_TryPeek_5(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(3, typeof(string), Enqueue_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringQueueNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试栈节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IStringStackNodeMethodEnum), typeof(StringStackNodeMethodParameterCreator))]
        public partial interface IStringStackNode { }
        /// <summary>
        /// 测试栈节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum IStringStackNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// </summary>
            Clear = 0,
            /// <summary>
            /// [1] 
            /// string value 
            /// 返回值 bool 
            /// </summary>
            Contains = 1,
            /// <summary>
            /// [2] 
            /// 返回值 int 
            /// </summary>
            Count = 2,
            /// <summary>
            /// [3] 
            /// string value 
            /// </summary>
            Push = 3,
            /// <summary>
            /// [4] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryPeek = 4,
            /// <summary>
            /// [5] 
            /// 返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{string} 
            /// </summary>
            TryPop = 5,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringStackNode_Clear_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal IStringStackNode_Clear_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringStackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringStackNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringStackNode_Contains_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__>
        {
            internal IStringStackNode_Contains_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)14) { }
            public override void CallInputOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputOutputMethodParameter.Callback(methodParameter, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringStackNode>(methodParameter).Contains(parameter.value));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringStackNode_Count_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringStackNode_Count_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringStackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringStackNode>)node).Count(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringStackNode_Push_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__>
        {
            internal IStringStackNode_Push_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)27) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<IStringStackNode>(methodParameter).Push(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringStackNode_TryPeek_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringStackNode_TryPeek_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringStackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringStackNode>)node).TryPeek(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)2);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class IStringStackNode_TryPop_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal IStringStackNode_TryPop_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringStackNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<IStringStackNode>)node).TryPop(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3);
            }
        }
        /// <summary>
        /// 测试栈节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class StringStackNodeMethodParameterCreator
        {
            private static void Push_SnapshotSerialize(AutoCSer.BinarySerializer serializer, string value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__ { value = value };
                serializer.SimpleSerialize(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new IStringStackNode_Clear_0(),
                        new IStringStackNode_Contains_1(),
                        new IStringStackNode_Count_2(),
                        new IStringStackNode_Push_3(),
                        new IStringStackNode_TryPeek_4(),
                        new IStringStackNode_TryPop_5(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(3, typeof(string), Push_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(StringStackNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试消息处理节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ITestClassMessageNodeMethodEnum), typeof(TestClassMessageNodeMethodParameterCreator))]
        public partial interface ITestClassMessageNode { }
        /// <summary>
        /// 测试消息处理节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum ITestClassMessageNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage message 
            /// </summary>
            AppendMessage = 0,
            /// <summary>
            /// [1] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage message 
            /// </summary>
            AppendMessageLoadPersistence = 1,
            /// <summary>
            /// [2] 
            /// </summary>
            Clear = 2,
            /// <summary>
            /// [3] 
            /// </summary>
            ClearFailed = 3,
            /// <summary>
            /// [4] 
            /// </summary>
            ClearFailedLoadPersistence = 4,
            /// <summary>
            /// [5] 
            /// </summary>
            ClearLoadPersistence = 5,
            /// <summary>
            /// [6] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            /// </summary>
            Completed = 6,
            /// <summary>
            /// [7] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            /// </summary>
            CompletedLoadPersistence = 7,
            /// <summary>
            /// [8] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            /// </summary>
            Failed = 8,
            /// <summary>
            /// [9] 
            /// AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity identity 
            /// </summary>
            FailedLoadPersistence = 9,
            /// <summary>
            /// [10] 
            /// 返回值 int 
            /// </summary>
            GetCallbackCount = 10,
            /// <summary>
            /// [11] 
            /// 返回值 int 
            /// </summary>
            GetCount = 11,
            /// <summary>
            /// [12] 
            /// 返回值 int 
            /// </summary>
            GetFailedCount = 12,
            /// <summary>
            /// [13] 
            /// int maxCount 
            /// </summary>
            GetMessage = 13,
            /// <summary>
            /// [14] 
            /// 返回值 int 
            /// </summary>
            GetTimeoutCount = 14,
            /// <summary>
            /// [15] 
            /// 返回值 int 
            /// </summary>
            GetTotalCount = 15,
            /// <summary>
            /// [16] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage value 
            /// </summary>
            SnapshotAdd = 16,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_AppendMessage_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__>
        {
            internal ITestClassMessageNode_AppendMessage_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassMessageNode>(methodParameter).AppendMessage(parameter.message);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_AppendMessageLoadPersistence_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__>
        {
            internal ITestClassMessageNode_AppendMessageLoadPersistence_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)0) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassMessageNode>(methodParameter).AppendMessageLoadPersistence(parameter.message);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_Clear_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ITestClassMessageNode_Clear_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).Clear();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_ClearFailed_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ITestClassMessageNode_ClearFailed_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)3) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).ClearFailed();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_ClearFailedLoadPersistence_4 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ITestClassMessageNode_ClearFailedLoadPersistence_4() : base(4, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)0) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).ClearFailedLoadPersistence();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_ClearLoadPersistence_5 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod
        {
            internal ITestClassMessageNode_ClearLoadPersistence_5() : base(5, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)0) { }
            public override void Call(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallStateEnum> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).ClearLoadPersistence();
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallMethod.Callback(ref callback);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_Completed_6 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>
        {
            internal ITestClassMessageNode_Completed_6() : base(6, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)19) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassMessageNode>(methodParameter).Completed(parameter.identity);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_CompletedLoadPersistence_7 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>
        {
            internal ITestClassMessageNode_CompletedLoadPersistence_7() : base(7, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)16) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassMessageNode>(methodParameter).CompletedLoadPersistence(parameter.identity);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_Failed_8 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>
        {
            internal ITestClassMessageNode_Failed_8() : base(8, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)19) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassMessageNode>(methodParameter).Failed(parameter.identity);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_FailedLoadPersistence_9 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>
        {
            internal ITestClassMessageNode_FailedLoadPersistence_9() : base(9, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)16) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassMessageNode>(methodParameter).FailedLoadPersistence(parameter.identity);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_GetCallbackCount_10 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ITestClassMessageNode_GetCallbackCount_10() : base(10, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).GetCallbackCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_GetCount_11 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ITestClassMessageNode_GetCount_11() : base(11, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).GetCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_GetFailedCount_12 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ITestClassMessageNode_GetFailedCount_12() : base(12, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).GetFailedCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_GetMessage_13 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip13__>
        {
            internal ITestClassMessageNode_GetMessage_13() : base(13, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)138) { }
            public override void InputKeepCallback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip13__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip13__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.InputKeepCallbackMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip13__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassMessageNode>(methodParameter).GetMessage(parameter.maxCount, AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodKeepCallback<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage>.Create(methodParameter));
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_GetTimeoutCount_14 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ITestClassMessageNode_GetTimeoutCount_14() : base(14, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).GetTimeoutCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_GetTotalCount_15 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod
        {
            internal ITestClassMessageNode_GetTotalCount_15() : base(15, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6) { }
            public override void CallOutput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode node, ref AutoCSer.Net.CommandServerCallback<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameter> callback)
            {
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallOutputMethod.Callback(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>.GetTarget((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNode<ITestClassMessageNode>)node).GetTotalCount(), ref callback, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)6);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassMessageNode_SnapshotAdd_16 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__>
        {
            internal ITestClassMessageNode_SnapshotAdd_16() : base(16, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)1) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassMessageNode>(methodParameter).SnapshotAdd(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        /// 测试消息处理节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class TestClassMessageNodeMethodParameterCreator
        {
            private static void SnapshotAdd_SnapshotSerialize(AutoCSer.BinarySerializer serializer, AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage value)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__ snapshotMethodParameter = new AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__ { value = value };
                serializer.InternalIndependentSerializeNotNull(ref snapshotMethodParameter);
            }
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ITestClassMessageNode_AppendMessage_0(),
                        new ITestClassMessageNode_AppendMessageLoadPersistence_1(),
                        new ITestClassMessageNode_Clear_2(),
                        new ITestClassMessageNode_ClearFailed_3(),
                        new ITestClassMessageNode_ClearFailedLoadPersistence_4(),
                        new ITestClassMessageNode_ClearLoadPersistence_5(),
                        new ITestClassMessageNode_Completed_6(),
                        new ITestClassMessageNode_CompletedLoadPersistence_7(),
                        new ITestClassMessageNode_Failed_8(),
                        new ITestClassMessageNode_FailedLoadPersistence_9(),
                        new ITestClassMessageNode_GetCallbackCount_10(),
                        new ITestClassMessageNode_GetCount_11(),
                        new ITestClassMessageNode_GetFailedCount_12(),
                        new ITestClassMessageNode_GetMessage_13(),
                        new ITestClassMessageNode_GetTimeoutCount_14(),
                        new ITestClassMessageNode_GetTotalCount_15(),
                        new ITestClassMessageNode_SnapshotAdd_16(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(1),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(5),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(4),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(7),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(9),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo(16, typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage), SnapshotAdd_SnapshotSerialize),
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(TestClassMessageNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
        /// <summary>
        /// 测试仅存档节点接口
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ITestClassOnlyPersistenceNodeMethodEnum), typeof(TestClassOnlyPersistenceNodeMethodParameterCreator))]
        public partial interface ITestClassOnlyPersistenceNode { }
        /// <summary>
        /// 测试仅存档节点接口 节点方法序号映射枚举类型
        /// </summary>
        public enum ITestClassOnlyPersistenceNodeMethodEnum
        {
            /// <summary>
            /// [0] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value 
            /// </summary>
            Save = 0,
            /// <summary>
            /// [1] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value 
            /// </summary>
            SaveLoadPersistence = 1,
            /// <summary>
            /// [2] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value 
            /// </summary>
            SaveSendOnly = 2,
            /// <summary>
            /// [3] 
            /// AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass value 
            /// </summary>
            SaveSendOnlyLoadPersistence = 3,
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassOnlyPersistenceNode_Save_0 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>
        {
            internal ITestClassOnlyPersistenceNode_Save_0() : base(0, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)19) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassOnlyPersistenceNode>(methodParameter).Save(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassOnlyPersistenceNode_SaveLoadPersistence_1 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>
        {
            internal ITestClassOnlyPersistenceNode_SaveLoadPersistence_1() : base(1, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)16) { }
            public override void CallInput(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassOnlyPersistenceNode>(methodParameter).SaveLoadPersistence(parameter.value);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.CallInputMethodParameter.Callback(methodParameter);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassOnlyPersistenceNode_SaveSendOnly_2 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>
        {
            internal ITestClassOnlyPersistenceNode_SaveSendOnly_2() : base(2, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)19) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassOnlyPersistenceNode>(methodParameter).SaveSendOnly(parameter.value);
            }
        }
        /// <summary>
        ///  服务端节点方法
        /// </summary>
        internal sealed class ITestClassOnlyPersistenceNode_SaveSendOnlyLoadPersistence_3 : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethod<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>
        {
            internal ITestClassOnlyPersistenceNode_SaveSendOnlyLoadPersistence_3() : base(3, -2147483648, (AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodFlagsEnum)16) { }
            public override void SendOnly(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter methodParameter)
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__ parameter = AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>.GetParameter((AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SendOnlyMethodParameter<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__>)methodParameter);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodParameter.GetNodeTarget<ITestClassOnlyPersistenceNode>(methodParameter).SaveSendOnlyLoadPersistence(parameter.value);
            }
        }
        /// <summary>
        /// 测试仅存档节点接口 创建调用方法与参数信息
        /// </summary>
        internal sealed partial class TestClassOnlyPersistenceNodeMethodParameterCreator
        {
            /// <summary>
            /// 获取生成服务端节点方法信息
            /// </summary>
            /// <returns></returns>
            internal static AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod GetServerNodeCreatorMethod()
            {
                return new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeCreatorMethod(new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.Method[]
                    {
                        new ITestClassOnlyPersistenceNode_Save_0(),
                        new ITestClassOnlyPersistenceNode_SaveLoadPersistence_1(),
                        new ITestClassOnlyPersistenceNode_SaveSendOnly_2(),
                        new ITestClassOnlyPersistenceNode_SaveSendOnlyLoadPersistence_3(),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo[]
                    {
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(1),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(3),
                        new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeMethodInfo(-2147483648),
                    }, new AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotMethodCreatorInfo[]
                    {
                    });
            }
            internal static void MethodParameterCreator()
            {
                GetServerNodeCreatorMethod();
                AutoCSer.AotReflection.NonPublicMethods(typeof(TestClassOnlyPersistenceNodeMethodParameterCreator));
            }
        }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
    public partial struct PerformanceKeyValue
    {
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="stream"></param>
            /// <param name="value"></param>
            internal static void SimpleSerialize(AutoCSer.Memory.UnmanagedStream stream, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value)
            {
                value.simpleSerialize(stream);
            }
            /// <summary>
            /// 简单序列化
            /// </summary>
            /// <param name="__stream__"></param>
            private void simpleSerialize(AutoCSer.Memory.UnmanagedStream __stream__)
            {
                if (__stream__.TryPrepSize(8))
                {
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.Key);
                    AutoCSer.SimpleSerialize.Serializer.Serialize(__stream__, this.Value);
                }
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="start"></param>
            /// <param name="value"></param>
            /// <param name="end"></param>
            /// <returns></returns>
            internal unsafe static byte* SimpleDeserialize(byte* start, ref AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value, byte* end)
            {
                return value.simpleDeserialize(start, end);
            }
            /// <summary>
            /// 简单反序列化
            /// </summary>
            /// <param name="__start__"></param>
            /// <param name="__end__"></param>
            /// <returns></returns>
            private unsafe byte* simpleDeserialize(byte* __start__, byte* __end__)
            {
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.Key);
                __start__ = AutoCSer.SimpleSerialize.Deserializer.Deserialize(__start__, ref this.Value);
                if (__start__ == null || __start__ > __end__) return null;
                return __start__;
            }
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            internal unsafe static void SimpleSerialize()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue value = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue);
                SimpleSerialize(null, ref value);
                SimpleDeserialize(null, ref value, null);
                AutoCSer.AotReflection.NonPublicMethods(typeof(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue));
            }
    }
}namespace AutoCSer.TestCase.StreamPersistenceMemoryDatabase
{
    /// <summary>
    /// 触发 AOT 编译
    /// </summary>
    public static class AotMethod
    {
            /// <summary>
            /// 代码生成调用激活 AOT 反射
            /// </summary>
            /// <returns></returns>
            public static bool Call()
            {
                if (AutoCSer.Date.StartTimestamp == long.MinValue)
                {
                    AutoCSer.AotMethod.Call();
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.AotMethod.Call();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster/**/.JsonSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster/**/.DefaultConstructorReflection();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue/**/.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage/**/.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage/**/.DefaultConstructorReflection();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass/**/.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass/**/.DefaultConstructorReflection();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage/**/.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage/**/.DefaultConstructorReflection();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass/**/.CreateRandomObject();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip0__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip1__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip3__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.__ip4__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip0__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip13__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip23__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.__ip34__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip0__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip1__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip2__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip3__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip4__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip256__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip258__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip259__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip263__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.__ip271__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip0__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.__ip1__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip0__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.__ip1__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip7__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip12__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.__ip13__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip5__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip8__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.__ip9__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip9__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip10__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.__ip11__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip4__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip7__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip9__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.__ip10__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip0__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip6__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.__ip16__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip7__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip12__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.__ip13__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip0__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip2__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip3__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip6__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.__ip14__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip4__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip7__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip9__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.__ip10__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip2__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip5__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip9__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.__ip10__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip0__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.__ip1__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip0__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip1__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.__ip7__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip0__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip3__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip9__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.__ip12__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.__ip1__.SimpleSerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip0__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip6__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.__ip16__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.__ip0__.BinarySerialize();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeLocalClient.LocalClientNode();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.GameNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CallbackNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.CustomServiceNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSearchTreeSetNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongSortedSetNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSearchTreeDictionaryNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedDictionaryNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.LongStringSortedListNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceDictionaryNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessageNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceSearchTreeDictionaryNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringArrayNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringDictionaryNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentDictionaryNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringFragmentHashSetNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringHashSetNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringLeftArrayNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringQueueNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.StringStackNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessageNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassOnlyPersistenceNodeMethodParameterCreator.MethodParameterCreator();
                    AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue/**/.SimpleSerialize();
                    AutoCSer.RandomObject.Creator.CreateInt(null);
                    AutoCSer.RandomObject.Creator.CreateString(null);

                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>));
                    AutoCSer.BinarySerializer.Json<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>(null, default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<int>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity>));
                    AutoCSer.BinarySerializer.Simple<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity>(null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<string>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[]>));
                    AutoCSer.BinarySerializer.Array<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>(null, default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[]));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.KeyValue<int,int>>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.KeyValue<int,int>[]>));
                    AutoCSer.BinarySerializer.StructArray<AutoCSer.KeyValue<int,int>>(null, default(AutoCSer.KeyValue<int,int>[]));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<uint>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>));
                    AutoCSer.BinarySerializer.Simple<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>(null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo>));
                    AutoCSer.BinarySerializer.Json<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo>(null, default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<long>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.ReusableDictionaryGroupTypeEnum>));
                    AutoCSer.BinarySerializer.EnumByte<AutoCSer.ReusableDictionaryGroupTypeEnum>(null, default(AutoCSer.ReusableDictionaryGroupTypeEnum));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<long[]>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.KeyValue<long,string>>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<int[]>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>));
                    AutoCSer.BinarySerializer.Simple<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>(null, default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.KeyValue<int,string>>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<string[]>));
                    AutoCSer.BinarySerializer.Array<string>(null, default(string[]));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.KeyValue<string,string>>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.BinarySerialize.TypeSerializer<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClass>));
                    binaryDeserializeMemberTypes();
                    AutoCSer.AotReflection.FieldsAndProperties(typeof(AutoCSer.KeyValue<long,string>));
                    AutoCSer.AotReflection.FieldsAndProperties(typeof(AutoCSer.KeyValue<int,string>));
                    AutoCSer.AotReflection.FieldsAndProperties(typeof(AutoCSer.KeyValue<string,string>));

                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.Json.TypeSerializer<int>));
                    AutoCSer.AotReflection.NonPublicFields(typeof(AutoCSer.Json.TypeSerializer<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Pos>));


                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<int>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<int>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<long>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<long>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<AutoCSer.KeyValue<long,string>>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<AutoCSer.KeyValue<long,string>>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceMessage>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<AutoCSer.KeyValue<int,string>>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<AutoCSer.KeyValue<int,string>>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<AutoCSer.KeyValue<string,string>>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<AutoCSer.KeyValue<string,string>>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<string>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<string>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.EnumerableSnapshotNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.TestClassMessage>(null);
                    AutoCSer.CommandService.StreamPersistenceMemoryDatabase.SnapshotCloneNode.Create<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>(null);
                    return true;
                }
                return false;
            }
            /// <summary>
            /// 二进制反序列化成员类型代码生成调用激活 AOT 反射
            /// </summary>
            private static void binaryDeserializeMemberTypes()
            {
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster t1 = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster);
                AutoCSer.BinaryDeserializer.Json<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>(null, ref t1);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity t2 = default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity);
                AutoCSer.BinaryDeserializer.Simple<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MessageIdeneity>(null, ref t2);
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[] t3 = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster[]);
                AutoCSer.BinaryDeserializer.Array<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.Game.Monster>(null, ref t3);
                AutoCSer.KeyValue<int,int>[] t4 = default(AutoCSer.KeyValue<int,int>[]);
                AutoCSer.BinaryDeserializer.StructArray<AutoCSer.KeyValue<int,int>>(null, ref t4);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex t5 = default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex);
                AutoCSer.BinaryDeserializer.Simple<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex>(null, ref t5);
                AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo t6 = default(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo);
                AutoCSer.BinaryDeserializer.Json<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo>(null, ref t6);
                AutoCSer.ReusableDictionaryGroupTypeEnum t7 = default(AutoCSer.ReusableDictionaryGroupTypeEnum);
                AutoCSer.BinaryDeserializer.EnumByte<AutoCSer.ReusableDictionaryGroupTypeEnum>(null, ref t7);
                AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue t8 = default(AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue);
                AutoCSer.BinaryDeserializer.Simple<AutoCSer.TestCase.StreamPersistenceMemoryDatabase.PerformanceKeyValue>(null, ref t8);
                string[] t9 = default(string[]);
                AutoCSer.BinaryDeserializer.Array<string>(null, ref t9);
            }
    }
}
#endif