<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.TestCase.SearchCommon</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.TestCase.SearchCommon.ISearchUserNode">
            <summary>
            非索引条件查询数据节点接口
            </summary>
            <summary>
            非索引条件查询数据节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchCommon.ISearchUserNode.GetPage(AutoCSer.TestCase.SearchQueryService.SearchUserQueryParameter,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback{AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult{System.Int32}})">
            <summary>
            获取非索引条件数据用户分页数据
            </summary>
            <param name="queryParameter">用户搜索非索引条件数据查询参数</param>
            <param name="callback"></param>
        </member>
        <member name="M:AutoCSer.TestCase.SearchCommon.ISearchUserNode.GetArray(AutoCSer.LeftArray{System.Int32},AutoCSer.CommandService.StreamPersistenceMemoryDatabase.MethodCallback{AutoCSer.LeftArray{AutoCSer.TestCase.SearchDataSource.SearchUser}})">
            <summary>
            获取非索引条件数据用户数组
            </summary>
            <param name="userIds">用户标识数组</param>
            <param name="callback"></param>
        </member>
        <member name="T:AutoCSer.TestCase.SearchCommon.ISearchUserNodeClientNode">
            <summary>
            非索引条件查询数据节点接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchCommon.ISearchUserNodeClientNode.Create(System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchCommon.ISearchUserNodeClientNode.Delete(System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchCommon.ISearchUserNodeClientNode.Update(System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchCommon.ISearchUserNodeClientNode.GetArray(AutoCSer.LeftArray{System.Int32})">
            <summary>
            获取非索引条件数据用户数组
            </summary>
            <param name="userIds">用户标识数组</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchCommon.ISearchUserNodeClientNode.GetPage(AutoCSer.TestCase.SearchQueryService.SearchUserQueryParameter)">
            <summary>
            获取非索引条件数据用户分页数据
            </summary>
            <param name="queryParameter">用户搜索非索引条件数据查询参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchCommon.ISearchUserNodeClientNode.LoadCreate(AutoCSer.TestCase.SearchDataSource.SearchUser)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum">
            <summary>
            非索引条件查询数据节点接口 节点方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.Completed">
            <summary>
            [0] 
            AutoCSer.TestCase.SearchDataSource.SearchUser value 
            返回值 AutoCSer.CommandService.Search.ConditionDataUpdateStateEnum 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.CompletedBeforePersistence">
            <summary>
            [1] 
            AutoCSer.TestCase.SearchDataSource.SearchUser value 
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ValueResult{AutoCSer.CommandService.Search.ConditionDataUpdateStateEnum} 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.CompletedLoadPersistence">
            <summary>
            [2] 
            AutoCSer.TestCase.SearchDataSource.SearchUser value 
            返回值 AutoCSer.CommandService.Search.ConditionDataUpdateStateEnum 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.Create">
            <summary>
            [3] 
            int key 
            返回值 AutoCSer.CommandService.Search.ConditionDataUpdateStateEnum 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.Delete">
            <summary>
            [4] 
            int key 
            返回值 AutoCSer.CommandService.Search.ConditionDataUpdateStateEnum 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.DeleteLoadPersistence">
            <summary>
            [5] 
            int key 
            返回值 AutoCSer.CommandService.Search.ConditionDataUpdateStateEnum 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.Loaded">
            <summary>
            [6] 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.SnapshotSet">
            <summary>
            [7] 
            AutoCSer.TestCase.SearchDataSource.SearchUser value 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.SnapshotSetLoaded">
            <summary>
            [8] 
            bool value 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.Update">
            <summary>
            [9] 
            int key 
            返回值 AutoCSer.CommandService.Search.ConditionDataUpdateStateEnum 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.GetArray">
            <summary>
            [10] 获取非索引条件数据用户数组
            AutoCSer.LeftArray{int} userIds 用户标识数组
            返回值 AutoCSer.LeftArray{AutoCSer.TestCase.SearchDataSource.SearchUser} 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.GetPage">
            <summary>
            [11] 获取非索引条件数据用户分页数据
            AutoCSer.TestCase.SearchQueryService.SearchUserQueryParameter queryParameter 用户搜索非索引条件数据查询参数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.PageResult{int} 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.LoadCreate">
            <summary>
            [12] 
            AutoCSer.TestCase.SearchDataSource.SearchUser value 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.LoadCreateBeforePersistence">
            <summary>
            [13] 
            AutoCSer.TestCase.SearchDataSource.SearchUser value 
            返回值 bool 
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchCommon.ISearchUserNodeMethodEnum.LoadCreateLoadPersistence">
            <summary>
            [14] 
            AutoCSer.TestCase.SearchDataSource.SearchUser value 
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.GenderEnum">
            <summary>
            性别
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.GenderEnum.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.GenderEnum.Male">
            <summary>
            男
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.GenderEnum.Female">
            <summary>
            女
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNode">
            <summary>
            用户搜索数据更新消息节点的自定义基础服务接口
            </summary>
            <summary>
            用户搜索数据更新消息节点的自定义基础服务接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNode.CreateSearchUserMessageNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            创建用户搜索数据更新消息节点 ITimeoutMessageNode{OperationData{int}}
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="timeoutSeconds">触发任务执行超时秒数</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.SearchUser">
            <summary>
            用户搜索非索引条件数据
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.SearchUser.LoginTime">
            <summary>
            最后一次登录操作时间
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.SearchUser.Id">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.SearchUser.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.SearchUser.#ctor(AutoCSer.TestCase.SearchDataSource.User)">
            <summary>
            用户搜索非索引条件数据
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.SearchUser.Equals(AutoCSer.TestCase.SearchDataSource.SearchUser)">
            <summary>
            判断是否相等
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.SearchUser.GetLoginTimeKey">
            <summary>
            获取最后一次登录操作时间关键字
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.SearchUser.loginTimeDesc(AutoCSer.TestCase.SearchDataSource.SearchUser,AutoCSer.TestCase.SearchDataSource.SearchUser)">
            <summary>
            最后登录时间降序
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.SearchUser.LoginTimeDesc">
            <summary>
            最后登录时间降序
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.SearchUser.getId(AutoCSer.TestCase.SearchDataSource.SearchUser)">
            <summary>
            获取用户标识
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.SearchUser.GetId">
            <summary>
            获取用户标识
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.User.Id">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.User.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.User.LoginTime">
            <summary>
            最后一次登录操作时间
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.User.Name">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.User.Remark">
            <summary>
            用户备注
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.OperationData`1">
            <summary>
            操作数据
            </summary>
            <typeparam name="T">关键字数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationData`1.Key">
            <summary>
            关键字数据
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationData`1.DataType">
            <summary>
            操作数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationData`1.OperationType">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.OperationDataTypeEnum">
            <summary>
            操作数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationDataTypeEnum.SearchUserNode">
            <summary>
            用户搜索非索引条件数据
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationDataTypeEnum.UserNameNode">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationDataTypeEnum.UserRemarkNode">
            <summary>
            用户备注
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationDataTypeEnum.All">
            <summary>
            所有用户数据
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.OperationTypeEnum">
            <summary>
            数据操作类型
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationTypeEnum.Update">
            <summary>
            更新数据
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationTypeEnum.Insert">
            <summary>
            添加数据
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.OperationTypeEnum.Delete">
            <summary>
            删除数据
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.IUserService">
            <summary>
            用户信息服务接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserService.GetAllUserName(AutoCSer.Net.CommandServerKeepCallbackCount{AutoCSer.BinarySerializeKeyValue{System.Int32,System.String}})">
            <summary>
            获取所有用户名称
            </summary>
            <param name="callback">用户名称回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserService.GetAllUserRemark(AutoCSer.Net.CommandServerKeepCallbackCount{AutoCSer.BinarySerializeKeyValue{System.Int32,System.String}})">
            <summary>
            获取所有用户备注
            </summary>
            <param name="callback">用户备注回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserService.GetAllSearchUser(AutoCSer.Net.CommandServerKeepCallbackCount{AutoCSer.TestCase.SearchDataSource.SearchUser})">
            <summary>
            获取所有用户搜索非索引条件数据
            </summary>
            <param name="callback">用户搜索非索引条件数据回调</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserService.GetName(System.Int32)">
            <summary>
            获取用户名称
            </summary>
            <param name="id">用户标识</param>
            <returns>null 表示不存在</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserService.GetRemark(System.Int32)">
            <summary>
            获取用户备注
            </summary>
            <param name="id">用户标识</param>
            <returns>null 表示不存在</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserService.GetSearchUser(System.Int32)">
            <summary>
            获取用户搜索非索引条件数据
            </summary>
            <param name="id">用户标识</param>
            <returns>Id 为 0 表示不存在</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserService.GetPage(AutoCSer.TestCase.SearchQueryService.UserQueryParameter)">
            <summary>
            获取用户标识分页记录
            </summary>
            <param name="queryParameter">用户搜索查询参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.IUserServiceClientController">
            <summary>
            用户信息服务接口 客户端接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserServiceClientController.GetAllSearchUser">
            <summary>
            获取所有用户搜索非索引条件数据
            </summary>
            <returns>用户搜索非索引条件数据回调</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserServiceClientController.GetAllUserName">
            <summary>
            获取所有用户名称
            </summary>
            <returns>用户名称回调</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserServiceClientController.GetAllUserRemark">
            <summary>
            获取所有用户备注
            </summary>
            <returns>用户备注回调</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserServiceClientController.GetName(System.Int32)">
            <summary>
            获取用户名称
            </summary>
            <param name="id">用户标识</param>
            <returns>null 表示不存在</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserServiceClientController.GetPage(AutoCSer.TestCase.SearchQueryService.UserQueryParameter)">
            <summary>
            获取用户标识分页记录
            </summary>
            <param name="queryParameter">用户搜索查询参数</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserServiceClientController.GetRemark(System.Int32)">
            <summary>
            获取用户备注
            </summary>
            <param name="id">用户标识</param>
            <returns>null 表示不存在</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.IUserServiceClientController.GetSearchUser(System.Int32)">
            <summary>
            获取用户搜索非索引条件数据
            </summary>
            <param name="id">用户标识</param>
            <returns>Id 为 0 表示不存在</returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeClientNode">
            <summary>
            用户搜索数据更新消息节点的自定义基础服务接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeClientNode.CreateSearchUserMessageNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo,System.Int32)">
            <summary>
            创建用户搜索数据更新消息节点 ITimeoutMessageNode{OperationData{int}}
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <param name="timeoutSeconds">触发任务执行超时秒数</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum">
            <summary>
            用户搜索数据更新消息节点的自定义基础服务接口 节点方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateArrayNode">
            <summary>
            [0] 创建数组节点 ArrayNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int length 数组长度
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateBitmapNode">
            <summary>
            [1] 创建位图节点 BitmapNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            uint capacity 二进制位数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateByteArrayDictionaryNode">
            <summary>
            [2] 创建字典节点 ByteArrayDictionaryNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateByteArrayFragmentDictionaryNode">
            <summary>
            [3] 创建字典节点 ByteArrayFragmentDictionaryNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateByteArrayQueueNode">
            <summary>
            [4] 创建队列节点（先进先出） ByteArrayQueueNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateByteArrayStackNode">
            <summary>
            [5] 创建栈节点（后进先出） ByteArrayStackNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateDictionaryNode">
            <summary>
            [6] 创建字典节点 DictionaryNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateDistributedLockNode">
            <summary>
            [7] 创建分布式锁节点 DistributedLockNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateFragmentDictionaryNode">
            <summary>
            [8] 创建字典节点 FragmentDictionaryNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateFragmentHashSetNode">
            <summary>
            [9] 创建 256 基分片哈希表节点 FragmentHashSetNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateHashBytesDictionaryNode">
            <summary>
            [10] 创建字典节点 HashBytesDictionaryNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateHashBytesFragmentDictionaryNode">
            <summary>
            [11] 创建字典节点 HashBytesFragmentDictionaryNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateHashSetNode">
            <summary>
            [12] 创建哈希表节点 HashSetNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateIdentityGeneratorNode">
            <summary>
            [13] 创建 64 位自增ID 节点 IdentityGeneratorNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            long identity 起始分配 ID
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateLeftArrayNode">
            <summary>
            [14] 创建数组节点 LeftArrayNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateMessageNode">
            <summary>
            [15] 创建消息处理节点 MessageNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType messageType 消息数据类型
            int arraySize 正在处理消息数组大小
            int timeoutSeconds 消息处理超时秒数
            int checkTimeoutSeconds 消息超时检查间隔秒数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateQueueNode">
            <summary>
            [16] 创建队列节点（先进先出） QueueNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateSearchTreeDictionaryNode">
            <summary>
            [17] 创建二叉搜索树节点 SearchTreeDictionaryNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateSearchTreeSetNode">
            <summary>
            [18] 创建二叉搜索树集合节点 SearchTreeSetNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateServerByteArrayMessageNode">
            <summary>
            [19] 创建消息处理节点 MessageNode{ServerByteArrayMessage}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int arraySize 正在处理消息数组大小
            int timeoutSeconds 消息处理超时秒数
            int checkTimeoutSeconds 消息超时检查间隔秒数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateSortedDictionaryNode">
            <summary>
            [20] 创建排序字典节点 SortedDictionaryNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateSortedListNode">
            <summary>
            [21] 创建排序列表节点 SortedListNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateSortedSetNode">
            <summary>
            [22] 创建排序集合节点 SortedSetNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateStackNode">
            <summary>
            [23] 创建栈节点（后进先出） StackNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.RemoveNode">
            <summary>
            [24] 删除节点
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            返回值 bool 是否成功删除节点，否则表示没有找到节点
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateServerRegistryNode">
            <summary>
            [25] 创建服务注册节点 IServerRegistryNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int loadTimeoutSeconds 冷启动会话超时秒数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateProcessGuardNode">
            <summary>
            [26] 创建服务进程守护节点 IProcessGuardNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateManyHashBitMapClientFilterNode">
            <summary>
            [27] 多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int size 位图大小（位数量）
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateManyHashBitMapFilterNode">
            <summary>
            [28] 创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int size 位图大小（位数量）
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.RemoveNodeByKey">
            <summary>
            [29] 删除节点
            string key 节点全局关键字
            返回值 bool 是否成功删除节点，否则表示没有找到节点
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchDataSource.ITimeoutMessageServiceNodeMethodEnum.CreateSearchUserMessageNode">
            <summary>
            [256] 创建用户搜索数据更新消息节点 ITimeoutMessageNode{OperationData{int}}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int timeoutSeconds 触发任务执行超时秒数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchQueryService.IQueryService">
            <summary>
            搜索聚合查询服务接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchQueryService.IQueryService.GetUserPage(AutoCSer.TestCase.SearchQueryService.UserQueryParameter)">
            <summary>
            获取用户标识分页记录
            </summary>
            <param name="queryParameter">用户搜索查询参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchQueryService.SearchUserQueryParameter">
            <summary>
            用户搜索非索引条件数据查询参数
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchQueryService.SearchUserQueryParameter.Gender">
            <summary>
            查询性别
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchQueryService.SearchUserQueryParameter.Order">
            <summary>
            排序类型，默认为 用户标识降序
            </summary>
        </member>
        <member name="P:AutoCSer.TestCase.SearchQueryService.SearchUserQueryParameter.IsSearchCondition">
            <summary>
            是否存在非索引条件查询参数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchQueryService.SearchUserQueryParameter.SearchCondition(AutoCSer.TestCase.SearchDataSource.SearchUser)">
            <summary>
            非索引条件
            </summary>
            <param name="user">用户搜索非索引条件数据</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchQueryService.UserOrderEnum">
            <summary>
            用户数据排序类型
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchQueryService.UserOrderEnum.IdDesc">
            <summary>
            用户标识降序
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchQueryService.UserOrderEnum.LoginTimeDesc">
            <summary>
            最后登录时间降序
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchQueryService.UserQueryParameter">
            <summary>
            用户搜索查询参数
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchQueryService.UserQueryParameter.Name">
            <summary>
            搜索用户名称
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchQueryService.UserQueryParameter.Remark">
            <summary>
            搜索用户备注
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.SearchQueryService.IQueryServiceClientController">
            <summary>
            搜索聚合查询服务接口 客户端接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchQueryService.IQueryServiceClientController.GetUserPage(AutoCSer.TestCase.SearchQueryService.UserQueryParameter)">
            <summary>
            获取用户标识分页记录
            </summary>
            <param name="queryParameter">用户搜索查询参数</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNode">
            <summary>
            创建分词结果磁盘块索引信息节点的自定义基础服务接口
            </summary>
            <summary>
            创建分词结果磁盘块索引信息节点的自定义基础服务接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNode.CreateUserNameWordIdentityBlockIndexNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建用户名称分词结果磁盘块索引信息节点 IWordIdentityBlockIndex
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNode.CreateUserRemarkWordIdentityBlockIndexNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建用户备注分词结果磁盘块索引信息节点 IWordIdentityBlockIndex
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNode.CreateSearchUserNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建非索引条件查询数据节点 ISearchUserNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeClientNode">
            <summary>
            创建分词结果磁盘块索引信息节点的自定义基础服务接口 客户端节点接口
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeClientNode.CreateUserNameWordIdentityBlockIndexNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建用户名称分词结果磁盘块索引信息节点 IWordIdentityBlockIndex
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeClientNode.CreateUserRemarkWordIdentityBlockIndexNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建用户备注分词结果磁盘块索引信息节点 IWordIdentityBlockIndex
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeClientNode.CreateSearchUserNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex,System.String,AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo)">
            <summary>
            创建非索引条件查询数据节点 ISearchUserNode
            </summary>
            <param name="index">节点索引信息</param>
            <param name="key">节点全局关键字</param>
            <param name="nodeInfo">节点信息</param>
            <returns>节点标识，已经存在节点则直接返回</returns>
        </member>
        <member name="T:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum">
            <summary>
            创建分词结果磁盘块索引信息节点的自定义基础服务接口 节点方法序号映射枚举类型
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateArrayNode">
            <summary>
            [0] 创建数组节点 ArrayNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int length 数组长度
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateBitmapNode">
            <summary>
            [1] 创建位图节点 BitmapNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            uint capacity 二进制位数量
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateByteArrayDictionaryNode">
            <summary>
            [2] 创建字典节点 ByteArrayDictionaryNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateByteArrayFragmentDictionaryNode">
            <summary>
            [3] 创建字典节点 ByteArrayFragmentDictionaryNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateByteArrayQueueNode">
            <summary>
            [4] 创建队列节点（先进先出） ByteArrayQueueNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateByteArrayStackNode">
            <summary>
            [5] 创建栈节点（后进先出） ByteArrayStackNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateDictionaryNode">
            <summary>
            [6] 创建字典节点 DictionaryNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateDistributedLockNode">
            <summary>
            [7] 创建分布式锁节点 DistributedLockNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateFragmentDictionaryNode">
            <summary>
            [8] 创建字典节点 FragmentDictionaryNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateFragmentHashSetNode">
            <summary>
            [9] 创建 256 基分片哈希表节点 FragmentHashSetNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateHashBytesDictionaryNode">
            <summary>
            [10] 创建字典节点 HashBytesDictionaryNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateHashBytesFragmentDictionaryNode">
            <summary>
            [11] 创建字典节点 HashBytesFragmentDictionaryNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateHashSetNode">
            <summary>
            [12] 创建哈希表节点 HashSetNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateIdentityGeneratorNode">
            <summary>
            [13] 创建 64 位自增ID 节点 IdentityGeneratorNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            long identity 起始分配 ID
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateLeftArrayNode">
            <summary>
            [14] 创建数组节点 LeftArrayNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateMessageNode">
            <summary>
            [15] 创建消息处理节点 MessageNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType messageType 消息数据类型
            int arraySize 正在处理消息数组大小
            int timeoutSeconds 消息处理超时秒数
            int checkTimeoutSeconds 消息超时检查间隔秒数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateQueueNode">
            <summary>
            [16] 创建队列节点（先进先出） QueueNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateSearchTreeDictionaryNode">
            <summary>
            [17] 创建二叉搜索树节点 SearchTreeDictionaryNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateSearchTreeSetNode">
            <summary>
            [18] 创建二叉搜索树集合节点 SearchTreeSetNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateServerByteArrayMessageNode">
            <summary>
            [19] 创建消息处理节点 MessageNode{ServerByteArrayMessage}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int arraySize 正在处理消息数组大小
            int timeoutSeconds 消息处理超时秒数
            int checkTimeoutSeconds 消息超时检查间隔秒数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateSortedDictionaryNode">
            <summary>
            [20] 创建排序字典节点 SortedDictionaryNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateSortedListNode">
            <summary>
            [21] 创建排序列表节点 SortedListNode{KT,VT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            AutoCSer.Reflection.RemoteType valueType 数据类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateSortedSetNode">
            <summary>
            [22] 创建排序集合节点 SortedSetNode{KT}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateStackNode">
            <summary>
            [23] 创建栈节点（后进先出） StackNode{T}
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            AutoCSer.Reflection.RemoteType keyType 关键字类型
            int capacity 容器初始化大小
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.RemoveNode">
            <summary>
            [24] 删除节点
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            返回值 bool 是否成功删除节点，否则表示没有找到节点
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateServerRegistryNode">
            <summary>
            [25] 创建服务注册节点 IServerRegistryNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int loadTimeoutSeconds 冷启动会话超时秒数
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateProcessGuardNode">
            <summary>
            [26] 创建服务进程守护节点 IProcessGuardNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateManyHashBitMapClientFilterNode">
            <summary>
            [27] 多哈希位图客户端同步过滤节点 IManyHashBitMapClientFilterNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int size 位图大小（位数量）
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateManyHashBitMapFilterNode">
            <summary>
            [28] 创建多哈希位图过滤节点 IManyHashBitMapFilterNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            int size 位图大小（位数量）
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.RemoveNodeByKey">
            <summary>
            [29] 删除节点
            string key 节点全局关键字
            返回值 bool 是否成功删除节点，否则表示没有找到节点
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateUserNameWordIdentityBlockIndexNode">
            <summary>
            [256] 创建用户名称分词结果磁盘块索引信息节点 IWordIdentityBlockIndex
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateUserRemarkWordIdentityBlockIndexNode">
            <summary>
            [257] 创建用户备注分词结果磁盘块索引信息节点 IWordIdentityBlockIndex
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.SearchWordIdentityBlockIndex.IServiceNodeMethodEnum.CreateSearchUserNode">
            <summary>
            [258] 创建非索引条件查询数据节点 ISearchUserNode
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex index 节点索引信息
            string key 节点全局关键字
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeInfo nodeInfo 节点信息
            返回值 AutoCSer.CommandService.StreamPersistenceMemoryDatabase.NodeIndex 节点标识，已经存在节点则直接返回
            </summary>
        </member>
    </members>
</doc>
