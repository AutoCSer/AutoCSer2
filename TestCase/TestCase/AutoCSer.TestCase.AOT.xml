<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.TestCase.AOT</name>
    </assembly>
    <members>
        <member name="F:AutoCSer.TestCase.BinarySerialize.serializeConfig">
            <summary>
            带成员位图的二进制序列化参数配置
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.BinarySerialize.randomConfig">
            <summary>
            随机对象生成参数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.BinarySerialize.TestCase">
            <summary>
            二进制序列化测试
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.TestCase.Data.Field">
            <summary>
            字段数据定义(引用类型外壳)
            </summary>
            <summary>
            字段数据定义(引用类型外壳)
            </summary>
            <summary>
            字段数据定义(引用类型外壳)
            </summary>
            <summary>
            字段数据定义(引用类型外壳)
            </summary>
            <summary>
            字段数据定义(引用类型外壳)
            </summary>
            <summary>
            字段数据定义(引用类型外壳)
            </summary>
            <summary>
            字段数据定义(引用类型外壳)
            </summary>
            <summary>
            字段数据定义(引用类型外壳)
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.Field)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.Field@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.BinarySerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field},AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.Field)">
            <summary>
            二进制序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.binarySerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field},AutoCSer.BinarySerializer,System.Int32)">
            <summary>
            二进制序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__startIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.BinaryDeserializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field},AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.Field@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="memberMap"></param>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.binaryDeserialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field},AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.BinarySerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.BinarySerializeMemberCountVerify">
            <summary>
            获取二进制序列化成员数量信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.BinarySerialize">
            <summary>
            二进制序列化触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.FieldEquals(AutoCSer.TestCase.Data.Field,AutoCSer.TestCase.Data.Field)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.fieldEquals(AutoCSer.TestCase.Data.Field)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.MemberMapFieldEquals(AutoCSer.TestCase.Data.Field,AutoCSer.TestCase.Data.Field,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.fieldEquals(AutoCSer.TestCase.Data.Field,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.Field)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.Field,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Field@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Field@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Field@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.MemberCopy(AutoCSer.TestCase.Data.Field@,AutoCSer.TestCase.Data.Field)">
            <summary>
            成员复制
            </summary>
            <param name="writeValue"></param>
            <param name="readValue"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.memberCopyFrom(AutoCSer.TestCase.Data.Field)">
            <summary>
            成员复制
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.MemberMapCopy(AutoCSer.TestCase.Data.Field@,AutoCSer.TestCase.Data.Field,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field})">
            <summary>
            成员复制
            </summary>
            <param name="writeValue"></param>
            <param name="readValue"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.memberCopyFrom(AutoCSer.TestCase.Data.Field,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field})">
            <summary>
            成员复制
            </summary>
            <param name="readValue"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.MemberCopy">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.CreateRandomObject(AutoCSer.TestCase.Data.Field@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.XmlSerialize(AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.Field)">
            <summary>
            XML 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.XmlSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field},AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.Field,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.xmlSerialize(AutoCSer.XmlSerializer)">
            <summary>
            XML 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.xmlSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Field},AutoCSer.XmlSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.XmlDeserialize(AutoCSer.XmlDeserializer,AutoCSer.TestCase.Data.Field@,System.Int32)">
            <summary>
            成员 XML 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.XmlDeserializeMemberNames">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.xmlDeserializeMemberName">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.XmlSerializeMemberTypes">
            <summary>
            获取 Xml 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Field.XmlSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.Float">
            <summary>
            浮点数测试
            </summary>
            <summary>
            浮点数测试
            </summary>
            <summary>
            浮点数测试
            </summary>
            <summary>
            浮点数测试
            </summary>
            <summary>
            浮点数测试
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.FieldEquals(AutoCSer.TestCase.Data.Float,AutoCSer.TestCase.Data.Float)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.fieldEquals(AutoCSer.TestCase.Data.Float)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.MemberMapFieldEquals(AutoCSer.TestCase.Data.Float,AutoCSer.TestCase.Data.Float,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Float})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.fieldEquals(AutoCSer.TestCase.Data.Float,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Float})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.Float)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Float},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.Float,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Float},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Float@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Float@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Float})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Float})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Float@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.XmlSerialize(AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.Float)">
            <summary>
            XML 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.XmlSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Float},AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.Float,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.xmlSerialize(AutoCSer.XmlSerializer)">
            <summary>
            XML 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.xmlSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Float},AutoCSer.XmlSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.XmlDeserialize(AutoCSer.XmlDeserializer,AutoCSer.TestCase.Data.Float@,System.Int32)">
            <summary>
            成员 XML 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.XmlDeserializeMemberNames">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.xmlDeserializeMemberName">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.XmlSerializeMemberTypes">
            <summary>
            获取 Xml 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Float.XmlSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.InheritProperty">
            <summary>
            继承属性数据定义(引用类型外壳)
            </summary>
            <summary>
            继承属性数据定义(引用类型外壳)
            </summary>
            <summary>
            继承属性数据定义(引用类型外壳)
            </summary>
            <summary>
            继承属性数据定义(引用类型外壳)
            </summary>
            <summary>
            继承属性数据定义(引用类型外壳)
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.InheritProperty)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.InheritProperty@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.BinarySerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.InheritProperty},AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.InheritProperty)">
            <summary>
            二进制序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.binarySerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.InheritProperty},AutoCSer.BinarySerializer,System.Int32)">
            <summary>
            二进制序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__startIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.BinaryDeserializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.InheritProperty},AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.InheritProperty@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="memberMap"></param>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.binaryDeserialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.InheritProperty},AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.BinarySerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.BinarySerializeMemberCountVerify">
            <summary>
            获取二进制序列化成员数量信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.BinarySerialize">
            <summary>
            二进制序列化触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.FieldEquals(AutoCSer.TestCase.Data.InheritProperty,AutoCSer.TestCase.Data.InheritProperty)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.fieldEquals(AutoCSer.TestCase.Data.InheritProperty)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.MemberMapFieldEquals(AutoCSer.TestCase.Data.InheritProperty,AutoCSer.TestCase.Data.InheritProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.InheritProperty})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.fieldEquals(AutoCSer.TestCase.Data.InheritProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.InheritProperty})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.CreateRandomObject(AutoCSer.TestCase.Data.InheritProperty@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.InheritProperty.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.JsonEmpty">
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.FieldEquals(AutoCSer.TestCase.Data.JsonEmpty,AutoCSer.TestCase.Data.JsonEmpty)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.fieldEquals(AutoCSer.TestCase.Data.JsonEmpty)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.MemberMapFieldEquals(AutoCSer.TestCase.Data.JsonEmpty,AutoCSer.TestCase.Data.JsonEmpty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonEmpty})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.fieldEquals(AutoCSer.TestCase.Data.JsonEmpty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonEmpty})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonEmpty)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonEmpty},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonEmpty,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonEmpty@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonEmpty@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonEmpty})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonEmpty@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonEmpty.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.JsonField">
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.FieldEquals(AutoCSer.TestCase.Data.JsonField,AutoCSer.TestCase.Data.JsonField)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.fieldEquals(AutoCSer.TestCase.Data.JsonField)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.MemberMapFieldEquals(AutoCSer.TestCase.Data.JsonField,AutoCSer.TestCase.Data.JsonField,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonField})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.fieldEquals(AutoCSer.TestCase.Data.JsonField,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonField})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonField)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonField},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonField,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonField},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonField@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonField@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonField})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonField})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonField@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.CreateRandomObject(AutoCSer.TestCase.Data.JsonField@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonField.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.JsonProperty">
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.FieldEquals(AutoCSer.TestCase.Data.JsonProperty,AutoCSer.TestCase.Data.JsonProperty)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.fieldEquals(AutoCSer.TestCase.Data.JsonProperty)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.MemberMapFieldEquals(AutoCSer.TestCase.Data.JsonProperty,AutoCSer.TestCase.Data.JsonProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonProperty})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.fieldEquals(AutoCSer.TestCase.Data.JsonProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonProperty})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonProperty)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonProperty},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonProperty,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonProperty},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonProperty@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonProperty@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonProperty})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonProperty})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonProperty@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.MemberCopy(AutoCSer.TestCase.Data.JsonProperty@,AutoCSer.TestCase.Data.JsonProperty)">
            <summary>
            成员复制
            </summary>
            <param name="writeValue"></param>
            <param name="readValue"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.memberCopyFrom(AutoCSer.TestCase.Data.JsonProperty)">
            <summary>
            成员复制
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.MemberMapCopy(AutoCSer.TestCase.Data.JsonProperty@,AutoCSer.TestCase.Data.JsonProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonProperty})">
            <summary>
            成员复制
            </summary>
            <param name="writeValue"></param>
            <param name="readValue"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.memberCopyFrom(AutoCSer.TestCase.Data.JsonProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonProperty})">
            <summary>
            成员复制
            </summary>
            <param name="readValue"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.MemberCopy">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.CreateRandomObject(AutoCSer.TestCase.Data.JsonProperty@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonProperty.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.MemberClass">
            <summary>
            引用类型定义
            </summary>
            <summary>
            引用类型定义
            </summary>
            <summary>
            引用类型定义
            </summary>
            <summary>
            引用类型定义
            </summary>
            <summary>
            引用类型定义
            </summary>
            <summary>
            引用类型定义
            </summary>
            <summary>
            引用类型定义
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.MemberClass)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.MemberClass@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.BinarySerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass},AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.MemberClass)">
            <summary>
            二进制序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.binarySerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass},AutoCSer.BinarySerializer,System.Int32)">
            <summary>
            二进制序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__startIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.BinaryDeserializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass},AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.MemberClass@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="memberMap"></param>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.binaryDeserialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass},AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.BinarySerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.BinarySerializeMemberCountVerify">
            <summary>
            获取二进制序列化成员数量信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.BinarySerialize">
            <summary>
            二进制序列化触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.FieldEquals(AutoCSer.TestCase.Data.MemberClass,AutoCSer.TestCase.Data.MemberClass)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.fieldEquals(AutoCSer.TestCase.Data.MemberClass)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.MemberMapFieldEquals(AutoCSer.TestCase.Data.MemberClass,AutoCSer.TestCase.Data.MemberClass,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.fieldEquals(AutoCSer.TestCase.Data.MemberClass,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.MemberClass)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.MemberClass,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.MemberClass@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.MemberClass@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.MemberClass@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.CreateRandomObject(AutoCSer.TestCase.Data.MemberClass@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.XmlSerialize(AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.MemberClass)">
            <summary>
            XML 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.XmlSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass},AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.MemberClass,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.xmlSerialize(AutoCSer.XmlSerializer)">
            <summary>
            XML 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.xmlSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.MemberClass},AutoCSer.XmlSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.XmlDeserialize(AutoCSer.XmlDeserializer,AutoCSer.TestCase.Data.MemberClass@,System.Int32)">
            <summary>
            成员 XML 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.XmlDeserializeMemberNames">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.xmlDeserializeMemberName">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.XmlSerializeMemberTypes">
            <summary>
            获取 Xml 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.MemberClass.XmlSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.NoMemberClass">
            <summary>
            空壳类型定义
            </summary>
            <summary>
            空壳类型定义
            </summary>
            <summary>
            空壳类型定义
            </summary>
            <summary>
            空壳类型定义
            </summary>
            <summary>
            空壳类型定义
            </summary>
            <summary>
            空壳类型定义
            </summary>
            <summary>
            空壳类型定义
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.NoMemberClass)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.NoMemberClass@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.BinarySerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass},AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.NoMemberClass)">
            <summary>
            二进制序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.binarySerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass},AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__startIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.BinaryDeserializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass},AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.NoMemberClass@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="memberMap"></param>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.binaryDeserialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass},AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.BinarySerializeMemberCountVerify">
            <summary>
            获取二进制序列化成员数量信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.BinarySerialize">
            <summary>
            二进制序列化触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.FieldEquals(AutoCSer.TestCase.Data.NoMemberClass,AutoCSer.TestCase.Data.NoMemberClass)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.fieldEquals(AutoCSer.TestCase.Data.NoMemberClass)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.MemberMapFieldEquals(AutoCSer.TestCase.Data.NoMemberClass,AutoCSer.TestCase.Data.NoMemberClass,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.fieldEquals(AutoCSer.TestCase.Data.NoMemberClass,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.NoMemberClass)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.NoMemberClass,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.NoMemberClass@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.NoMemberClass@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.NoMemberClass@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.CreateRandomObject(AutoCSer.TestCase.Data.NoMemberClass@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.XmlSerialize(AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.NoMemberClass)">
            <summary>
            XML 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.XmlSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.NoMemberClass},AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.NoMemberClass,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.XmlDeserialize(AutoCSer.XmlDeserializer,AutoCSer.TestCase.Data.NoMemberClass@,System.Int32)">
            <summary>
            成员 XML 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.XmlDeserializeMemberNames">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.NoMemberClass.XmlSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.ORM.BusinessModel">
            <summary>
            ORM 业务模型定义
            </summary>
            <summary>
            ORM 业务模型定义
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.BusinessModel.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.BusinessModel.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.ORM.BusinessModelAssociated">
            <summary>
            ORM 业务模型定义
            </summary>
            <summary>
            ORM 业务模型定义
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.BusinessModelAssociated.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.BusinessModelAssociated.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.ORM.CommonModel">
            <summary>
            ORM 基本数据模型定义
            </summary>
            <summary>
            ORM 基本数据模型定义
            </summary>
            <summary>
            ORM 基本数据模型定义
            </summary>
            <summary>
            ORM 基本数据模型定义
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.FieldEquals(AutoCSer.TestCase.Data.ORM.CommonModel,AutoCSer.TestCase.Data.ORM.CommonModel)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.fieldEquals(AutoCSer.TestCase.Data.ORM.CommonModel)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.MemberMapFieldEquals(AutoCSer.TestCase.Data.ORM.CommonModel,AutoCSer.TestCase.Data.ORM.CommonModel,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.ORM.CommonModel})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.fieldEquals(AutoCSer.TestCase.Data.ORM.CommonModel,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.ORM.CommonModel})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.CreateRandomObject(AutoCSer.TestCase.Data.ORM.CommonModel@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.CommonModel.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.ORM.ModelAssociated">
            <summary>
            ORM 基本数据模型定义
            </summary>
            <summary>
            ORM 基本数据模型定义
            </summary>
            <summary>
            ORM 基本数据模型定义
            </summary>
            <summary>
            ORM 基本数据模型定义
            </summary>
            <summary>
            ORM 基本数据模型定义
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.ORM.ModelAssociated)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.ORM.ModelAssociated@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.BinarySerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.ORM.ModelAssociated},AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.ORM.ModelAssociated)">
            <summary>
            二进制序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.binarySerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.ORM.ModelAssociated},AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__startIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.BinaryDeserializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.ORM.ModelAssociated},AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.ORM.ModelAssociated@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="memberMap"></param>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.binaryDeserialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.ORM.ModelAssociated},AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.BinarySerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.BinarySerializeMemberCountVerify">
            <summary>
            获取二进制序列化成员数量信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.BinarySerialize">
            <summary>
            二进制序列化触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.FieldEquals(AutoCSer.TestCase.Data.ORM.ModelAssociated,AutoCSer.TestCase.Data.ORM.ModelAssociated)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.fieldEquals(AutoCSer.TestCase.Data.ORM.ModelAssociated)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.MemberMapFieldEquals(AutoCSer.TestCase.Data.ORM.ModelAssociated,AutoCSer.TestCase.Data.ORM.ModelAssociated,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.ORM.ModelAssociated})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.fieldEquals(AutoCSer.TestCase.Data.ORM.ModelAssociated,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.ORM.ModelAssociated})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.CreateRandomObject(AutoCSer.TestCase.Data.ORM.ModelAssociated@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelAssociated.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.ORM.ModelGeneric`1">
            <summary>
            ORM 关联模型定义
            </summary>
            <typeparam name="T"></typeparam>
            <summary>
            ORM 关联模型定义
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelGeneric`1.CreateRandomObject(AutoCSer.TestCase.Data.ORM.ModelGeneric{`0}@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelGeneric`1.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelGeneric`1.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.ORM.ModelGeneric">
            <summary>
            ORM 关联模型定义
            </summary>
            <summary>
            ORM 关联模型定义
            </summary>
            <summary>
            ORM 关联模型定义
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelGeneric.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelGeneric.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelGeneric.CreateRandomObject(AutoCSer.TestCase.Data.ORM.ModelGeneric@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelGeneric.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.ORM.ModelGeneric.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.Property">
            <summary>
            属性数据定义(引用类型外壳)
            </summary>
            <summary>
            属性数据定义(引用类型外壳)
            </summary>
            <summary>
            属性数据定义(引用类型外壳)
            </summary>
            <summary>
            属性数据定义(引用类型外壳)
            </summary>
            <summary>
            属性数据定义(引用类型外壳)
            </summary>
            <summary>
            属性数据定义(引用类型外壳)
            </summary>
            <summary>
            属性数据定义(引用类型外壳)
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.Property)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.Property@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.BinarySerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property},AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.Property)">
            <summary>
            二进制序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.binarySerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property},AutoCSer.BinarySerializer,System.Int32)">
            <summary>
            二进制序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__startIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.BinaryDeserializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property},AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.Property@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="memberMap"></param>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.binaryDeserialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property},AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.BinarySerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.BinarySerializeMemberCountVerify">
            <summary>
            获取二进制序列化成员数量信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.BinarySerialize">
            <summary>
            二进制序列化触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.DefaultConstructor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.DefaultConstructorReflection">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.FieldEquals(AutoCSer.TestCase.Data.Property,AutoCSer.TestCase.Data.Property)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.fieldEquals(AutoCSer.TestCase.Data.Property)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.MemberMapFieldEquals(AutoCSer.TestCase.Data.Property,AutoCSer.TestCase.Data.Property,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.fieldEquals(AutoCSer.TestCase.Data.Property,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.Property)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.Property,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Property@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Property@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.Property@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.CreateRandomObject(AutoCSer.TestCase.Data.Property@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.XmlSerialize(AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.Property)">
            <summary>
            XML 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.XmlSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property},AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.Property,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.xmlSerialize(AutoCSer.XmlSerializer)">
            <summary>
            XML 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.xmlSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.Property},AutoCSer.XmlSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.XmlDeserialize(AutoCSer.XmlDeserializer,AutoCSer.TestCase.Data.Property@,System.Int32)">
            <summary>
            成员 XML 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.XmlDeserializeMemberNames">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.xmlDeserializeMemberName">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.XmlSerializeMemberTypes">
            <summary>
            获取 Xml 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.Property.XmlSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.JsonStructField">
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.FieldEquals(AutoCSer.TestCase.Data.JsonStructField,AutoCSer.TestCase.Data.JsonStructField)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.fieldEquals(AutoCSer.TestCase.Data.JsonStructField)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.MemberMapFieldEquals(AutoCSer.TestCase.Data.JsonStructField,AutoCSer.TestCase.Data.JsonStructField,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructField})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.fieldEquals(AutoCSer.TestCase.Data.JsonStructField,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructField})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonStructField)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructField},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonStructField,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructField},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonStructField@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonStructField@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructField})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructField})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonStructField@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.CreateRandomObject(AutoCSer.TestCase.Data.JsonStructField@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructField.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.StructField">
            <summary>
            字段数据定义(值类型外壳)
            </summary>
            <summary>
            字段数据定义(值类型外壳)
            </summary>
            <summary>
            字段数据定义(值类型外壳)
            </summary>
            <summary>
            字段数据定义(值类型外壳)
            </summary>
            <summary>
            字段数据定义(值类型外壳)
            </summary>
            <summary>
            字段数据定义(值类型外壳)
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.BinarySerialize(AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.StructField)">
            <summary>
            二进制序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.binarySerialize(AutoCSer.BinarySerializer)">
            <summary>
            二进制序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.BinaryDeserialize(AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.StructField@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.binaryDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.binaryFieldDeserialize(AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.BinarySerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField},AutoCSer.BinarySerializer,AutoCSer.TestCase.Data.StructField)">
            <summary>
            二进制序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.binarySerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField},AutoCSer.BinarySerializer,System.Int32)">
            <summary>
            二进制序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__startIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.BinaryDeserializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField},AutoCSer.BinaryDeserializer,AutoCSer.TestCase.Data.StructField@)">
            <summary>
            二进制反序列化
            </summary>
            <param name="memberMap"></param>
            <param name="deserializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.binaryDeserialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField},AutoCSer.BinaryDeserializer)">
            <summary>
            二进制反序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__deserializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.BinarySerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.BinarySerializeMemberCountVerify">
            <summary>
            获取二进制序列化成员数量信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.BinarySerialize">
            <summary>
            二进制序列化触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.FieldEquals(AutoCSer.TestCase.Data.StructField,AutoCSer.TestCase.Data.StructField)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.fieldEquals(AutoCSer.TestCase.Data.StructField)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.MemberMapFieldEquals(AutoCSer.TestCase.Data.StructField,AutoCSer.TestCase.Data.StructField,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.fieldEquals(AutoCSer.TestCase.Data.StructField,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.StructField)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.StructField,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.StructField@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.StructField@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.StructField@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.CreateRandomObject(AutoCSer.TestCase.Data.StructField@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.XmlSerialize(AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.StructField)">
            <summary>
            XML 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.XmlSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField},AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.StructField,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.xmlSerialize(AutoCSer.XmlSerializer)">
            <summary>
            XML 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.xmlSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructField},AutoCSer.XmlSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.XmlDeserialize(AutoCSer.XmlDeserializer,AutoCSer.TestCase.Data.StructField@,System.Int32)">
            <summary>
            成员 XML 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.XmlDeserializeMemberNames">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.xmlDeserializeMemberName">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.XmlSerializeMemberTypes">
            <summary>
            获取 Xml 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructField.XmlSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.JsonStructProperty">
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
            <summary>
            二进制混杂 JSON 序列化
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.FieldEquals(AutoCSer.TestCase.Data.JsonStructProperty,AutoCSer.TestCase.Data.JsonStructProperty)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.fieldEquals(AutoCSer.TestCase.Data.JsonStructProperty)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.MemberMapFieldEquals(AutoCSer.TestCase.Data.JsonStructProperty,AutoCSer.TestCase.Data.JsonStructProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructProperty})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.fieldEquals(AutoCSer.TestCase.Data.JsonStructProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructProperty})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonStructProperty)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructProperty},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.JsonStructProperty,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructProperty},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonStructProperty@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonStructProperty@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructProperty})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.JsonStructProperty})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.JsonStructProperty@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.CreateRandomObject(AutoCSer.TestCase.Data.JsonStructProperty@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.JsonStructProperty.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="T:AutoCSer.TestCase.Data.StructProperty">
            <summary>
            属性数据定义(值类型外壳)
            </summary>
            <summary>
            属性数据定义(值类型外壳)
            </summary>
            <summary>
            属性数据定义(值类型外壳)
            </summary>
            <summary>
            属性数据定义(值类型外壳)
            </summary>
            <summary>
            属性数据定义(值类型外壳)
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.FieldEquals(AutoCSer.TestCase.Data.StructProperty,AutoCSer.TestCase.Data.StructProperty)">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.fieldEquals(AutoCSer.TestCase.Data.StructProperty)">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.MemberMapFieldEquals(AutoCSer.TestCase.Data.StructProperty,AutoCSer.TestCase.Data.StructProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructProperty})">
            <summary>
            对象对比
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="memberMap"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.fieldEquals(AutoCSer.TestCase.Data.StructProperty,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructProperty})">
            <summary>
            随机对象生成
            </summary>
            <param name="__value__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.FieldEquals">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.JsonSerialize(AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.StructProperty)">
            <summary>
            JSON 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.JsonSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructProperty},AutoCSer.JsonSerializer,AutoCSer.TestCase.Data.StructProperty,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.jsonSerialize(AutoCSer.JsonSerializer)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.jsonSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructProperty},AutoCSer.JsonSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            JSON 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.StructProperty@,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.JsonDeserializeMemberMap(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.StructProperty@,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructProperty})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="deserializer"></param>
            <param name="value"></param>
            <param name="names"></param>
            <param name="memberMap"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@)">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.jsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.Memory.Pointer@,AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructProperty})">
            <summary>
            JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__names__"></param>
            <param name="__memberMap__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.JsonDeserialize(AutoCSer.JsonDeserializer,AutoCSer.TestCase.Data.StructProperty@,System.Int32)">
            <summary>
            成员 JSON 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.JsonDeserializeMemberNames">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.jsonDeserializeMemberName">
            <summary>
            获取 JSON 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.JsonSerializeMemberTypes">
            <summary>
            获取 JSON 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.JsonSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.CreateRandomObject(AutoCSer.TestCase.Data.StructProperty@,AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.createRandomObject(AutoCSer.RandomObject.Config)">
            <summary>
            随机对象生成
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.CreateRandomObject">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.XmlSerialize(AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.StructProperty)">
            <summary>
            XML 序列化
            </summary>
            <param name="serializer"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.XmlSerializeMemberMap(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructProperty},AutoCSer.XmlSerializer,AutoCSer.TestCase.Data.StructProperty,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="memberMap"></param>
            <param name="serializer"></param>
            <param name="value"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.xmlSerialize(AutoCSer.XmlSerializer)">
            <summary>
            XML 序列化
            </summary>
            <param name="__serializer__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.xmlSerialize(AutoCSer.Metadata.MemberMap{AutoCSer.TestCase.Data.StructProperty},AutoCSer.XmlSerializer,AutoCSer.Memory.CharStream)">
            <summary>
            XML 序列化
            </summary>
            <param name="__memberMap__"></param>
            <param name="__serializer__"></param>
            <param name="__stream__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.XmlDeserialize(AutoCSer.XmlDeserializer,AutoCSer.TestCase.Data.StructProperty@,System.Int32)">
            <summary>
            成员 XML 反序列化
            </summary>
            <param name="__deserializer__"></param>
            <param name="__value__"></param>
            <param name="__memberIndex__"></param>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.XmlDeserializeMemberNames">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.xmlDeserializeMemberName">
            <summary>
            获取 XML 反序列化成员名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.XmlSerializeMemberTypes">
            <summary>
            获取 Xml 序列化成员类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.Data.StructProperty.XmlSerialize">
            <summary>
            代码生成调用激活 AOT 反射
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.ReusableDictionary.TestCase">
            <summary>
            可重用字典测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.SearchTree.TestCase">
            <summary>
            二叉搜索树测试
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.TestCase.SearchTree.data">
            <summary>
            测试数据
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.Json.randomConfig">
            <summary>
            随机对象生成参数
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.Json.jsonSerializeConfig">
            <summary>
            带成员位图的JSON序列化参数配置
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.Json.javascriptDateTimeSerializeConfig">
            <summary>
            JavaScript 时间值JSON序列化参数配置
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.Json.thirdPartyDateTimeSerializeConfig">
            <summary>
            第三方时间值JSON序列化参数配置
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.Json.customDateTimeSerializeConfig">
            <summary>
            自定义格式时间值JSON序列化参数配置
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Json.TestCase">
            <summary>
            JSON 序列化测试
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.TestCase.Xml.xmlSerializeConfig">
            <summary>
            带成员位图的XML序列化参数配置
            </summary>
        </member>
        <member name="F:AutoCSer.TestCase.Xml.randomConfig">
            <summary>
            随机对象生成参数
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.Xml.TestCase">
            <summary>
            XML 序列化测试
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.TestCase.AOT.NET8.AotMethod">
            <summary>
            触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.AOT.NET8.AotMethod.Call">
            <summary>
            触发 AOT 编译
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.TestCase.AOT.NET8.AotMethod.binaryDeserializeMemberTypes">
            <summary>
            二进制反序列化成员类型触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.AOT.NET8.AotMethod.jsonDeserializeMemberTypes">
            <summary>
            JSON 反序列化成员类型触发 AOT 编译
            </summary>
        </member>
        <member name="M:AutoCSer.TestCase.AOT.NET8.AotMethod.xmlDeserializeMemberTypes">
            <summary>
            XML 反序列化成员类型触发 AOT 编译
            </summary>
        </member>
    </members>
</doc>
