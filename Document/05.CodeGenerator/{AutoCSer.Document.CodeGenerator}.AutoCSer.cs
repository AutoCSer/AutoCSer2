//This file is automatically generated by a program. Please do not modify it by yourself.
//本文件由程序自动生成，请不要自行修改
using System;
using System.Numerics;
using AutoCSer;

#if NoAutoCSer
#else
#pragma warning disable
namespace AutoCSer.Document.NativeAOT.Service
{
        /// <summary>
        /// An example of generate the API definition of the client controller interface 
///            生成客户端控制器接口 API 定义示例 client interface
        /// </summary>
        public partial interface IServiceControllerClientController
        {
            /// <summary>
            /// One-time response API example 
///            一次性响应 API 示例
            /// </summary>
            /// <param name="left"></param>
            /// <param name="right"></param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> OneTimeResponse(int left, int right);
            /// <summary>
            /// Two-stage response API example 
///            二阶段响应 API 示例
            /// </summary>
            /// <param name="callback">For the callback wrapper in the first stage, the type of the penultimate parameter must be AutoCSer.Net.CommandServerCallback{T} 
///            第一阶段的回调委托包装，倒数第二个参数类型必须是 AutoCSer.Net.CommandServerCallback{T}</param>
            /// <param name="keepCallback">For the callback delegate wrapper of the second stage of continuous response, the last parameter type must be AutoCSer.Net.CommandServerKeepCallback{T} or AutoCSer.Net.CommandServerKeepCallbackCount{T} 
///            第二阶段持续响应的回调委托包装，最后一个参数类型必须是 AutoCSer.Net.CommandServerKeepCallback{T} 或者 AutoCSer.Net.CommandServerKeepCallbackCount{T}</param>
            /// <returns></returns>
            AutoCSer.Net.KeepCallbackCommand TwoStageResponse(Action<AutoCSer.Net.CommandClientReturnValue<string>> callback, Action<AutoCSer.Net.CommandClientReturnValue<int>, AutoCSer.Net.KeepCallbackCommand> keepCallback);
        }
}namespace AutoCSer.Document.NativeAOT.Service
{
        /// <summary>
        /// Command client socket events 
///            命令客户端套接字事件
        /// </summary>
    internal partial class CommandClientSocketEvent
    {
        /// <summary>
        /// Client interface example 
///            客户端接口示例 (Direct return value API encapsulation)
        /// </summary>
        public sealed class ServiceControllerClientControllerReturnValueController : AutoCSer.Net.CommandServer.ClientReturnValueController<AutoCSer.Document.NativeAOT.Service.CommandClientSocketEvent>
        {
            /// <summary>
            /// Client interface example 
///            客户端接口示例 (Direct return value API encapsulation)
            /// </summary>
            /// <param name="client">Command client socket event</param>
            /// <param name="isIgnoreError">A default value of false indicates that exceptions and error messages are not ignored</param>
            public ServiceControllerClientControllerReturnValueController(AutoCSer.Document.NativeAOT.Service.CommandClientSocketEvent client, bool isIgnoreError = false) : base(client, isIgnoreError) { }
            /// <summary>
            /// One-time response API example  
///                       一次性响应 API 示例
            /// </summary>
            /// <param name="left"></param>
            /// <param name="right"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.CommandServer.CommandReturnValue<int> OneTimeResponse(int left, int right)
            {
                
                return base.client.ServiceControllerClientController/**/.OneTimeResponse(left, right).GetValue(base.isIgnoreError);
            }
            /// <summary>
            /// Two-stage response API example  
///                       二阶段响应 API 示例
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.KeepCallbackCommand TwoStageResponse(System.Action<string> callback, System.Action<int> keepCallback)
            {
                return base.client.ServiceControllerClientController/**/.TwoStageResponse(new AutoCSer.Net.CommandServer.ClientReturnValueCallback<string>(callback), new AutoCSer.Net.CommandServer.ClientReturnValueCallback<int>(keepCallback));
            }
            /// <summary>
            /// Two-stage response API example  
///                       二阶段响应 API 示例
            /// </summary>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.Net.KeepCallbackCommand TwoStageResponse(System.Action<string> callback, Action<AutoCSer.Net.CommandClientReturnValue> error_callback, System.Action<int> keepCallback, Action<AutoCSer.Net.CommandClientReturnValue> error_keepCallback)
            {
                return base.client.ServiceControllerClientController/**/.TwoStageResponse(new AutoCSer.Net.CommandServer.ClientReturnValueCallback<string>(callback, error_callback), new AutoCSer.Net.CommandServer.ClientReturnValueCallback<int>(keepCallback, error_keepCallback));
            }
        }
        /// <summary>
        /// Get the direct return value API encapsulation (ServiceControllerClientController)
        /// </summary>
        /// <param name="isIgnoreError">A default value of false indicates that exceptions and error messages are not ignored</param>
        /// <returns>Client interface example 
///            客户端接口示例 (Direct return value API encapsulation)</returns>
        [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public ServiceControllerClientControllerReturnValueController GetServiceControllerClientControllerReturnValueController(bool isIgnoreError = false) { return new ServiceControllerClientControllerReturnValueController(this, isIgnoreError); }
    }
}namespace AutoCSer.Document.NativeAOT.Service
{
        /// <summary>
        /// An example of generate the API definition of the client controller interface 
///            生成客户端控制器接口 API 定义示例
        /// </summary>
        [AutoCSer.Net.CommandServer.ServerControllerInterface(typeof(IServiceControllerMethodEnum))]
        public partial interface IServiceController { }
        /// <summary>
        /// An example of generate the API definition of the client controller interface 
///            生成客户端控制器接口 API 定义示例 (The method sequence number maps the enumeration type)
        /// </summary>
        public enum IServiceControllerMethodEnum
        {
            /// <summary>
            /// [0] One-time response API example 
///            一次性响应 API 示例
            /// int left 
            /// int right 
            /// 返回值 int 
            /// </summary>
            OneTimeResponse = 0,
            /// <summary>
            /// [1] Two-stage response API example 
///            二阶段响应 API 示例
            /// AutoCSer.Net.CommandServerCallback{string} callback For the callback wrapper in the first stage, the type of the penultimate parameter must be AutoCSer.Net.CommandServerCallback{T} 
///            第一阶段的回调委托包装，倒数第二个参数类型必须是 AutoCSer.Net.CommandServerCallback{T}
            /// AutoCSer.Net.CommandServerKeepCallback{int} keepCallback For the callback delegate wrapper of the second stage of continuous response, the last parameter type must be AutoCSer.Net.CommandServerKeepCallback{T} or AutoCSer.Net.CommandServerKeepCallbackCount{T} 
///            第二阶段持续响应的回调委托包装，最后一个参数类型必须是 AutoCSer.Net.CommandServerKeepCallback{T} 或者 AutoCSer.Net.CommandServerKeepCallbackCount{T}
            /// 返回值 int 
            /// </summary>
            TwoStageResponse = 1,
        }
}namespace AutoCSer.Document.CodeGenerator.MemoryDatabase
{
        /// <summary>
        /// An example of generate the API definition of the client node interface 
///            生成客户端节点接口 API 定义示例 client node interface
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.Document.CodeGenerator.MemoryDatabase.IServerNode))]
        public partial interface IServerNodeClientNode
        {
            /// <summary>
            /// Test API
            /// </summary>
            /// <param name="left"></param>
            /// <param name="right"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseParameterAwaiter<int> Add(int left, int right);
        }
        /// <summary>
        /// Get the direct return value API encapsulation (AutoCSer.Document.CodeGenerator.MemoryDatabase.IServerNode)
        /// </summary>
        public sealed partial class IServerNodeReturnValueNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientReturnValueNode<IServerNodeClientNode>
        {
            /// <summary>
            /// Get the direct return value API encapsulation (AutoCSer.Document.CodeGenerator.MemoryDatabase.IServerNode)
            /// </summary>
            /// <param name="node">Log stream persistence memory database client node cache for client singleton</param>
            /// <param name="isIgnoreError">A default value of false indicates that exceptions and error messages are not ignored</param>
            /// <param name="isSynchronousCallback">The default value of false indicates that the IO thread synchronization callback is not used; otherwise, the subsequent operations of the API call await are not allowed to have synchronization blocking logic or long-term CPU occupation operations</param>
            public IServerNodeReturnValueNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseClientNodeCache<IServerNodeClientNode> node, bool isIgnoreError = false, bool isSynchronousCallback = false) : base(node, isIgnoreError, isSynchronousCallback) { }
            /// <summary>
            /// Test API
            /// </summary>
            /// <param name="left"></param>
            /// <param name="right"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ResponseReturnValue<int> Add(int left, int right)
            {
                return base.node.Add(left, right).GetValue(isIgnoreError);
            }
        }
}namespace AutoCSer.Document.CodeGenerator.MemoryDatabase
{
        /// <summary>
        /// An example of generate the API definition of the local client node interface 
///            生成本地客户端节点接口 API 定义示例 local client node interface
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ClientNode(typeof(AutoCSer.Document.CodeGenerator.MemoryDatabase.ILocalNode))]
        public partial interface ILocalNodeLocalClientNode
        {
            /// <summary>
            /// Test API
            /// </summary>
            /// <param name="left"></param>
            /// <param name="right"></param>
            /// <returns></returns>
            AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceQueueNode<AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalResult<int>> Add(int left, int right);
        }
        /// <summary>
        /// Get the direct return value API encapsulation (AutoCSer.Document.CodeGenerator.MemoryDatabase.ILocalNode)
        /// </summary>
        public sealed partial class ILocalNodeReturnValueLocalNode : AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalClientReturnValueNode<ILocalNodeLocalClientNode>
        {
            /// <summary>
            /// Get the direct return value API encapsulation (AutoCSer.Document.CodeGenerator.MemoryDatabase.ILocalNode)
            /// </summary>
            /// <param name="node">Log stream persistence memory database local client node cache for client singleton</param>
            /// <param name="isIgnoreError">A default value of false indicates that exceptions and error messages are not ignored</param>
            /// <param name="isSynchronousCallback">The default value of false indicates that the IO thread synchronization callback is not used; otherwise, the subsequent operations of the API call await are not allowed to have synchronization blocking logic or long-term CPU occupation operations</param>
            public ILocalNodeReturnValueLocalNode(AutoCSer.CommandService.StreamPersistenceMemoryDatabaseLocalClientNodeCache<ILocalNodeLocalClientNode> node, bool isIgnoreError = false, bool isSynchronousCallback = false) : base(node, isIgnoreError, isSynchronousCallback) { }
            /// <summary>
            /// Test API
            /// </summary>
            /// <param name="left"></param>
            /// <param name="right"></param>
            /// <returns></returns>
            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            public AutoCSer.CommandService.StreamPersistenceMemoryDatabase.LocalServiceReturnValue<int> Add(int left, int right)
            {
                return base.getReturnValue(base.node.Add(left, right));
            }
        }
}namespace AutoCSer.Document.CodeGenerator.MemoryDatabase
{
        /// <summary>
        /// An example of generate the API definition of the local client node interface 
///            生成本地客户端节点接口 API 定义示例
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(ILocalNodeMethodEnum))]
        public partial interface ILocalNode { }
        /// <summary>
        /// An example of generate the API definition of the local client node interface 
///            生成本地客户端节点接口 API 定义示例 (Node method sequence number mapping enumeration type)
        /// </summary>
        public enum ILocalNodeMethodEnum
        {
            /// <summary>
            /// [0] Test API
            /// int left 
            /// int right 
            /// 返回值 int 
            /// </summary>
            Add = 0,
        }
}namespace AutoCSer.Document.CodeGenerator.MemoryDatabase
{
        /// <summary>
        /// An example of generate the API definition of the client node interface 
///            生成客户端节点接口 API 定义示例
        /// </summary>
        [AutoCSer.CommandService.StreamPersistenceMemoryDatabase.ServerNodeType(typeof(IServerNodeMethodEnum))]
        public partial interface IServerNode { }
        /// <summary>
        /// An example of generate the API definition of the client node interface 
///            生成客户端节点接口 API 定义示例 (Node method sequence number mapping enumeration type)
        /// </summary>
        public enum IServerNodeMethodEnum
        {
            /// <summary>
            /// [0] Test API
            /// int left 
            /// int right 
            /// 返回值 int 
            /// </summary>
            Add = 0,
        }
}
#endif