//This file is automatically generated by a program. Please do not modify it by yourself.
//本文件由程序自动生成，请不要自行修改
using System;
using System.Numerics;
using AutoCSer;

#if NoAutoCSer
#else
#pragma warning disable
namespace AutoCSer.Document.RemoteExpression
{
        /// <summary>
        /// Definition of the test service interface for remote expression delegates 
///            远程表达式委托测试服务接口定义 client interface
        /// </summary>
        public partial interface IRemoteExpressionDelegateServiceClientController
        {
            /// <summary>
            /// The test API of the parameterless delegate Action 
///            委托 Action 测试 API
            /// </summary>
            /// <param name="action">Remote expression delegate Action 
///            远程表达式委托 Action</param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> Action(AutoCSer.Net.CommandServer.RemoteExpressionAction action);
            /// <summary>
            /// The test API of the delegate Action{T} 
///            委托 Action{T} 测试 API
            /// </summary>
            /// <param name="action">Remote expression delegate Action{T} 
///            远程表达式委托 Action{T}</param>
            /// <param name="parameter"></param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> Action1(AutoCSer.Net.CommandServer.RemoteExpressionAction<int> action, int parameter);
            /// <summary>
            /// The test API of the delegate Action{T1, T2} 
///            委托 Action{T1, T2} 测试 API
            /// </summary>
            /// <param name="action">Remote expression delegate Action{T1, T2} 
///            远程表达式委托 Action{T1, T2}</param>
            /// <param name="parameter1"></param>
            /// <param name="parameter2"></param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> Action2(AutoCSer.Net.CommandServer.RemoteExpressionAction<int,int> action, int parameter1, int parameter2);
            /// <summary>
            /// The test API of the delegate Action{T1, T2, T3} 
///            委托 Action{T1, T2, T3} 测试 API
            /// </summary>
            /// <param name="action">Remote expression delegate Action{T1, T2, T3} 
///            远程表达式委托 Action{T1, T2, T3}</param>
            /// <param name="parameter1"></param>
            /// <param name="parameter2"></param>
            /// <param name="parameter3"></param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> Action3(AutoCSer.Net.CommandServer.RemoteExpressionAction<int,int,int> action, int parameter1, int parameter2, int parameter3);
            /// <summary>
            /// The test API of the parameterless delegate Func{T} 
///            无参委托 Func{T} 测试 API
            /// </summary>
            /// <param name="func">Remote expression delegate Func{RT} 
///            远程表达式委托 Func{RT}</param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> Func(AutoCSer.Net.CommandServer.RemoteExpressionFunc<int> func);
            /// <summary>
            /// The test API of the delegate Func{T, RT} 
///            委托 Func{T, RT} 测试 API
            /// </summary>
            /// <param name="func">Remote expression delegate Func{T, RT} 
///            远程表达式委托 Func{T, RT}</param>
            /// <param name="parameter"></param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> Func1(AutoCSer.Net.CommandServer.RemoteExpressionFunc<int,int> func, int parameter);
            /// <summary>
            /// The test API of the delegate Func{T1, T2, RT} 
///            委托 Func{T1, T2, RT} 测试 API
            /// </summary>
            /// <param name="func">Remote expression delegate Func{T1, T2, RT} 
///            远程表达式委托 Func{T1, T2, RT}</param>
            /// <param name="parameter1"></param>
            /// <param name="parameter2"></param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> Func2(AutoCSer.Net.CommandServer.RemoteExpressionFunc<int,int,int> func, int parameter1, int parameter2);
            /// <summary>
            /// The test API of the delegate Func{T1, T2, T3, RT} 
///            委托 Func{T1, T2, T3, RT} 测试 API
            /// </summary>
            /// <param name="func">Remote expression delegate Func{T1, T2, T3, RT} 
///            远程表达式委托 Func{T1, T2, T3, RT}</param>
            /// <param name="parameter1"></param>
            /// <param name="parameter2"></param>
            /// <param name="parameter3"></param>
            /// <returns></returns>
            AutoCSer.Net.ReturnCommand<int> Func3(AutoCSer.Net.CommandServer.RemoteExpressionFunc<int,int,int,int> func, int parameter1, int parameter2, int parameter3);
        }
}namespace AutoCSer.Document.RemoteExpression
{
        /// <summary>
        /// Definition of the test service interface for remote expression delegates 
///            远程表达式委托测试服务接口定义
        /// </summary>
        [AutoCSer.Net.CommandServer.ServerControllerInterface(typeof(IRemoteExpressionDelegateServiceMethodEnum))]
        public partial interface IRemoteExpressionDelegateService { }
        /// <summary>
        /// Definition of the test service interface for remote expression delegates 
///            远程表达式委托测试服务接口定义 (The method sequence number maps the enumeration type)
        /// </summary>
        public enum IRemoteExpressionDelegateServiceMethodEnum
        {
            /// <summary>
            /// [0] The test API of the parameterless delegate Action 
///            委托 Action 测试 API
            /// AutoCSer.Net.CommandServer.RemoteExpressionAction action Remote expression delegate Action 
///            远程表达式委托 Action
            /// 返回值 int 
            /// </summary>
            Action = 0,
            /// <summary>
            /// [1] The test API of the delegate Action{T} 
///            委托 Action{T} 测试 API
            /// AutoCSer.Net.CommandServer.RemoteExpressionAction{int} action Remote expression delegate Action{T} 
///            远程表达式委托 Action{T}
            /// int parameter 
            /// 返回值 int 
            /// </summary>
            Action1 = 1,
            /// <summary>
            /// [2] The test API of the delegate Action{T1, T2} 
///            委托 Action{T1, T2} 测试 API
            /// AutoCSer.Net.CommandServer.RemoteExpressionAction{int,int} action Remote expression delegate Action{T1, T2} 
///            远程表达式委托 Action{T1, T2}
            /// int parameter1 
            /// int parameter2 
            /// 返回值 int 
            /// </summary>
            Action2 = 2,
            /// <summary>
            /// [3] The test API of the delegate Action{T1, T2, T3} 
///            委托 Action{T1, T2, T3} 测试 API
            /// AutoCSer.Net.CommandServer.RemoteExpressionAction{int,int,int} action Remote expression delegate Action{T1, T2, T3} 
///            远程表达式委托 Action{T1, T2, T3}
            /// int parameter1 
            /// int parameter2 
            /// int parameter3 
            /// 返回值 int 
            /// </summary>
            Action3 = 3,
            /// <summary>
            /// [4] The test API of the parameterless delegate Func{T} 
///            无参委托 Func{T} 测试 API
            /// AutoCSer.Net.CommandServer.RemoteExpressionFunc{int} func Remote expression delegate Func{RT} 
///            远程表达式委托 Func{RT}
            /// 返回值 int 
            /// </summary>
            Func = 4,
            /// <summary>
            /// [5] The test API of the delegate Func{T, RT} 
///            委托 Func{T, RT} 测试 API
            /// AutoCSer.Net.CommandServer.RemoteExpressionFunc{int,int} func Remote expression delegate Func{T, RT} 
///            远程表达式委托 Func{T, RT}
            /// int parameter 
            /// 返回值 int 
            /// </summary>
            Func1 = 5,
            /// <summary>
            /// [6] The test API of the delegate Func{T1, T2, RT} 
///            委托 Func{T1, T2, RT} 测试 API
            /// AutoCSer.Net.CommandServer.RemoteExpressionFunc{int,int,int} func Remote expression delegate Func{T1, T2, RT} 
///            远程表达式委托 Func{T1, T2, RT}
            /// int parameter1 
            /// int parameter2 
            /// 返回值 int 
            /// </summary>
            Func2 = 6,
            /// <summary>
            /// [7] The test API of the delegate Func{T1, T2, T3, RT} 
///            委托 Func{T1, T2, T3, RT} 测试 API
            /// AutoCSer.Net.CommandServer.RemoteExpressionFunc{int,int,int,int} func Remote expression delegate Func{T1, T2, T3, RT} 
///            远程表达式委托 Func{T1, T2, T3, RT}
            /// int parameter1 
            /// int parameter2 
            /// int parameter3 
            /// 返回值 int 
            /// </summary>
            Func3 = 7,
        }
}
#endif